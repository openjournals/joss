<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2685</article-id>
<article-id pub-id-type="doi">10.21105/joss.02685</article-id>
<title-group>
<article-title>DE-Sim: an object-oriented, discrete-event simulation
tool for data-intensive modeling of complex systems in
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2772-1484</contrib-id>
<string-name>Arthur P. Goldberg</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-2605-5080</contrib-id>
<string-name>Jonathan R. Karr</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Icahn Institute for Data Science and Genomic Technology and
Department of Genetics and Genomic Sciences, Icahn School of Medicine at
Mount Sinai, New York, NY 10029, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-11-14">
<day>14</day>
<month>11</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>55</issue>
<fpage>2685</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>dynamical modeling</kwd>
<kwd>simulation</kwd>
<kwd>discrete-event simulation</kwd>
<kwd>object-oriented simulation</kwd>
<kwd>parallel discrete-event simulation</kwd>
<kwd>biochemical modeling</kwd>
<kwd>whole-cell modeling</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Recent advances in data collection, storage, and sharing have
  created unprecedented opportunities to gain insights into complex
  systems such as the biochemical networks that generate cellular
  behavior. Understanding the behavior of such systems will likely
  require larger and more comprehensive dynamical models that are based
  on a combination of first principles and empirical data. These models
  will likely represent each component and interaction using mechanistic
  approximations that are derived from first principles and calibrated
  with data. For example, dynamical models of biochemical networks often
  represent the interactions among molecules as chemical reactions whose
  rates are determined by combining approximations of chemical kinetics
  and empirically-observed reaction rates. Furthermore, complex models
  that represent multiple types of components and their interactions
  will require diverse approximations and large, heterogeneous datasets.
  New tools are needed to build and simulate such data-intensive
  models.</p>
  <p>One of the most promising methods for building and simulating
  data-intensive models is discrete-event simulation (DES). DES
  represents the dynamics of a system as a sequence of instantaneous
  events
  (<xref alt="Fishman, 2013" rid="ref-fishman2013discrete" ref-type="bibr">Fishman,
  2013</xref>). DES is used for a wide range of research, such as
  studying the dynamics of biochemical networks, characterizing the
  performance of computer networks, evaluating potential war strategies,
  and forecasting epidemics
  (<xref alt="Banks et al., 2009" rid="ref-banks2005discrete" ref-type="bibr">Banks
  et al., 2009</xref>). Although multiple DES tools exist, it remains
  difficult to build and simulate data-intensive models. First, it is
  cumbersome to create complex models with the low-level languages
  supported by many of the existing tools. Second, most of the existing
  tools are siloed from the ecosystems of data science tools that are
  exploding around Python and R.</p>
  <p>To address this problem, we developed DE-Sim
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/KarrLab/de_sim">https://github.com/KarrLab/de_sim</ext-link>),
  an open-source, object-oriented (OO), Python-based DES tool. DE-Sim
  helps researchers model complex systems by enabling them to use
  Python’s powerful OO features to manage multiple types of components
  and multiple types of interactions. By building upon Python, DE-Sim
  also makes it easy for researchers to employ Python’s powerful data
  science tools, such as pandas
  (<xref alt="McKinney, 2010" rid="ref-mckinney2010data" ref-type="bibr">McKinney,
  2010</xref>) and SciPy
  (<xref alt="Virtanen et al., 2020" rid="ref-virtanen2020scipy" ref-type="bibr">Virtanen
  et al., 2020</xref>), to use large, heterogeneous datasets to build
  comprehensive and detailed models. We anticipate that DE-Sim will
  enable a new generation of models that capture systems with
  unprecedented breadth and depth. For example, we are using DE-Sim to
  develop WC-Sim
  (<xref alt="Arthur P. Goldberg &amp; Karr, 2020" rid="ref-goldberg2020wc_sim" ref-type="bibr">Arthur
  P. Goldberg &amp; Karr, 2020</xref>), a multi-algorithmic simulation
  tool for whole-cell models
  (<xref alt="Arthur P. Goldberg et al., 2016" rid="ref-goldberg2016toward" ref-type="bibr">Arthur
  P. Goldberg et al., 2016</xref>;
  <xref alt="Arthur P. Goldberg et al., 2018" rid="ref-goldberg2018emerging" ref-type="bibr">Arthur
  P. Goldberg et al., 2018</xref>;
  <xref alt="Karr et al., 2012" rid="ref-karr2012whole" ref-type="bibr">Karr
  et al., 2012</xref>,
  <xref alt="2015" rid="ref-karr2015principles" ref-type="bibr">2015</xref>)
  that predict phenotype from genotype by capturing all of the
  biochemical activity in a cell.</p>
  <p>Here, we describe the need for new tools for building and
  simulating more comprehensive and more detailed models, and outline
  how DE-Sim addresses this need. In addition, we summarize the
  strengths of DE-Sim over existing DES tools, and we report the
  simulation performance of DE-Sim. Finally, we outline our plans to
  increase the performance of simulations executed by DE-Sim. A tutorial
  that describes how to build and simulate models with DE-Sim, examples,
  and documentation are available online, as described in the
  ‘Availability of DE-Sim’ section below.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Many scientific fields can now collect detailed data about the
  components of complex systems and their interactions. For example,
  deep sequencing has dramatically increased the availability of
  molecular data about biochemical networks. Combined with advances in
  computing, we believe that it is now possible to use this data and
  first principles to create comprehensive and detailed models that can
  provide new insights into complex systems. For example, deep
  sequencing and other molecular data can be used to build whole-cell
  models.</p>
  <p>Achieving such comprehensive and detailed models will likely
  require integrating disparate principles and diverse data. While there
  are several DES tools, such as SimEvents
  (<xref alt="Clune et al., 2006" rid="ref-clune2006discrete" ref-type="bibr">Clune
  et al., 2006</xref>) and SimPy
  (<xref alt="Matloff, 2008" rid="ref-matloff2008introduction" ref-type="bibr">Matloff,
  2008</xref>), and numerous tools for working with large, heterogeneous
  datasets, such as pandas and SQLAlchemy
  (<xref alt="Bayer, 2020" rid="ref-bayer2020sqlalchemy" ref-type="bibr">Bayer,
  2020</xref>), it is difficult to use these tools in combination. As a
  result, despite having most of the major ingredients, it remains
  difficult to build and simulate data-intensive models.</p>
</sec>
<sec id="de-sim-provides-critical-features-for-building-and-simulating-data-intensive-models">
  <title>DE-Sim provides critical features for building and simulating
  data-intensive models</title>
  <p>DE-Sim simplifies the construction and simulation of
  <italic>discrete-event models</italic> through several features.
  First, DE-Sim structures discrete-event models as OO programs
  (<xref alt="Zeigler, 1987" rid="ref-zeigler1987hierarchical" ref-type="bibr">Zeigler,
  1987</xref>). This structure enables researchers to use
  <italic>simulation object</italic> classes to encapsulate the complex
  logic required to represent <italic>model components</italic>, and use
  <italic>event message</italic> classes to encapsulate the logic
  required to describe the <italic>interactions</italic> among model
  components. With DE-Sim, users define simulation object classes by
  creating subclasses of DE-Sim’s simulation object class. DE-Sim
  simulation object classes can exploit all the features of Python
  classes. For example, users can encode relationships between the types
  of components in a model into hierarchies of subclasses of simulation
  objects. As a concrete example, a model of the biochemistry of RNA
  transcription and protein translation could be implemented using a
  superclass that captures the behavior of polymers and three subclasses
  that represent the specific properties of DNAs, RNAs, and proteins. By
  representing model components as Python simulation objects, DE-Sim
  makes it easy to model complex systems that contain multiple types of
  components by defining multiple classes of simulation objects. Users
  can then model arbitrarily many instances of each type of component by
  creating multiple instances of the corresponding simulation object
  class.</p>
  <p>Second, by building on top of Python, DE-Sim enables researchers to
  conveniently use Python’s extensive suite of data science tools to
  build models from heterogeneous, multidimensional datasets. For
  example, researchers can use tools such as ObjTables
  (<xref alt="Karr et al., 2020" rid="ref-karr2020objtables" ref-type="bibr">Karr
  et al., 2020</xref>), H5py, requests, SQLAlchemy, and pandas to access
  diverse data in spreadsheets, HDF5 files, REST APIs, databases, and
  other sources; use tools such as NumPy
  (<xref alt="Oliphant, 2015" rid="ref-oliphant2006guide" ref-type="bibr">Oliphant,
  2015</xref>) to integrate this data into a unified model; and use
  tools such as SciPy and NumPy to perform calculations during
  simulations of models. DE-Sim also facilitates the use of Python tools
  to analyze simulation results.</p>
  <p>In addition, DE-Sim provides several features to help users
  execute, analyze, and debug simulations:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Stop conditions:</bold> DE-Sim makes it easy to terminate
      simulations when specific criteria are reached. Researchers can
      specify stop conditions as functions that return true when a
      simulation should conclude.</p>
    </list-item>
    <list-item>
      <p><bold>Results checkpointing:</bold> The results of a simulation
      can be conveniently recorded by configuring periodic checkpoints
      of specified parts of the simulation’s state.</p>
    </list-item>
    <list-item>
      <p><bold>Reproducible simulations:</bold> To help researchers
      debug simulations, repeated executions of the same simulation with
      the same configuration and same random number generator seed
      produce the same results.</p>
    </list-item>
    <list-item>
      <p><bold>Space-time visualizations:</bold> DE-Sim generates
      space-time visualizations of simulation trajectories
      (<xref alt="Figure 1" rid="figU003Aphold_space_time_plot">Figure 1</xref>).
      These diagrams can help researchers understand and debug
      simulations.</p>
    </list-item>
  </list>
  <fig>
    <caption><p><bold>DE-Sim can generate space-time visualizations of
    simulation trajectories.</bold> This figure illustrates a space-time
    visualization of all of the events and messages in a simulation of
    the parallel hold (PHOLD) DES benchmark model
    (<xref alt="Fujimoto, 1990" rid="ref-fujimoto1990performance" ref-type="bibr">Fujimoto,
    1990</xref>) with three simulation objects. The timeline (black
    line) for each object shows its events (grey dots). The blue and
    purple arrows illustrate events scheduled by simulation objects for
    themselves and other objects, respectively. The code for this
    simulation is available in the DE-Sim Git repository.
    <styled-content id="figU003Aphold_space_time_plot"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/phold_space_time_plot.png" xlink:title="" />
  </fig>
  <p>We believe that these features can simplify and accelerate the
  development of complex, data-intensive models.</p>
</sec>
<sec id="comparison-of-de-sim-with-existing-discrete-event-simulation-tools">
  <title>Comparison of DE-Sim with existing discrete-event simulation
  tools</title>
  <p>Although multiple DES tools already exist, we believe that DE-Sim
  uniquely facilitates data-intensive modeling through a novel
  combination of OO modeling and support for numerous high-level data
  science tools.
  <xref alt="Figure 2" rid="figU003Acomparison">Figure 2</xref> compares
  the features and characteristics of DE-Sim with some of the most
  popular DES tools.</p>
  <fig>
    <caption><p><bold>Comparison of DE-Sim with some of the most popular
    DES tools.</bold> DE-Sim is the only open-source, OO DES tool based
    on Python. This combination of features makes DE-Sim uniquely
    suitable for creating and simulating complex, data-intensive models.
    <styled-content id="figU003Acomparison"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/comparison.png" xlink:title="" />
  </fig>
  <p>SimPy is an open-source DES tool that enables users to write
  functions that describe simulation processes (SimPy’s analog to
  DE-Sim’s simulation objects). As another Python-based tool, SymPy also
  makes it easy for researchers to leverage the Python ecosystem to
  build models. However, we believe that DE-Sim makes it easier for
  researchers to build complex models by enabling them to implement
  models as collections of classes rather than collections of functions.
  DE-Sim thereby enables modelers to use a Python object to encapsulate
  the state of a model component together with operations on the state,
  and use inheritance to share state and operations among related types
  of model components. In addition, we believe that DE-Sim is simpler to
  use because DE-Sim supports a uniform approach for scheduling events,
  whereas SimPy simulation processes must use two different approaches:
  one to schedule events for themselves, and another to schedule events
  for other processes.</p>
  <p>SimEvents is a library for DES within the MATLAB/Simulink
  environment. While SimEvents’ graphical interface makes it easy to
  create simple models, we believe that DE-Sim makes it easier to
  implement more complex models. By facilitating use of the many
  Python-based data science tools, DE-Sim makes it easier to use data to
  create models than SimEvents, which builds on a smaller ecosystem of
  data science tools.</p>
  <p>SystemC is a <monospace>C++</monospace>-based OO DES tool that is
  frequently used to model digital systems
  (<xref alt="Mueller et al., 2001" rid="ref-mueller2001simulation" ref-type="bibr">Mueller
  et al., 2001</xref>). While SystemC provides many of the same core
  features as DE-Sim, we believe that DE-Sim is more accessible to
  researchers than SystemC because DE-Sim builds upon Python, which is
  more popular than <monospace>C++</monospace> in many fields of
  research.</p>
  <p>SIMSCRIPT III
  (<xref alt="Rice et al., 2005" rid="ref-rice2005simscript" ref-type="bibr">Rice
  et al., 2005</xref>) and SIMUL8
  (<xref alt="Concannon et al., 2003" rid="ref-concannon2003dynamic" ref-type="bibr">Concannon
  et al., 2003</xref>) are commercial DES tools that define proprietary
  languages which researchers can use to implement models. SIMSCRIPT III
  is a general-purpose simulation language designed for modeling
  decision support systems in domains such as war-gaming,
  transportation, and manufacturing. We believe that DE-Sim is more
  powerful than SIMSCRIPT III for most scientific and engineering
  problems because it leverages Python’s robust data science
  ecosystem.</p>
  <p>SIMUL8 models business processes as workflows. It provides a
  powerful GUI for describing the flow of <italic>work items</italic>
  through a network of queues and servers, and includes tools to analyze
  and visualize the potentially stochastic behavior of a process. DE-Sim
  is more suitable than SIMUL8 for modeling scientific or engineering
  systems because modelers can use DE-Sim to describe processes that
  cannot be easily structured as workflows.</p>
</sec>
<sec id="performance-of-de-sim">
  <title>Performance of DE-Sim</title>
  <p><xref alt="Figure 3" rid="figU003Aperformance">Figure 3</xref>
  illustrates the performance of DE-Sim simulating a model of a cyclic
  messaging network over a range of network sizes. A messaging network
  consists of a ring of nodes. When a node handles an event, it
  schedules the same type of event for its forward neighbor with a one
  time-unit delay. Each simulation is initialized by sending a message
  to each node at the first time-unit. The code for this performance
  test is available in the DE-Sim Git repository, and in a Jupyter
  notebook at
  <ext-link ext-link-type="uri" xlink:href="https://sandbox.karrlab.org/tree/de_sim/4.%20DE-Sim%20performance%20test.ipynb">https://sandbox.karrlab.org/tree/de_sim</ext-link>.</p>
  <fig>
    <caption><p><bold>Performance of DE-Sim simulating a cyclic
    messaging network over a range of sizes.</bold> Each simulation was
    executed for 100 time-units. Each statistic represents the average
    of three simulation runs in a Docker container running on a 2.9 GHz
    Intel Core i5 processor.
    <styled-content id="figU003Aperformance"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/performance.png" xlink:title="" />
  </fig>
</sec>
<sec id="conclusion">
  <title>Conclusion</title>
  <p>In summary, DE-Sim is an open-source, object-oriented,
  discrete-event simulation tool implemented in Python that makes it
  easier for modelers to create and simulate complex, data-intensive
  models. First, DE-Sim enables researchers to conveniently use Python’s
  OO features to manage multiple types of model components and
  interactions among them. Second, DE-Sim enables researchers to
  directly use Python data science tools, such as pandas and SciPy, and
  large, heterogeneous datasets to construct models. Together, we
  anticipate that DE-Sim will accelerate the construction and simulation
  of unprecedented models of complex systems, leading to new scientific
  discoveries and engineering innovations.</p>
  <p>To further advance the simulation of data-intensive models, we aim
  to improve the simulation performance of DE-Sim. One potential
  direction is to use DE-Sim as a specification language for a parallel
  DES system such as ROSS
  (<xref alt="Carothers et al., 2000" rid="ref-carothers2000ross" ref-type="bibr">Carothers
  et al., 2000</xref>). This combination of DE-Sim and ROSS would enable
  modelers to both create models with DE-Sim’s high-level model
  specification semantics and quickly simulate models with ROSS.</p>
</sec>
<sec id="availability-of-de-sim">
  <title>Availability of DE-Sim</title>
  <p>DE-Sim is freely and openly available under the MIT license at the
  locations below.</p>
  <list list-type="bullet">
    <list-item>
      <p>Source code repository:
      <ext-link ext-link-type="uri" xlink:href="https://github.com/KarrLab/de_sim/">GitHub:
      KarrLab/de_sim</ext-link></p>
    </list-item>
    <list-item>
      <p>Jupyter notebook tutorials:
      <ext-link ext-link-type="uri" xlink:href="https://sandbox.karrlab.org/tree/de_sim">https://sandbox.karrlab.org/tree/de_sim</ext-link></p>
    </list-item>
    <list-item>
      <p>Documentation:
      <ext-link ext-link-type="uri" xlink:href="https://docs.karrlab.org/de_sim/">docs.karrlab.org/de_sim</ext-link></p>
    </list-item>
  </list>
  <p>DE-Sim requires
  <ext-link ext-link-type="uri" xlink:href="https://www.python.org/">Python</ext-link>
  3.7 or higher and
  <ext-link ext-link-type="uri" xlink:href="https://pip.pypa.io/">pip</ext-link>.
  This article discusses version 1.0.5 of DE-Sim.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We thank Yin Hoon Chew for her helpful feedback. This work was
  supported by the National Science Foundation [1649014 to JRK], the
  National Institutes of Health [R35GM119771 to JRK], and the Icahn
  Institute for Data Science and Genomic Technology.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-goldberg2016toward">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Goldberg</surname><given-names>Arthur P.</given-names></name>
          <name><surname>Chew</surname><given-names>Yin Hoon</given-names></name>
          <name><surname>Karr</surname><given-names>Jonathan R.</given-names></name>
        </person-group>
        <article-title>Toward scalable whole-cell modeling of human cells</article-title>
        <source>Proceedings of the ACM SIGSIM Conference on Principles of Advanced Discrete Simulation</source>
        <year iso-8601-date="2016">2016</year>
        <pub-id pub-id-type="doi">10.1145/2901378.2901402</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-zeigler1987hierarchical">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Zeigler</surname><given-names>Bernard P</given-names></name>
        </person-group>
        <article-title>Hierarchical, modular discrete-event modelling in an object-oriented environment</article-title>
        <source>Simulation</source>
        <year iso-8601-date="1987">1987</year>
        <volume>49</volume>
        <issue>5</issue>
        <pub-id pub-id-type="doi">10.1177/003754978704900506</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-banks2005discrete">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Banks</surname><given-names>Jerry</given-names></name>
          <name><surname>Carson II</surname><given-names>John</given-names></name>
          <name><surname>Nelson</surname><given-names>Barry</given-names></name>
          <name><surname>Nicol</surname><given-names>David</given-names></name>
        </person-group>
        <source>Discrete-event system simulation</source>
        <publisher-name>Pearson</publisher-name>
        <year iso-8601-date="2009">2009</year>
        <isbn>978-0136062127</isbn>
      </element-citation>
    </ref>
    <ref id="ref-mueller2001simulation">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Mueller</surname><given-names>Wolfgang</given-names></name>
          <name><surname>Ruf</surname><given-names>Juergen</given-names></name>
          <name><surname>Hoffmann</surname><given-names>Dirk</given-names></name>
          <name><surname>Gerlach</surname><given-names>Joachim</given-names></name>
          <name><surname>Kropf</surname><given-names>Thomas</given-names></name>
          <name><surname>Rosenstiehl</surname><given-names>Wolfgang</given-names></name>
        </person-group>
        <article-title>The simulation semantics of SystemC</article-title>
        <source>Proceedings of the Design, Automation and Test in Europe Conference and Exhibition</source>
        <year iso-8601-date="2001">2001</year>
        <pub-id pub-id-type="doi">10.1109/DATE.2001.915002</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-concannon2003dynamic">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Concannon</surname><given-names>Kieran H.</given-names></name>
          <name><surname>Hunter</surname><given-names>Kim I.</given-names></name>
          <name><surname>Tremble</surname><given-names>Jillian M.</given-names></name>
        </person-group>
        <article-title>Dynamic scheduling II: SIMUL8-planner simulation-based planning and scheduling</article-title>
        <publisher-name>Winter Simulation Conference</publisher-name>
        <publisher-loc>New Orleans, Louisiana</publisher-loc>
        <year iso-8601-date="2003">2003</year>
        <isbn>0780381327</isbn>
        <pub-id pub-id-type="doi">10.1109/WSC.2003.1261534</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-goldberg2020wc_sim">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Goldberg</surname><given-names>Arthur P.</given-names></name>
          <name><surname>Karr</surname><given-names>Jonathan R.</given-names></name>
        </person-group>
        <article-title>WC-Sim: A multi-algorithmic simulator for whole-cell models</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/KarrLab/wc_sim</uri>
      </element-citation>
    </ref>
    <ref id="ref-matloff2008introduction">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Matloff</surname><given-names>Norm</given-names></name>
        </person-group>
        <article-title>Introduction to discrete-event simulation and the SimPy language</article-title>
        <year iso-8601-date="2008">2008</year>
        <uri>https://web.cs.ucdavis.edu/~matloff/matloff/public_html/156/PLN/DESimIntro.pdf</uri>
      </element-citation>
    </ref>
    <ref id="ref-carothers2000ross">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Carothers</surname><given-names>C. D.</given-names></name>
          <name><surname>Bauer</surname><given-names>D.</given-names></name>
          <name><surname>Pearce</surname><given-names>S.</given-names></name>
        </person-group>
        <article-title>ROSS: A high-performance, low memory, modular Time Warp system</article-title>
        <source>Proceedings of the Fourteenth Workshop on Parallel and Distributed Simulation</source>
        <year iso-8601-date="2000">2000</year>
        <volume>62</volume>
        <uri>http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=847144</uri>
        <pub-id pub-id-type="doi">10.1109/PADS.2000.847144</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-fujimoto1990performance">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Fujimoto</surname><given-names>Richard M</given-names></name>
        </person-group>
        <article-title>Performance of Time Warp under synthetic workloads</article-title>
        <source>Proceedings of the SCS Multiconference on Distributed Simulations</source>
        <year iso-8601-date="1990">1990</year>
        <volume>22</volume>
        <uri>https://gdo149.llnl.gov/attachments/20776356/24674621.pdf</uri>
      </element-citation>
    </ref>
    <ref id="ref-goldberg2018emerging">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Goldberg</surname><given-names>Arthur P</given-names></name>
          <name><surname>Szigeti</surname><given-names>Balázs</given-names></name>
          <name><surname>Chew</surname><given-names>Yin Hoon</given-names></name>
          <name><surname>Sekar</surname><given-names>John AP</given-names></name>
          <name><surname>Roth</surname><given-names>Yosef D</given-names></name>
          <name><surname>Karr</surname><given-names>Jonathan R</given-names></name>
        </person-group>
        <article-title>Emerging whole-cell modeling principles and methods</article-title>
        <source>Current Opinion in Biotechnology</source>
        <year iso-8601-date="2018">2018</year>
        <volume>51</volume>
        <pub-id pub-id-type="doi">10.1016/j.copbio.2017.12.013</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-oliphant2006guide">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Oliphant</surname><given-names>Travis E</given-names></name>
        </person-group>
        <source>A guide to NumPy</source>
        <publisher-name>CreateSpace Independent Publishing Platform</publisher-name>
        <year iso-8601-date="2015">2015</year>
        <isbn>978-1517300074</isbn>
      </element-citation>
    </ref>
    <ref id="ref-mckinney2010data">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>McKinney</surname><given-names>Wes</given-names></name>
        </person-group>
        <article-title>Data structures for statistical computing in Python</article-title>
        <source>Proceedings of the 9th Python in Science Conference</source>
        <year iso-8601-date="2010">2010</year>
        <volume>445</volume>
        <pub-id pub-id-type="doi">10.25080/majora-92bf1922-00a</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-virtanen2020scipy">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
          <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis E</given-names></name>
          <name><surname>Haberland</surname><given-names>Matt</given-names></name>
          <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
          <name><surname>Cournapeau</surname><given-names>David</given-names></name>
          <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
          <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
        <source>Nature Methods</source>
        <year iso-8601-date="2020">2020</year>
        <volume>17</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-bayer2020sqlalchemy">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Bayer</surname><given-names>Michael</given-names></name>
        </person-group>
        <article-title>SQLAchemy-the database toolkit for Python</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.sqlalchemy.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-karr2015principles">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Karr</surname><given-names>Jonathan R</given-names></name>
          <name><surname>Takahashi</surname><given-names>Koichi</given-names></name>
          <name><surname>Funahashi</surname><given-names>Akira</given-names></name>
        </person-group>
        <article-title>The principles of whole-cell modeling</article-title>
        <source>Current Opinion in Microbiology</source>
        <year iso-8601-date="2015">2015</year>
        <volume>27</volume>
        <pub-id pub-id-type="doi">10.1016/j.mib.2015.06.004</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-karr2012whole">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Karr</surname><given-names>Jonathan R</given-names></name>
          <name><surname>Sanghvi</surname><given-names>Jayodita C</given-names></name>
          <name><surname>Macklin</surname><given-names>Derek N</given-names></name>
          <name><surname>Gutschow</surname><given-names>Miriam V</given-names></name>
          <name><surname>Jacobs</surname><given-names>Jared M</given-names></name>
          <name><surname>Bolival Jr</surname><given-names>Benjamin</given-names></name>
          <name><surname>Assad-Garcia</surname><given-names>Nacyra</given-names></name>
          <name><surname>Glass</surname><given-names>John I</given-names></name>
          <name><surname>Covert</surname><given-names>Markus W</given-names></name>
        </person-group>
        <article-title>A whole-cell computational model predicts phenotype from genotype</article-title>
        <source>Cell</source>
        <year iso-8601-date="2012">2012</year>
        <volume>150</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1016/j.cell.2012.05.044</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-fishman2013discrete">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Fishman</surname><given-names>George S</given-names></name>
        </person-group>
        <source>Discrete-event simulation: Modeling, programming, and analysis</source>
        <publisher-name>Springer Science &amp; Business Media</publisher-name>
        <year iso-8601-date="2013">2013</year>
        <isbn>978-0-387-95160-7</isbn>
      </element-citation>
    </ref>
    <ref id="ref-clune2006discrete">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Clune</surname><given-names>Michael I</given-names></name>
          <name><surname>Mosterman</surname><given-names>Pieter J</given-names></name>
          <name><surname>Cassandras</surname><given-names>Christos G</given-names></name>
        </person-group>
        <article-title>Discrete Event and Hybrid System Simulation with SimEvents</article-title>
        <source>Proceedings of the 8th international workshop on discrete event systems</source>
        <year iso-8601-date="2006">2006</year>
        <pub-id pub-id-type="doi">10.1109/wodes.2006.382398</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-rice2005simscript">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Rice</surname><given-names>Stephen V</given-names></name>
          <name><surname>Marjanski</surname><given-names>Ana</given-names></name>
          <name><surname>Markowitz</surname><given-names>Harry M</given-names></name>
          <name><surname>Bailey</surname><given-names>Stephen M</given-names></name>
        </person-group>
        <article-title>The SIMSCRIPT III programming language for modular object-oriented simulation</article-title>
        <source>Proceedings of the winter simulation conference, 2005.</source>
        <publisher-name>IEEE</publisher-name>
        <year iso-8601-date="2005">2005</year>
        <pub-id pub-id-type="doi">10.1109/wsc.2005.1574302</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-karr2020objtables">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Karr</surname><given-names>Jonathan R</given-names></name>
          <name><surname>Liebermeister</surname><given-names>Wolfram</given-names></name>
          <name><surname>Goldberg</surname><given-names>Arthur P</given-names></name>
          <name><surname>Sekar</surname><given-names>John A P</given-names></name>
          <name><surname>Shaikh</surname><given-names>Bilal</given-names></name>
        </person-group>
        <article-title>ObjTables: Structured supplementary spreadsheets that promote data quality, reuse, and integration</article-title>
        <source>arXiv</source>
        <year iso-8601-date="2020">2020</year>
        <uri>https://arxiv.org/abs/2005.05227</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
