<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1191</article-id>
<article-id pub-id-type="doi">10.21105/joss.01191</article-id>
<title-group>
<article-title>AxoPy: A Python Library for Implementing Human-Computer
Interface Experiments</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-9143-8459</contrib-id>
<string-name>Kenneth R. Lyons</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5602-1888</contrib-id>
<string-name>Benjamin W. L. Margolis</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of California, Davis</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-01-11">
<day>11</day>
<month>1</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>34</issue>
<fpage>1191</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>electrophysiology</kwd>
<kwd>electromyography</kwd>
<kwd>human-computer interface</kwd>
<kwd>prosthetics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>AxoPy is a system for creating human-computer interface experiments
  involving the use of electrophysiological signals, such as
  electromyography (EMG) or electroencephalography (EEG). It is intended
  to provide an infrastructure for rapidly developing common kinds of
  experiments while allowing for more complex, customized designs.</p>
  <p>In human-computer interface studies, experiment designs can often
  be organized as a series of tasks. Each task in the experiment may
  need to record data from a data acquisition system, log data, read
  data from previous tasks, and provide a graphical user interface.
  AxoPy offers a framework for implementing these tasks and their
  various input/output operations. While AxoPy doesn’t include as much
  built-in functionality as alternatives such as PsychoPy
  (<xref alt="Peirce, 2007" rid="ref-psychopy" ref-type="bibr">Peirce,
  2007</xref>) or Expyriment
  (<xref alt="Krause &amp; Lindemann, 2014" rid="ref-expyriment" ref-type="bibr">Krause
  &amp; Lindemann, 2014</xref>), the task-based design is convenient for
  implementing complex experiment designs that require many
  inter-dependent tasks and processing operations. It also emphasizes
  the use of Python code as the experiment implementation, encouraging
  best practices in creating experiments that are reproducible and
  extensible.</p>
  <p>AxoPy provides the following core functionality:</p>
  <list list-type="bullet">
    <list-item>
      <p>Graphical interface:</p>
      <p>Central to AxoPy is the graphical user interface providing
      visual feedback to the subject and controlling the flow of the
      experiment. The GUI is backed by PyQt5, and the researcher is free
      to implement customized graphical elements if those built in to
      AxoPy aren’t sufficient.</p>
    </list-item>
    <list-item>
      <p>Data acquisition:</p>
      <p>AxoPy establishes an API for communicating with input hardware,
      so all that’s usually needed is a bit of middleware to get going.
      A couple input devices are built in (keyboard, noise generator),
      so examples can be run without needing special hardware.</p>
    </list-item>
    <list-item>
      <p>Data storage:</p>
      <p>Data is stored in a file structure with common file formats
      (CSV and HDF5) so the researcher can a) start working with data as
      soon as an experiment session is over and b) standard tools
      (e.g. pandas, h5py) and even different programming languages can
      be used to work with datasets. A high-level interface to the
      storage structure is also provided to make traversing a dataset
      painless.</p>
    </list-item>
    <list-item>
      <p>Pipeline processing:</p>
      <p>Estimating intentions of a user from raw electrophysiological
      signals often involves a large number of processing operations.
      AxoPy facilitates flexible construction of pipelines that can be
      reused in different parts of an experiment and re-used for offline
      post-processing, and many processing operations are built in such
      as windowing, filtering, and feature extraction.</p>
    </list-item>
  </list>
  <p>AxoPy has been used to implement research experiments involving the
  use of surface electromyography for applications like prosthesis
  control
  (<xref alt="Lyons &amp; Joshi, 2018" rid="ref-LyonsJoshi-EMBC2018" ref-type="bibr">Lyons
  &amp; Joshi, 2018</xref>) and communication devices
  (<xref alt="O’Meara et al., 2019" rid="ref-OmearaEtAl-NER2019" ref-type="bibr">O’Meara
  et al., 2019</xref>).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-expyriment">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Krause</surname><given-names>F.</given-names></name>
          <name><surname>Lindemann</surname><given-names>O.</given-names></name>
        </person-group>
        <article-title>Expyriment: A Python library for cognitive and neuroscientific experiments</article-title>
        <source>Behavior Research Methods</source>
        <year iso-8601-date="2014">2014</year>
        <volume>46</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.3758/s13428-013-0390-6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-psychopy">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Peirce</surname><given-names>J. W.</given-names></name>
        </person-group>
        <article-title>PsychoPy - psychophysics software in Python</article-title>
        <source>Journal of Neuroscience Methods</source>
        <year iso-8601-date="2007">2007</year>
        <volume>162</volume>
        <issue>1–2</issue>
        <pub-id pub-id-type="doi">10.1016/j.jneumeth.2006.11.017</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-LyonsJoshi-EMBC2018">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Lyons</surname><given-names>Kenneth R.</given-names></name>
          <name><surname>Joshi</surname><given-names>Sanjay S.</given-names></name>
        </person-group>
        <article-title>Effects of mapping uncertainty on visuomotor adaptation to trial-by-trial perturbations with proportional myoelectric control</article-title>
        <source>2018 40th annual international conference of the IEEE engineering in medicine and biology society (EMBC)</source>
        <publisher-loc>Honolulu, HI, USA</publisher-loc>
        <year iso-8601-date="2018">2018</year>
        <pub-id pub-id-type="doi">10.1109/EMBC.2018.8513412</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-OmearaEtAl-NER2019">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>O’Meara</surname><given-names>Sarah M.</given-names></name>
          <name><surname>Shyr</surname><given-names>Megan C.</given-names></name>
          <name><surname>Lyons</surname><given-names>Kenneth R.</given-names></name>
          <name><surname>Joshi</surname><given-names>Sanjay S.</given-names></name>
        </person-group>
        <article-title>Comparing two different cursor control methods which use single-site surface electromyography</article-title>
        <source>2019 9th international IEEE/EMBS conference on neural engineering (NER)</source>
        <publisher-loc>San Francisco, CA, USA</publisher-loc>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
