<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3051</article-id>
<article-id pub-id-type="doi">10.21105/joss.03051</article-id>
<title-group>
<article-title>PyArmadillo: a streamlined linear algebra library for
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1839-5138</contrib-id>
<string-name>Jason Rumengan</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5760-5188</contrib-id>
<string-name>Terry Yue Zhuo</string-name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-0049-4501</contrib-id>
<string-name>Conrad Sanderson</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Data61/CSIRO, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Queensland University of Technology,
Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>University of New South Wales, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Griffith University, Australia</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-10-12">
<day>12</day>
<month>10</month>
<year>2021</year>
</pub-date>
<volume>6</volume>
<issue>66</issue>
<fpage>3051</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>linear algebra</kwd>
<kwd>scientific computing</kwd>
<kwd>mathematics</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>PyArmadillo is a linear algebra library for the Python language,
  with the aim of closely mirroring the programming interface of the
  widely used Armadillo C++ library, which in turn is deliberately
  similar to Matlab. PyArmadillo hence facilitates algorithm prototyping
  with Matlab-like syntax directly in Python, and relatively
  straightforward conversion of PyArmadillo-based Python code into
  performant Armadillo-based C++ code. The converted code can be used
  for purposes such as speeding up Python-based programs in conjunction
  with pybind11
  (<xref alt="Jakob et al., 2017" rid="ref-pybind11" ref-type="bibr">Jakob
  et al., 2017</xref>), or the integration of algorithms originally
  prototyped in Python into larger C++ codebases.</p>
  <p>PyArmadillo provides objects for matrices and cubes, as well as
  over 200 associated functions for manipulating data stored in the
  objects. Integer, floating point and complex numbers are supported.
  Various matrix factorisations are provided through integration with
  LAPACK
  (<xref alt="Anderson et al., 1999" rid="ref-anderson1999lapack" ref-type="bibr">Anderson
  et al., 1999</xref>), or one of its high performance drop-in
  replacements such as Intel MKL
  (<xref alt="Intel, 2016" rid="ref-Intel_MKL" ref-type="bibr">Intel,
  2016</xref>) or OpenBLAS
  (<xref alt="Zhang et al., 2016" rid="ref-Xianyi_OpenBLAS" ref-type="bibr">Zhang
  et al., 2016</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Armadillo is a popular linear algebra and scientific computing
  library for the C++ language
  (<xref alt="Sanderson &amp; Curtin, 2018" rid="ref-Sanderson_2018" ref-type="bibr">Sanderson
  &amp; Curtin, 2018</xref>,
  <xref alt="2016" rid="ref-Sanderson_2016" ref-type="bibr">2016</xref>)
  that has three main characteristics: (i) a high-level programming
  interface deliberately similar to Matlab, (ii) an expression evaluator
  (based on template meta-programming) that automatically combines
  several operations to increase speed and efficiency, and (iii) an
  efficient mapper between mathematical expressions and low-level
  BLAS/LAPACK functions
  (<xref alt="Psarras et al., 2021" rid="ref-Psarras_2021" ref-type="bibr">Psarras
  et al., 2021</xref>). Matlab is widely used in both industrial and
  academic contexts, providing a programming interface that allows
  mathematical expressions to be written in a concise and natural manner
  (<xref alt="Linge &amp; Langtangen, 2016" rid="ref-Linge_MatlabOctave_2016" ref-type="bibr">Linge
  &amp; Langtangen, 2016</xref>), especially in comparison to directly
  using low-level libraries such as LAPACK
  (<xref alt="Anderson et al., 1999" rid="ref-anderson1999lapack" ref-type="bibr">Anderson
  et al., 1999</xref>). In industrial settings, algorithms are often
  first prototyped in Matlab, before conversion into another language,
  such as C++, for the purpose of integration into products. The
  similarity of the programming interfaces between Armadillo and Matlab
  facilitates direct prototyping in C++, as well as the conversion of
  research code into production environments. Armadillo is also often
  used for implementing performance critical parts of software packages
  running under the R environment for statistical computing
  (<xref alt="R Core Team, 2020" rid="ref-R_manual" ref-type="bibr">R
  Core Team, 2020</xref>), via the RcppArmadillo bridge
  (<xref alt="Eddelbuettel &amp; Sanderson, 2014" rid="ref-Eddelbuettel_2014" ref-type="bibr">Eddelbuettel
  &amp; Sanderson, 2014</xref>).</p>
  <p>Over the past few years, Python has become popular for data science
  and machine learning. This partly stems from a rich ecosystem of
  supporting frameworks and packages, as well as lack of licensing costs
  in comparison to Matlab. Python allows relatively quick prototyping of
  algorithms, aided by its dynamically typed nature and the interpreted
  execution of user code, avoiding time-consuming compilation into
  machine code. However, for the joint purpose of algorithm prototyping
  and deployment, the flexibility of Python comes with two main issues:
  (i) slow execution speed due to the interpreted nature of the
  language, (ii) difficulty with integration of code written in Python
  into larger programs and/or frameworks written in another language.
  The first issue can be somewhat addressed through conversion of
  Python-based code into the low-level Cython language
  (<xref alt="Behnel et al., 2020" rid="ref-Cython" ref-type="bibr">Behnel
  et al., 2020</xref>). However, since Cython is closely tied with
  Python, conversion of Python code into C++ may be preferred as it also
  addresses the second issue, as well as providing a higher-level of
  abstraction.</p>
  <p>PyArmadillo is aimed at: (i) users that prefer compact Matlab-like
  syntax rather than the somewhat more verbose syntax provided by
  NumPy/SciPy
  (<xref alt="Harris et al., 2020" rid="ref-harris2020array" ref-type="bibr">Harris
  et al., 2020</xref>;
  <xref alt="Virtanen et al., 2020" rid="ref-2020SciPy-NMeth" ref-type="bibr">Virtanen
  et al., 2020</xref>), and (ii) users that would like a straightforward
  conversion path to performant C++ code. More specifically, PyArmadillo
  aims to closely mirror the programming interface of the Armadillo
  library, thereby facilitating the prototyping of algorithms with
  Matlab-like syntax directly in Python. Furthermore, PyArmadillo-based
  Python code can be easily converted into high-performance
  Armadillo-based C++ code. Due to the similarity of the programming
  interfaces, the risk of introducing bugs in the conversion process is
  considerably reduced. Moreover, conversion into C++ based code allows
  taking advantage of expression optimisation performed at compile-time
  by Armadillo, resulting in further speedups. The resulting code can be
  used in larger C++ programs, or used as a replacement of performance
  critical parts within a Python program with the aid of the pybind11
  interface layer
  (<xref alt="Jakob et al., 2017" rid="ref-pybind11" ref-type="bibr">Jakob
  et al., 2017</xref>).</p>
</sec>
<sec id="functionality">
  <title>Functionality</title>
  <p>PyArmadillo provides matrix objects for several distinct element
  types: integers, single- and double-precision floating point numbers,
  as well as complex numbers. In addition to matrices, PyArmadillo also
  has support for cubes (3 dimensional arrays), where each cube can be
  treated as an ordered set of matrices. Multi-dimensional arrays beyond
  3 dimensions are explicitly beyond the scope of PyArmadillo. Over 200
  functions are provided for manipulating data stored in the objects,
  covering the following areas: fundamental arithmetic operations,
  contiguous and non-contiguous submatrix views, diagonal views,
  element-wise functions, scalar/vector/matrix valued functions of
  matrices, generation of various vectors/matrices, statistics, signal
  processing, storage of matrices in files, matrix
  decompositions/factorisations, matrix inverses, and equation solvers.
  See the online documentation at
  <ext-link ext-link-type="uri" xlink:href="https://pyarma.sourceforge.io/docs.html">https://pyarma.sourceforge.io/docs.html</ext-link>
  for details. PyArmadillo matrices and cubes are convertible to/from
  NumPy arrays, allowing users to tap into the wider Python data science
  ecosystem, including plotting tools such as Matplotlib
  (<xref alt="Hunter, 2007" rid="ref-Hunter2007" ref-type="bibr">Hunter,
  2007</xref>).</p>
</sec>
<sec id="implementation">
  <title>Implementation</title>
  <p>PyArmadillo relies on pybind11
  (<xref alt="Jakob et al., 2017" rid="ref-pybind11" ref-type="bibr">Jakob
  et al., 2017</xref>) for interfacing C++ and Python, as well as on
  Armadillo for the underlying C++ implementation of matrix objects and
  associated functions. Due to its expressiveness and relatively
  straightforward use, pybind11 was selected over other interfacing
  approaches such as Boost.Python
  (<xref alt="Abrahams &amp; Grosse-Kunstleve, 2003" rid="ref-osti_815409" ref-type="bibr">Abrahams
  &amp; Grosse-Kunstleve, 2003</xref>) and manually writing C++
  extensions for Python. In turn, Armadillo interfaces with low-level
  routines in BLAS and LAPACK
  (<xref alt="Anderson et al., 1999" rid="ref-anderson1999lapack" ref-type="bibr">Anderson
  et al., 1999</xref>), where BLAS is used for matrix multiplication,
  and LAPACK is used for various matrix decompositions/factorisations
  and equation solvers. As the low-level routines in BLAS and LAPACK are
  considered as the <italic>de facto</italic> standard for numerical
  linear algebra, it is possible to use high performance drop-in
  replacements such as Intel MKL
  (<xref alt="Intel, 2016" rid="ref-Intel_MKL" ref-type="bibr">Intel,
  2016</xref>) and OpenBLAS
  (<xref alt="Zhang et al., 2016" rid="ref-Xianyi_OpenBLAS" ref-type="bibr">Zhang
  et al., 2016</xref>).</p>
  <p>PyArmadillo is open-source software, distributed under the Apache
  2.0 license
  (<xref alt="Apache Software Foundation, 2004" rid="ref-apache" ref-type="bibr">Apache
  Software Foundation, 2004</xref>), making it useful in both
  open-source and proprietary (closed-source) contexts
  (<xref alt="St. Laurent, 2008" rid="ref-Laurent_2008" ref-type="bibr">St. Laurent,
  2008</xref>). It can be obtained at
  <ext-link ext-link-type="uri" xlink:href="https://pyarma.sourceforge.io">https://pyarma.sourceforge.io</ext-link>
  or via the Python Package Index in precompiled form.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We would like to thank our colleagues at Data61/CSIRO (Dan
  Pagendam, Dan Gladish, Andrew Bolt, Piotr Szul) for providing feedback
  and testing.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-osti_815409">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Abrahams</surname><given-names>David</given-names></name>
          <name><surname>Grosse-Kunstleve</surname><given-names>Ralf W.</given-names></name>
        </person-group>
        <article-title>Building hybrid systems with Boost.Python</article-title>
        <source>C/C++ Users Journal</source>
        <year iso-8601-date="2003">2003</year>
        <volume>21</volume>
        <issue>7</issue>
        <uri>https://www.osti.gov/biblio/815409</uri>
      </element-citation>
    </ref>
    <ref id="ref-anderson1999lapack">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Anderson</surname><given-names>E.</given-names></name>
          <name><surname>Bai</surname><given-names>Z.</given-names></name>
          <name><surname>Bischof</surname><given-names>C.</given-names></name>
          <name><surname>Blackford</surname><given-names>S.</given-names></name>
          <name><surname>Demmel</surname><given-names>J.</given-names></name>
          <name><surname>Dongarra</surname><given-names>J.</given-names></name>
          <name><surname>Du Croz</surname><given-names>J.</given-names></name>
          <name><surname>Greenbaum</surname><given-names>A.</given-names></name>
          <name><surname>Hammarling</surname><given-names>S.</given-names></name>
          <name><surname>McKenney</surname><given-names>A.</given-names></name>
          <name><surname>Sorensen</surname><given-names>D.</given-names></name>
        </person-group>
        <source>LAPACK users’ guide</source>
        <publisher-name>Society for Industrial and Applied Mathematics</publisher-name>
        <year iso-8601-date="1999">1999</year>
        <uri>https://doi.org/10.1137/1.9780898719604</uri>
        <pub-id pub-id-type="doi">10.1137/1.9780898719604</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Eddelbuettel_2014">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Eddelbuettel</surname><given-names>Dirk</given-names></name>
          <name><surname>Sanderson</surname><given-names>Conrad</given-names></name>
        </person-group>
        <article-title>RcppArmadillo: Accelerating R with high-performance C++ linear algebra</article-title>
        <source>Computational Statistics &amp; Data Analysis</source>
        <year iso-8601-date="2014">2014</year>
        <volume>71</volume>
        <uri>https://doi.org/10.1016/j.csda.2013.02.005</uri>
        <pub-id pub-id-type="doi">10.1016/j.csda.2013.02.005</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-harris2020array">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
          <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
          <name><surname>Walt</surname><given-names>Stéfan J. van der</given-names></name>
          <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
          <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
          <name><surname>Cournapeau</surname><given-names>David</given-names></name>
          <name><surname>Wieser</surname><given-names>Eric</given-names></name>
          <name><surname>Taylor</surname><given-names>Julian</given-names></name>
          <name><surname>Berg</surname><given-names>Sebastian</given-names></name>
          <name><surname>Smith</surname><given-names>Nathaniel J.</given-names></name>
          <name><surname>Kern</surname><given-names>Robert</given-names></name>
          <name><surname>Picus</surname><given-names>Matti</given-names></name>
          <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
          <name><surname>Kerkwijk</surname><given-names>Marten H. van</given-names></name>
          <name><surname>Brett</surname><given-names>Matthew</given-names></name>
          <name><surname>Haldane</surname><given-names>Allan</given-names></name>
          <name><surname>R’ıo</surname><given-names>Jaime Fern’andez del</given-names></name>
          <name><surname>Wiebe</surname><given-names>Mark</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <name><surname>G’erard-Marchant</surname><given-names>Pierre</given-names></name>
          <name><surname>Sheppard</surname><given-names>Kevin</given-names></name>
          <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
          <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
          <name><surname>Abbasi</surname><given-names>Hameer</given-names></name>
          <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature</source>
        <publisher-name>Springer Science; Business Media LLC</publisher-name>
        <year iso-8601-date="2020-09">2020</year><month>09</month>
        <volume>585</volume>
        <issue>7825</issue>
        <uri>https://doi.org/10.1038/s41586-020-2649-2</uri>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Hunter2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
        </person-group>
        <article-title>Matplotlib: A 2D graphics environment</article-title>
        <source>Computing in Science &amp; Engineering</source>
        <publisher-name>IEEE COMPUTER SOC</publisher-name>
        <year iso-8601-date="2007">2007</year>
        <volume>9</volume>
        <issue>3</issue>
        <uri>https://doi.org/10.1109/MCSE.2007.55</uri>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Intel_MKL">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Intel</string-name>
        </person-group>
        <article-title>Math Kernel Library (MKL)</article-title>
        <year iso-8601-date="2016">2016</year>
        <uri>http://software.intel.com/en-us/intel-mkl/</uri>
      </element-citation>
    </ref>
    <ref id="ref-Linge_MatlabOctave_2016">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Linge</surname><given-names>Svein</given-names></name>
          <name><surname>Langtangen</surname><given-names>Hans Petter</given-names></name>
        </person-group>
        <source>Programming for computations - MATLAB/Octave</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <uri>https://doi.org/10.1007/978-3-319-32452-4</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-319-32452-4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-pybind11">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jakob</surname><given-names>Wenzel</given-names></name>
          <name><surname>Rhinelander</surname><given-names>Jason</given-names></name>
          <name><surname>Moldovan</surname><given-names>Dean</given-names></name>
        </person-group>
        <article-title>pybind11 – seamless operability between C++11 and Python</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <uri>https://github.com/pybind/pybind11</uri>
      </element-citation>
    </ref>
    <ref id="ref-Sanderson_2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sanderson</surname><given-names>Conrad</given-names></name>
          <name><surname>Curtin</surname><given-names>Ryan</given-names></name>
        </person-group>
        <article-title>Armadillo: A template-based C++ library for linear algebra</article-title>
        <source>Journal of Open Source Software</source>
        <year iso-8601-date="2016">2016</year>
        <volume>1</volume>
        <uri>https://doi.org/10.21105/joss.00026</uri>
        <pub-id pub-id-type="doi">10.21105/joss.00026</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Sanderson_2018">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Sanderson</surname><given-names>Conrad</given-names></name>
          <name><surname>Curtin</surname><given-names>Ryan</given-names></name>
        </person-group>
        <article-title>A user-friendly hybrid sparse matrix class in C++</article-title>
        <source>Lecture notes in computer science (LNCS), Vol. 10931</source>
        <year iso-8601-date="2018">2018</year>
        <uri>https://doi.org/10.1007/978-3-319-96418-8_50</uri>
        <pub-id pub-id-type="doi">10.1007/978-3-319-96418-8_50</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2020SciPy-NMeth">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Virtanen</surname><given-names>Pauli</given-names></name>
          <name><surname>Gommers</surname><given-names>Ralf</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis E.</given-names></name>
          <name><surname>Haberland</surname><given-names>Matt</given-names></name>
          <name><surname>Reddy</surname><given-names>Tyler</given-names></name>
          <name><surname>Cournapeau</surname><given-names>David</given-names></name>
          <name><surname>Burovski</surname><given-names>Evgeni</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <name><surname>Weckesser</surname><given-names>Warren</given-names></name>
          <name><surname>Bright</surname><given-names>Jonathan</given-names></name>
          <name><surname>van der Walt</surname><given-names>Stéfan J.</given-names></name>
          <name><surname>Brett</surname><given-names>Matthew</given-names></name>
          <name><surname>Wilson</surname><given-names>Joshua</given-names></name>
          <name><surname>Millman</surname><given-names>K. Jarrod</given-names></name>
          <name><surname>Mayorov</surname><given-names>Nikolay</given-names></name>
          <name><surname>Nelson</surname><given-names>Andrew R. J.</given-names></name>
          <name><surname>Jones</surname><given-names>Eric</given-names></name>
          <name><surname>Kern</surname><given-names>Robert</given-names></name>
          <name><surname>Larson</surname><given-names>Eric</given-names></name>
          <name><surname>Carey</surname><given-names>C J</given-names></name>
          <name><surname>Polat</surname><given-names>İlhan</given-names></name>
          <name><surname>Feng</surname><given-names>Yu</given-names></name>
          <name><surname>Moore</surname><given-names>Eric W.</given-names></name>
          <name><surname>VanderPlas</surname><given-names>Jake</given-names></name>
          <name><surname>Laxalde</surname><given-names>Denis</given-names></name>
          <name><surname>Perktold</surname><given-names>Josef</given-names></name>
          <name><surname>Cimrman</surname><given-names>Robert</given-names></name>
          <name><surname>Henriksen</surname><given-names>Ian</given-names></name>
          <name><surname>Quintero</surname><given-names>E. A.</given-names></name>
          <name><surname>Harris</surname><given-names>Charles R.</given-names></name>
          <name><surname>Archibald</surname><given-names>Anne M.</given-names></name>
          <name><surname>Ribeiro</surname><given-names>Antônio H.</given-names></name>
          <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
          <name><surname>van Mulbregt</surname><given-names>Paul</given-names></name>
          <string-name>SciPy 1.0 Contributors</string-name>
        </person-group>
        <article-title>SciPy 1.0: Fundamental algorithms for scientific computing in Python</article-title>
        <source>Nature Methods</source>
        <year iso-8601-date="2020">2020</year>
        <volume>17</volume>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Xianyi_OpenBLAS">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Zhang</surname><given-names>Xianyi</given-names></name>
          <name><surname>Wang</surname><given-names>Qian</given-names></name>
          <name><surname>Saar</surname><given-names>Werner</given-names></name>
        </person-group>
        <article-title>OpenBLAS: An optimized BLAS library</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <uri>https://github.com/xianyi/openblas</uri>
      </element-citation>
    </ref>
    <ref id="ref-apache">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Apache Software Foundation</string-name>
        </person-group>
        <article-title>Apache license 2.0</article-title>
        <year iso-8601-date="2004">2004</year>
        <uri>http://www.apache.org/licenses/LICENSE-2.0</uri>
      </element-citation>
    </ref>
    <ref id="ref-Laurent_2008">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>St. Laurent</surname><given-names>Andrew</given-names></name>
        </person-group>
        <source>Understanding open source and free software licensing</source>
        <publisher-name>O’Reilly Media</publisher-name>
        <year iso-8601-date="2008">2008</year>
      </element-citation>
    </ref>
    <ref id="ref-R_manual">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>R Core Team</string-name>
        </person-group>
        <source>R: A language and environment for statistical computing</source>
        <publisher-name>R Foundation for Statistical Computing</publisher-name>
        <publisher-loc>Vienna, Austria</publisher-loc>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.R-project.org</uri>
      </element-citation>
    </ref>
    <ref id="ref-Psarras_2021">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Psarras</surname><given-names>Christos</given-names></name>
          <name><surname>Barthels</surname><given-names>Henrik</given-names></name>
          <name><surname>Bientinesi</surname><given-names>Paolo</given-names></name>
        </person-group>
        <article-title>The linear algebra mapping problem: Current state of linear algebra languages and libraries</article-title>
        <source>arXiv:1911.09421v2</source>
        <year iso-8601-date="2021">2021</year>
        <uri>https://arxiv.org/abs/1911.09421</uri>
      </element-citation>
    </ref>
    <ref id="ref-Cython">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Behnel</surname><given-names>Stefan</given-names></name>
          <name><surname>Bradshaw</surname><given-names>Robert</given-names></name>
          <name><surname>Dalcín</surname><given-names>Lisandro</given-names></name>
          <name><surname>Florisson</surname><given-names>Mark</given-names></name>
          <name><surname>Makarov</surname><given-names>Vitja</given-names></name>
          <name><surname>Seljebotn</surname><given-names>Dag Sverre</given-names></name>
        </person-group>
        <article-title>Cython</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://cython.org</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
