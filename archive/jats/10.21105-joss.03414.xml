<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3414</article-id>
<article-id pub-id-type="doi">10.21105/joss.03414</article-id>
<title-group>
<article-title>Leafmap: A Python package for interactive mapping and
geospatial analysis with minimal coding in a Jupyter
environment</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5437-4073</contrib-id>
<string-name>Qiusheng Wu</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Geography, University of Tennessee,
Knoxville, TN 37996, United States</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-06-22">
<day>22</day>
<month>6</month>
<year>2021</year>
</pub-date>
<volume>6</volume>
<issue>63</issue>
<fpage>3414</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>geospatial</kwd>
<kwd>ipyleaflet</kwd>
<kwd>mapping</kwd>
<kwd>Jupyter</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><bold>Leafmap</bold> is a Python package for interactive mapping
  and geospatial analysis with minimal coding in a Jupyter environment.
  It is a spin-off project of the
  <ext-link ext-link-type="uri" xlink:href="https://geemap.org">geemap</ext-link>
  Python package
  (<xref alt="Wu, 2020" rid="ref-Wu2020" ref-type="bibr">Wu,
  2020</xref>), which was designed specifically to work with
  <ext-link ext-link-type="uri" xlink:href="https://earthengine.google.com">Google
  Earth Engine</ext-link> (GEE)
  (<xref alt="Gorelick et al., 2017" rid="ref-Gorelick2017" ref-type="bibr">Gorelick
  et al., 2017</xref>). However, not everyone in the geospatial
  community has access to the GEE cloud computing platform. Leafmap is
  designed to fill this gap for non-GEE users. It is a free and
  open-source Python package that enables users to analyze and visualize
  geospatial data with minimal coding in a Jupyter environment, such as
  Google Colab, Jupyter Notebook, and JupyterLab. Leafmap is built upon
  several open-source packages, such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/python-visualization/folium">folium</ext-link>
  (<xref alt="Filipe et al., 2021" rid="ref-Filipe2021" ref-type="bibr">Filipe
  et al., 2021</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/jupyter-widgets/ipyleaflet">ipyleaflet</ext-link>
  (<xref alt="Renou et al., 2021" rid="ref-Renou2021" ref-type="bibr">Renou
  et al., 2021</xref>) (for creating interactive maps),
  <ext-link ext-link-type="uri" xlink:href="https://github.com/jblindsay/whitebox-tools">WhiteboxTools</ext-link>
  (<xref alt="Lindsay, 2018" rid="ref-Lindsay2018" ref-type="bibr">Lindsay,
  2018</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/giswqs/whiteboxgui">whiteboxgui</ext-link>
  (for analyzing geospatial data), and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/jupyter-widgets/ipywidgets">ipywidgets</ext-link>
  (<xref alt="Grout &amp; et al., 2021" rid="ref-Grout2021" ref-type="bibr">Grout
  &amp; et al., 2021</xref>) (for designing interactive graphical user
  interface [GUI]). Leafmap has a toolset with various interactive tools
  that allow users to load vector and raster data onto the map without
  coding. In addition, users can use the powerful analytical backend
  (i.e., WhiteboxTools) to perform geospatial analysis directly within
  the leafmap user interface without writing a single line of code. The
  WhiteboxTools library currently contains <bold>468</bold> tools for
  advanced geospatial analysis, such as
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html">GIS
  Analysis</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html">Geomorphometric
  Analysis</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html">Hydrological
  Analysis</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html">LiDAR
  Data Analysis</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html">Mathematical
  and Statistical Analysis</ext-link>, and
  <ext-link ext-link-type="uri" xlink:href="https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html">Stream
  Network Analysis</ext-link>.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>There is a plethora of Python packages for geospatial analysis,
  such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/geopandas/geopandas">geopandas</ext-link>
  for vector data analysis
  (<xref alt="Jordahl et al., 2021" rid="ref-Jordahl2021" ref-type="bibr">Jordahl
  et al., 2021</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/pydata/xarray">xarray</ext-link>
  for raster data analysis
  (<xref alt="Hoyer &amp; Hamman, 2017" rid="ref-Hoyer2017" ref-type="bibr">Hoyer
  &amp; Hamman, 2017</xref>). However, few Python packages provide
  interactive GUIs for loading geospatial data in a Jupyter environment.
  It might take many lines to code to load and display geospatial data
  with various file formats on an interactive map, which can be a
  challenging task for novice users with limited coding skills. There
  are also some notable Python packages for visualizing geospatial data
  in a Jupyter environment, such as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/plotly/plotly.py">plotly</ext-link>
  (<xref alt="Mease &amp; et al., 2021" rid="ref-Mease2021" ref-type="bibr">Mease
  &amp; et al., 2021</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://docs.kepler.gl/docs/keplergl-jupyter">kepler.gl</ext-link>
  (<xref alt="He &amp; et al., 2021" rid="ref-He2021" ref-type="bibr">He
  &amp; et al., 2021</xref>). However, plotly is designed for displaying
  static data, which lacks bidirectional communication between the
  front-end and the backend. Kepler.gl provides unique 3D functionality
  for visualizing large-scale geospatial datasets, but it lacks tools
  for performing geospatial analysis, such as hydrological analysis and
  LiDAR data analysis. In contrast, leafmap provides many convenient
  functions for loading and visualizing geospatial datasets with only
  one line of code. Users can also use the interactive GUI to load
  geospatial datasets without coding. Leafmap is intended for anyone who
  would like to analyze and visualize geospatial data interactively in a
  Jupyter environment. It is particularly suited for novice users with
  limited programming skills. Advanced programmers can also find leafmap
  a useful tool for analyzing geospatial data and building interactive
  web apps.</p>
</sec>
<sec id="leafmap-plotting-backends">
  <title>Leafmap Plotting Backends</title>
  <p><bold>Leafmap</bold> has three plotting backends, including
  <ext-link ext-link-type="uri" xlink:href="https://github.com/python-visualization/folium">folium</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/jupyter-widgets/ipyleaflet">ipyleaflet</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/heremaps/here-map-widget-for-jupyter">here-map-widget-for-jupyter</ext-link>
  (<xref alt="Kharude &amp; Steenbergen, 2021" rid="ref-Kharude2021" ref-type="bibr">Kharude
  &amp; Steenbergen, 2021</xref>). An interactive map created using one
  of the plotting backends can be displayed in a Jupyter environment,
  such as Google Colab, Jupyter Notebook, and JupyterLab. By default,
  <monospace>import leafmap</monospace> in
  <ext-link ext-link-type="uri" xlink:href="https://gishub.org/leafmap-pangeo">Jupyter
  Notebook</ext-link> and
  <ext-link ext-link-type="uri" xlink:href="https://gishub.org/leafmap-binder">JupyterLab</ext-link>
  will use the <monospace>ipyleaflet</monospace> plotting backend,
  whereas <monospace>import leafmap</monospace> in
  <ext-link ext-link-type="uri" xlink:href="https://gishub.org/leafmap-colab">Google
  Colab</ext-link> will use the <monospace>folium</monospace> plotting
  backend. Note that Google Colab does not yet support custom widgets,
  such as <monospace>ipyleaflet</monospace> and
  <monospace>heremap widget</monospace>
  (<ext-link ext-link-type="uri" xlink:href="https://github.com/googlecolab/colabtools/issues/498#issuecomment-695335421">source</ext-link>).
  Therefore, interactive maps created using the
  <monospace>ipyleaflet</monospace> and
  <monospace>heremap widget</monospace> backends won’t show up in Google
  Colab, even though the code might run successfully without any
  errors.</p>
  <p>The three plotting backends do not offer equal functionality. The
  <monospace>ipyleaflet</monospace> plotting backend provides the
  richest interactive functionality, including the custom toolset for
  loading, analyzing, and visualizing geospatial data interactively
  without coding. For example, users can add vector data (e.g., GeoJSON,
  Shapefile, KML, GeoDataFrame) and raster data (e.g., GeoTIFF, Cloud
  Optimized GeoTIFF [COG]) to the map with a few clicks (see Figure 1).
  Users can also perform geospatial analysis using the WhiteboxTools GUI
  with 468 geoprocessing tools directly within the map interface (see
  Figure 2). Other interactive functionality (e.g., split-panel map,
  linked map, time slider, time-series inspector) can also be useful for
  visualizing geospatial data. The <monospace>ipyleaflet</monospace>
  package is built upon <monospace>ipywidgets</monospace> and allows
  bidirectional communication between the front-end and the backend
  enabling the use of the map to capture user input
  (<ext-link ext-link-type="uri" xlink:href="https://blog.jupyter.org/interactive-gis-in-jupyter-with-ipyleaflet-52f9657fa7a">source</ext-link>).
  In contrast, <monospace>folium</monospace> has relatively limited
  interactive functionality. It is meant for displaying static data
  only. The <monospace>folium</monospace> plotting backend is included
  in this package to support using <monospace>leafmap</monospace> in
  Google Colab. Note that the aforementioned custom toolset and
  interactive functionality are not available for the
  <monospace>folium</monospace> plotting backend. Compared with
  <monospace>ipyleaflet</monospace> and <monospace>folium</monospace>,
  the <monospace>heremap widget</monospace> plotting backend provides
  some unique
  <ext-link ext-link-type="uri" xlink:href="https://github.com/heremaps/here-map-widget-for-jupyter#use-ipywidgets-controls-to-build-an-interactive-gui">3D
  functionality</ext-link> for visualizing geospatial data. An
  <ext-link ext-link-type="uri" xlink:href="https://developer.here.com/documentation/identity-access-management/dev_guide/topics/dev-apikey.html">API
  key</ext-link> from the
  <ext-link ext-link-type="uri" xlink:href="https://developer.here.com/">Here
  Developer Portal</ext-link> is required to use
  <monospace>heremap</monospace>.</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="https://i.imgur.com/pe7CoC7.png" />
  <bold>Figure 1.</bold> The leafmap user interface built upon
  ipyleaflet and ipywidgets.</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="https://i.imgur.com/5GzDG3W.png" />
  <bold>Figure 2.</bold> The WhiteboxTools graphical user interface
  integrated into leafmap.</p>
</sec>
<sec id="leafmap-modules">
  <title>Leafmap Modules</title>
  <p>The key functionality of the leafmap Python package is organized
  into nine modules as shown in the table below.</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="10%" />
        <col width="90%" />
      </colgroup>
      <thead>
        <tr>
          <th>Module</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>basemaps</td>
          <td>A collection of XYZ and WMS tile layers to be used as
          basemaps</td>
        </tr>
        <tr>
          <td>colormaps</td>
          <td>Commonly used colormaps and palettes for visualizing
          geospatial data</td>
        </tr>
        <tr>
          <td>common</td>
          <td>Functions being used by multiple plotting backends to
          process geospatial data</td>
        </tr>
        <tr>
          <td>foliumap</td>
          <td>A plotting backend built upon the folium Python
          package</td>
        </tr>
        <tr>
          <td>heremap</td>
          <td>A plotting backend built upon the
          here-map-widget-for-jupyter</td>
        </tr>
        <tr>
          <td>leafmap</td>
          <td>The default plotting backend built upon the ipyleaflet
          Python package</td>
        </tr>
        <tr>
          <td>legends</td>
          <td>Built-in legends for commonly used geospatial
          datasets</td>
        </tr>
        <tr>
          <td>osm</td>
          <td>Functions for extracting and downloading OpenStreetMap
          data</td>
        </tr>
        <tr>
          <td>toolbar</td>
          <td>A custom toolset with interactive tools built upon
          ipywidgets and ipyleaflet</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</sec>
<sec id="leafmap-tutorials">
  <title>Leafmap Tutorials</title>
  <p>Comprehensive documentation and API reference of the leafmap
  package is available at https://geemap.org. A list of notebook
  examples and video tutorials for using leafmap can be found at
  https://leafmap.org/tutorials. Users can also try out leafmap using
  Google Colab (https://gishub.org/leafmap-colab) and Binder
  (https://gishub.org/leafmap-pangeo) using an Internet browser without
  having to set up the Python environment and install leafmap on their
  computer.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The author would like to thank the developers of ipyleaflet and
  ipywidgets, which empower the interactive mapping functionality of
  leafmap, including
  <ext-link ext-link-type="uri" xlink:href="https://github.com/martinRenou">Martin
  Renou</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/davidbrochart">David
  Brochart</ext-link>, and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SylvainCorlay">Sylvain
  Corlay</ext-link>. The authors would also like to express thanks to
  <ext-link ext-link-type="uri" xlink:href="https://github.com/jblindsay">John
  Lindsay</ext-link> for developing the WhiteboxTools library, which
  serves as the geospatial analysis backend of leafmap. Special thanks
  go to all leafmap contributors, especially
  <ext-link ext-link-type="uri" xlink:href="https://github.com/sackh">Sachin
  Kharude</ext-link> for contributing the heremap plotting backend to
  leafmap. Last but not least, the author would like to thank
  <ext-link ext-link-type="uri" xlink:href="https://github.com/TomasBeuzen">Tomas
  Beuzen</ext-link> and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/martinfleis">Martin
  Fleischmann</ext-link> for reviewing this paper and the
  <monospace>leafmap</monospace> package. Their constructive comments
  greatly improved the quality of the source code and documentation of
  the <monospace>leafmap</monospace> package as well as this paper.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Gorelick2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gorelick</surname><given-names>Noel</given-names></name>
          <name><surname>Hancher</surname><given-names>Matt</given-names></name>
          <name><surname>Dixon</surname><given-names>Mike</given-names></name>
          <name><surname>Ilyushchenko</surname><given-names>Simon</given-names></name>
          <name><surname>Thau</surname><given-names>David</given-names></name>
          <name><surname>Moore</surname><given-names>Rebecca</given-names></name>
        </person-group>
        <article-title>Google Earth Engine: Planetary-scale geospatial analysis for everyone</article-title>
        <source>Remote Sensing of Environment</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2017-12">2017</year><month>12</month>
        <volume>202</volume>
        <issn>0034-4257</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S0034425717302900</uri>
        <pub-id pub-id-type="doi">10.1016/j.rse.2017.06.031</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Wu2020">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Wu</surname><given-names>Qiusheng</given-names></name>
        </person-group>
        <article-title>geemap: A Python package for interactive mapping with Google Earth Engine</article-title>
        <source>The Journal of Open Source Software</source>
        <year iso-8601-date="2020">2020</year>
        <volume>5</volume>
        <issue>51</issue>
        <uri>https://doi.org/10.21105/joss.02305</uri>
        <pub-id pub-id-type="doi">10.21105/joss.02272</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Lindsay2018">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Lindsay</surname><given-names>John B</given-names></name>
        </person-group>
        <article-title>WhiteboxTools User Manual</article-title>
        <year iso-8601-date="2018">2018</year>
        <uri>https://jblindsay.github.io/wbt_book</uri>
      </element-citation>
    </ref>
    <ref id="ref-Hoyer2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hoyer</surname><given-names>Stephan</given-names></name>
          <name><surname>Hamman</surname><given-names>Joe</given-names></name>
        </person-group>
        <article-title>xarray: ND labeled arrays and datasets in Python</article-title>
        <source>Journal of Open Research Software</source>
        <publisher-name>Ubiquity Press</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>5</volume>
        <issue>1</issue>
        <uri>https://openresearchsoftware.metajnl.com/articles/148/</uri>
        <pub-id pub-id-type="doi">10.5334/jors.148</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Jordahl2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jordahl</surname><given-names>Kelsey</given-names></name>
          <name><surname>Van den Bossche</surname><given-names>Joris</given-names></name>
          <name><surname>Fleischmann</surname><given-names>Martin</given-names></name>
          <name><surname>McBride</surname><given-names>James</given-names></name>
          <name><surname>Wasserman</surname><given-names>Jacob</given-names></name>
          <name><surname>Gerard</surname><given-names>Jeffrey</given-names></name>
        </person-group>
        <article-title>geopandas/geopandas: v0.9.0</article-title>
        <year iso-8601-date="2021">2021</year>
        <uri>https://zenodo.org/record/4569086</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.4569086</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Filipe2021">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Filipe</string-name>
          <name><surname>Journois</surname><given-names>Martin</given-names></name>
          <string-name>Frank</string-name>
          <name><surname>Story</surname><given-names>Rob</given-names></name>
          <name><surname>Gardiner</surname><given-names>James</given-names></name>
          <name><surname>Rump</surname><given-names>Halfdan</given-names></name>
          <name><surname>Bird</surname><given-names>Andrew</given-names></name>
          <name><surname>Lima</surname><given-names>Antonio</given-names></name>
          <name><surname>Cano</surname><given-names>Joshua</given-names></name>
          <string-name>dbf</string-name>
          <name><surname>Leonel</surname><given-names>Juliana</given-names></name>
          <name><surname>Baker</surname><given-names>Jason</given-names></name>
          <name><surname>Sampson</surname><given-names>Tim</given-names></name>
          <name><surname>Reades</surname><given-names>Jon</given-names></name>
          <name><surname>Welsh</surname><given-names>Ben</given-names></name>
          <name><surname>Kong</surname><given-names>Qingkai</given-names></name>
          <name><surname>Komarov</surname><given-names>Oleg</given-names></name>
          <name><surname>Crosby</surname><given-names>Alex</given-names></name>
          <name><surname>Harris</surname><given-names>George</given-names></name>
          <name><surname>Dumas</surname><given-names>Raphael</given-names></name>
          <name><surname>Krief</surname><given-names>David</given-names></name>
          <name><surname>Kato</surname><given-names>Daisuke</given-names></name>
          <string-name>penguindustin</string-name>
          <name><surname>Wilson</surname><given-names>Nat</given-names></name>
          <name><surname>Nogueira</surname><given-names>Tales Paiva</given-names></name>
          <string-name>kenmatsu</string-name>
          <name><surname>Furtado</surname><given-names>Leonardo</given-names></name>
          <name><surname>Patil</surname><given-names>Anand</given-names></name>
          <name><surname>Duke</surname><given-names>Justin</given-names></name>
          <name><surname>Signell</surname><given-names>Rich</given-names></name>
        </person-group>
        <article-title>python-visualization/folium v0.12.1</article-title>
        <year iso-8601-date="2021">2021</year>
        <uri>https://zenodo.org/record/4447642</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.4447642</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Grout2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Grout</surname><given-names>Jason</given-names></name>
          <string-name>et al.</string-name>
        </person-group>
        <article-title>ipywidgets: Interactive HTML Widgets</article-title>
        <publisher-name>Github</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/jupyter-widgets/ipywidgets</uri>
      </element-citation>
    </ref>
    <ref id="ref-Renou2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Renou</surname><given-names>Martin</given-names></name>
          <name><surname>Corlay</surname><given-names>Sylvain</given-names></name>
          <name><surname>Brochart</surname><given-names>David</given-names></name>
          <string-name>et al.</string-name>
        </person-group>
        <article-title>ipyleaflet: A Jupyter / Leaflet bridge enabling interactive maps in the Jupyter notebook</article-title>
        <publisher-name>Github</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/jupyter-widgets/ipyleaflet</uri>
      </element-citation>
    </ref>
    <ref id="ref-Kharude2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Kharude</surname><given-names>Sachin</given-names></name>
          <name><surname>Steenbergen</surname><given-names>Thomas</given-names></name>
        </person-group>
        <article-title>here-map-widget-for-jupyter</article-title>
        <publisher-name>Github</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/heremaps/here-map-widget-for-jupyter</uri>
      </element-citation>
    </ref>
    <ref id="ref-Mease2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Mease</surname><given-names>Jon</given-names></name>
          <string-name>et al.</string-name>
        </person-group>
        <article-title>plotly.py: The interactive graphing library for Python</article-title>
        <publisher-name>Github</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/plotly/plotly.py</uri>
      </element-citation>
    </ref>
    <ref id="ref-He2021">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>He</surname><given-names>Shan</given-names></name>
          <string-name>et al.</string-name>
        </person-group>
        <article-title>kepler.gl: A powerful open source geospatial analysis tool for large-scale data sets</article-title>
        <publisher-name>Github</publisher-name>
        <year iso-8601-date="2021">2021</year>
        <uri>https://github.com/keplergl/kepler.gl</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
