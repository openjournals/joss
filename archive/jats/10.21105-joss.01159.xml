<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1159</article-id>
<article-id pub-id-type="doi">10.21105/joss.01159</article-id>
<title-group>
<article-title>pytransform3d: 3D Transformations for
Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2824-7956</contrib-id>
<string-name>Alexander Fabisch</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Robotics Innovation Center, DFKI GmbH</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-11-03">
<day>3</day>
<month>11</month>
<year>2018</year>
</pub-date>
<volume>4</volume>
<issue>33</issue>
<fpage>1159</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>transformations</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>pytransform3d is a Python library for transformations in three
  dimensions. Heterogenous software systems that consist of proprietary
  and open source software are often combined when we work with
  transformations. For example, suppose you want to transfer a
  trajectory demonstrated by a human to a robot. The human trajectory
  could be measured from an RGB-D camera, fused with inertial
  measurement units that are attached to the human, and then translated
  to joint angles by inverse kinematics. That involves at least three
  different software systems that might all use different conventions
  for transformations. Sometimes even one software uses more than one
  convention. The following aspects are of crucial importance to glue
  and debug transformations in systems with heterogenous and often
  incompatible software:</p>
  <list list-type="bullet">
    <list-item>
      <p>Compatibility: Compatibility between heterogenous softwares is
      a difficult topic. It might involve, for example, communicating
      between proprietary and open source software or different
      languages.</p>
    </list-item>
    <list-item>
      <p>Conventions: Lots of different conventions are used for
      transformations in three dimensions. These have to be determined
      or specified.</p>
    </list-item>
    <list-item>
      <p>Conversions: We need conversions between these conventions to
      communicate transformations between different systems.</p>
    </list-item>
    <list-item>
      <p>Visualization: Finally, transformations should be visually
      verified and that should be as easy as possible.</p>
    </list-item>
  </list>
  <p>pytransform3d assists in solving these issues. Its documentation
  clearly states all of the used conventions, it makes conversions
  between rotation and transformation conventions as easy as possible,
  it is tightly coupled with Matplotlib to quickly visualize (or
  animate) transformations and it is written in Python with few
  dependencies. Python is a widely adopted language. It is used in many
  domains and supports a wide spectrum of communication to other
  software.</p>
  <p>The library focuses on readability and debugging, not on
  computational efficiency. If you want to have an efficient
  implementation of some function from the library you can easily
  extract the relevant code and implement it more efficiently in a
  language of your choice.</p>
  <p>The library integrates well with the scientific Python ecosystem
  (<xref alt="Varoquaux et al., 2018" rid="ref-SciPyLectureNotes" ref-type="bibr">Varoquaux
  et al., 2018</xref>) with its core libraries Numpy, Scipy and
  Matplotlib. We rely on Numpy
  (<xref alt="Walt et al., 2011" rid="ref-Walt2011" ref-type="bibr">Walt
  et al., 2011</xref>) for linear algebra and on Matplotlib
  (<xref alt="Hunter, 2007" rid="ref-Hunter2007" ref-type="bibr">Hunter,
  2007</xref>) to offer plotting functionalities. Scipy
  (<xref alt="Jones et al., 2001--" rid="ref-Jones2001" ref-type="bibr">Jones
  et al., 2001--</xref>) is used if you want to automatically compute
  new transformations from a graph of existing transformations.</p>
  <p>More advanced features of the library are the TransformManager
  which manages complex chains of transformations, the TransformEditor
  which allows to modify transformations graphically (additionally
  requires PyQt4), and the UrdfTransformManager which is able to load
  transformations from the Unified Robot Description Format (URDF)
  (additionally requires beautifulsoup4).</p>
  <fig>
    <caption><p>Transformation Manager: The TransformManager builds a
    graph of transformations that can be used to automatically infer
    previously unknown transformations.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="plot_transform_manager.png" xlink:title="" />
  </fig>
  <fig>
    <caption><p>Transformation Editor: The TransformEditor based on
    PyQt4 can be used to visually modify transformations with a minimal
    number dependencies.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="app_transformation_editor.png" xlink:title="" />
  </fig>
  <fig>
    <caption><p>A simple URDF file loaded with pytransform3d and
    displayed in Matplotlib.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="plot_urdf.png" xlink:title="" />
  </fig>
  <p>One of the strengths of pytransform3d in comparison to most other
  libraries is its rigorous approach to testing. Unit tests have 100%
  branch coverage for code that is not related to visualization, there
  is more test code than library code, there are additional examples,
  and continuous integration runs with Python 2.7, 3.4, 3.5, and 3.6.
  The maintainer ensures that this level of quality will not be
  sacrificed for new features.</p>
  <p>There are several similar software packages. ROS tf2
  (<xref alt="Foote et al., 2009--" rid="ref-Foote2009" ref-type="bibr">Foote
  et al., 2009--</xref>) is probably the most widely used of them. It
  offers functionality that is similar to the TransformManager of
  pytransform3d, but also considers temporal aspects of transformations.
  It also provides conversions between various conventions and
  visualization can be done with ROS’ rviz package. EnviRe
  (<xref alt="Carrió et al., 2016" rid="ref-HidalgoCarrio2016" ref-type="bibr">Carrió
  et al., 2016</xref>) provides similar functionality. However, both
  libraries come with a number of dependencies and require complex build
  tools. Hence, it is not easy to set them up quickly in a new
  environment with minimum impact to the system, while pytransform3d is
  a lightweight library that only requires the basic scientific Python
  software stack that runs on any machine that supports CPython. There
  are other lightweight Python libraries that offer transformations and
  conversions between conventions, for example, transforms3d
  (<xref alt="Brett &amp; Gohlke, 2009--" rid="ref-Brett2009" ref-type="bibr">Brett
  &amp; Gohlke, 2009--</xref>) and rowan
  (<xref alt="Ramasubramani &amp; Glotzer, 2018" rid="ref-Ramasubramani2018" ref-type="bibr">Ramasubramani
  &amp; Glotzer, 2018</xref>), but these do not directly support
  visualization.</p>
  <sec id="research">
    <title>Research</title>
    <p>pytransform3d is used in various domains, for example, specifying
    motions of a robot, learning robot movements from human
    demonstration, and sensor fusion for human pose estimation.
    pytransform3d has been used by Gutzeit et al.
    (<xref alt="2018" rid="ref-Gutzeit2018" ref-type="bibr">2018</xref>)
    in the context of learning robot behaviors from demonstration.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We would like to thank Manuel Meder and Hendrik Wiese who have
  given valuable feedback as users to improve pytransform3d. This work
  was supported through two grants of the German Federal Ministry of
  Economics and Technology (BMWi, FKZ 50 RA 1216 and FKZ 50 RA 1217) and
  two grants from the European Union’s Horizon 2020 research and
  innovation program (723853 and 730014).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Gutzeit2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gutzeit</surname><given-names>Lisa</given-names></name>
          <name><surname>Fabisch</surname><given-names>Alexander</given-names></name>
          <name><surname>Otto</surname><given-names>Marc</given-names></name>
          <name><surname>Metzen</surname><given-names>Jan Hendrik</given-names></name>
          <name><surname>Hansen</surname><given-names>Jonas</given-names></name>
          <name><surname>Kirchner</surname><given-names>Frank</given-names></name>
          <name><surname>Kirchner</surname><given-names>Elsa Andrea</given-names></name>
        </person-group>
        <article-title>The BesMan learning platform for automated robot skill learning</article-title>
        <source>Frontiers in Robotics and AI</source>
        <year iso-8601-date="2018">2018</year>
        <volume>5</volume>
        <issn>2296-9144</issn>
        <uri>https://www.frontiersin.org/article/10.3389/frobt.2018.00043</uri>
        <pub-id pub-id-type="doi">10.3389/frobt.2018.00043</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-SciPyLectureNotes">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
          <name><surname>Gouillart</surname><given-names>Emmanuelle</given-names></name>
          <name><surname>Vahtras</surname><given-names>Olav</given-names></name>
        </person-group>
        <article-title>Scipy lecture notes</article-title>
        <year iso-8601-date="2018">2018</year>
        <uri>https://www.scipy-lectures.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-Walt2011">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Walt</surname><given-names>S. van der</given-names></name>
          <name><surname>Colbert</surname><given-names>S. C.</given-names></name>
          <name><surname>Varoquaux</surname><given-names>G.</given-names></name>
        </person-group>
        <article-title>The NumPy array: A structure for efficient numerical computation</article-title>
        <source>Computing in Science Engineering</source>
        <year iso-8601-date="2011">2011</year>
        <volume>13</volume>
        <issue>2</issue>
        <issn>1521-9615</issn>
        <pub-id pub-id-type="doi">10.1109/MCSE.2011.37</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Jones2001">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jones</surname><given-names>Eric</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>SciPy: Open source scientific tools for Python</article-title>
        <uri>http://www.scipy.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-Hunter2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
        </person-group>
        <article-title>Matplotlib: A 2D graphics environment</article-title>
        <source>Computing In Science &amp; Engineering</source>
        <publisher-name>IEEE COMPUTER SOC</publisher-name>
        <year iso-8601-date="2007">2007</year>
        <volume>9</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Foote2009">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Foote</surname><given-names>Tully</given-names></name>
          <name><surname>Marder-Eppstein</surname><given-names>Eitan</given-names></name>
          <name><surname>Meeussen</surname><given-names>Wim</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>ROS tf2</article-title>
        <uri>http://wiki.ros.org/tf2</uri>
      </element-citation>
    </ref>
    <ref id="ref-HidalgoCarrio2016">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Carrió</surname><given-names>Javier Hidalgo</given-names></name>
          <name><surname>Arnold</surname><given-names>Sascha</given-names></name>
          <name><surname>Böckmann</surname><given-names>Arne</given-names></name>
          <name><surname>Born</surname><given-names>Anna</given-names></name>
          <name><surname>Domínguez</surname><given-names>Raúl</given-names></name>
          <name><surname>Hennes</surname><given-names>Daniel</given-names></name>
          <name><surname>Hertzberg</surname><given-names>Christoph</given-names></name>
          <name><surname>Machowinski</surname><given-names>Janosch</given-names></name>
          <name><surname>Schwendner</surname><given-names>Jakob</given-names></name>
          <name><surname>Yoo</surname><given-names>Yong-Ho</given-names></name>
          <name><surname>Kirchner</surname><given-names>Frank</given-names></name>
        </person-group>
        <article-title>EnviRe – environment representation for long-term autonomy</article-title>
        <source>AI for long-term autonomy workshop on the international conference on robotics and automation (ICRA)</source>
        <year iso-8601-date="2016">2016</year>
      </element-citation>
    </ref>
    <ref id="ref-Brett2009">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Brett</surname><given-names>Matthew</given-names></name>
          <name><surname>Gohlke</surname><given-names>Christoph</given-names></name>
        </person-group>
        <article-title>transforms3d</article-title>
        <uri>https://github.com/matthew-brett/transforms3d</uri>
      </element-citation>
    </ref>
    <ref id="ref-Ramasubramani2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Ramasubramani</surname><given-names>Vyas</given-names></name>
          <name><surname>Glotzer</surname><given-names>Sharon C.</given-names></name>
        </person-group>
        <article-title>Rowan: A python package for working with quaternions</article-title>
        <source>Journal of Open Source Software</source>
        <year iso-8601-date="2018">2018</year>
        <volume>3</volume>
        <uri>https://doi.org/10.21105/joss.00787</uri>
        <pub-id pub-id-type="doi">10.21105/joss.00787</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
