<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2260</article-id>
<article-id pub-id-type="doi">10.21105/joss.02260</article-id>
<title-group>
<article-title>Ginkgo: A high performance numerical linear algebra
library</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2177-952X</contrib-id>
<string-name>Hartwig Anzt</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1560-921X</contrib-id>
<string-name>Terry Cojean</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Yen-Chen Chen</string-name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4154-0420</contrib-id>
<string-name>Goran Flegar</string-name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<string-name>Fritz Göbel</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9346-2981</contrib-id>
<string-name>Thomas Grützmacher</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-7961-1159</contrib-id>
<string-name>Pratik Nayak</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3023-1849</contrib-id>
<string-name>Tobias Ribizel</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5229-3739</contrib-id>
<string-name>Yu-Hsiang Tsai</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Karlsruhe Institute of Technology</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Innovative Computing Laboratory, University of Tennessee,
Knoxville</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>University of Jaume I</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>The University of Tokyo</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>5</volume>
<issue>52</issue>
<fpage>2260</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>linear-algebra</kwd>
<kwd>hpc</kwd>
<kwd>cuda</kwd>
<kwd>modern-c++</kwd>
<kwd>hip</kwd>
<kwd>spmv</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Ginkgo is a production-ready sparse linear algebra library for high
  performance computing on GPU-centric architectures with a high level
  of performance portability and focuses on software sustainability.</p>
  <p>The library focuses on solving sparse linear systems and
  accommodates a large variety of matrix formats, state-of-the-art
  iterative (Krylov) solvers and preconditioners, which make the library
  suitable for a variety of scientific applications. Ginkgo supports
  many architectures such as multi-threaded CPU, NVIDIA GPUs, AMD GPUs,
  and Intel CPU/GPUs. The heavy use of modern C++ features simplifies
  the addition of new executor paradigms and algorithmic functionality
  without introducing significant performance overhead.</p>
  <p>Solving linear systems is usually one of the most computationally
  and memory intensive aspects of any application. Hence there has been
  a significant amount of effort in this direction with software
  libraries such as UMFPACK
  (<xref alt="Davis, 2004" rid="ref-umfpack" ref-type="bibr">Davis,
  2004</xref>) and CHOLMOD
  (<xref alt="Chen et al., 2008" rid="ref-cholmod" ref-type="bibr">Chen
  et al., 2008</xref>) for solving linear systems with direct methods
  and PETSc
  (<xref alt="Balay et al., 2020" rid="ref-petsc" ref-type="bibr">Balay
  et al., 2020</xref>), Trilinos
  (<xref alt="The Trilinos Project Website, 2020" rid="ref-trilinos" ref-type="bibr"><italic>The
  Trilinos Project Website</italic>, 2020</xref>), Eigen
  (<xref alt="Guennebaud et al., 2010" rid="ref-eigen" ref-type="bibr">Guennebaud
  et al., 2010</xref>) and many more to solve linear systems with
  iterative methods. With Ginkgo, we aim to ensure high performance
  while not compromising portability. Hence, we provide very efficient
  low level kernels optimized for different architectures and separate
  these kernels from the algorithms thereby ensuring extensibility and
  ease of use.</p>
  <p>Ginkgo is also a part of the xSDK effort
  (<xref alt="Bartlett et al., 2017" rid="ref-xsdk" ref-type="bibr">Bartlett
  et al., 2017</xref>) and available as a Spack
  (<xref alt="Gamblin et al., 2015" rid="ref-spack" ref-type="bibr">Gamblin
  et al., 2015</xref>) package. xSDK aims to provide infrastructure for
  and interoperability between a collection of related and complementary
  software elements to foster rapid and efficient development of
  scientific applications using High Performance Computing. Within this
  effort, we provide interoperability with application libraries such as
  <monospace>deal.ii</monospace>
  (<xref alt="Arndt et al., 2019" rid="ref-dealii" ref-type="bibr">Arndt
  et al., 2019</xref>) and <monospace>mfem</monospace>
  (<xref alt="Anderson et al., 2020" rid="ref-mfem" ref-type="bibr">Anderson
  et al., 2020</xref>). Ginkgo provides wrappers within these two
  libraries so that they can take advantage of the features of
  Ginkgo.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>As sparse linear algebra is one of the main focus of Ginkgo, we
  provide a variety of sparse matrix formats such as COO, CSR, ELL,
  HYBRID and SELLP along with highly tuned Sparse Matrix Vector product
  (SpMV) kernels
  (<xref alt="Anzt, Cojean, Yen-Chen, et al., 2020" rid="ref-topc-spmv" ref-type="bibr">Anzt,
  Cojean, Yen-Chen, et al., 2020</xref>). The SpMV kernel is a key
  building block of virtually all iterative solvers and typically
  accounts for a significant fraction of the application runtime.
  Additionally, we also provide high performance conversion routines
  between the different formats enhancing their flexibility.</p>
  <p>Ginkgo provides multiple iterative solvers such as the Krylov
  subspace methods: Conjugate Gradient (CG), Flexible Conjugate Gradient
  (FCG), Bi-Conjugate Gradient (BiCG) and its stabilized version
  (Bi-CGSTAB), Generalized Minimal Residual Method (GMRES) and more
  generic methods such as Iterative Refinement (IR), which forms the
  basis of many relaxation methods. Ginkgo also features support for
  direct and iterative triangular solves within incomplete factorization
  preconditioners.</p>
  <p>Ginkgo features some state-of-the-art general-purpose
  preconditioners such as the Block Jacobi preconditioner with support
  for a version which reduces pressure on the memory bandwidth by
  dynamically adapting the memory precision to the numerical
  requirements. This approach
  (<xref alt="Anzt, Dongarra, et al., 2019" rid="ref-adaptive-bj" ref-type="bibr">Anzt,
  Dongarra, et al., 2019</xref>) has been shown to be very efficient for
  problems with a block structure. Ginkgo also features highly-parallel
  incomplete factorization preconditioners such as the ParILU and the
  ParILUT preconditioners
  (<xref alt="Anzt, Ribizel, et al., 2019" rid="ref-parilut" ref-type="bibr">Anzt,
  Ribizel, et al., 2019</xref>) and Approximate Inverse preconditioners
  such as the Incomplete Sparse Approximate Inverse preconditioner
  (<xref alt="Anzt et al., 2018" rid="ref-spai" ref-type="bibr">Anzt et
  al., 2018</xref>). A detailed feature overview including design and
  implementation of all algorithms in Ginkgo with performance results is
  elaborated in the Ginkgo paper
  (<xref alt="Anzt, Cojean, Flegar, et al., 2020" rid="ref-gko-arxiv" ref-type="bibr">Anzt,
  Cojean, Flegar, et al., 2020</xref>).</p>
</sec>
<sec id="software-extensibility-and-sustainability.">
  <title>Software extensibility and sustainability.</title>
  <p>Ginkgo is extensible in terms of linear algebra solvers,
  preconditioners and matrix formats. Basing on modern C++ (C++11
  standard), various language features such as data abstraction, generic
  programming and automatic memory management are leveraged to enhance
  the performance of the library while still maintaining ease of use and
  maintenance.</p>
  <p>The Ginkgo library is constructed around two principal design
  concepts. The first one is the class and object-oriented design based
  in part on linear operators which aims to provide an easy to use
  interface, common for all the devices and linear algebra objects. This
  allows users to easily cascade solvers, preconditioners or matrix
  formats and tailor solvers for their needs in a seamless fashion. The
  second main design concept consists of the low level device specific
  kernels. These low level kernels are optimized for the specific device
  and make use of C++ features such as templates to generate
  high-performance kernels for a wide variety of parameters.</p>
  <fig>
    <caption><p>Core architecture of Ginkgo. All solvers,
    preconditioners and matrix formats are accessible through the same
    LinOp interface.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/ginkgo-hierarchy.png" xlink:title="" />
  </fig>
  <p>Ginkgo adopts a rigorous approach to testing and maintenance. Using
  continuous integration tools such as Gitlab-CI and Github-Actions, we
  make sure that the library builds on a range of compilers and
  environments. To verify that our code quality is of the highest
  standards we use the Sonarcloud platform
  (<xref alt="“Sonarcloud - a Source Code Analyzer.” 2020" rid="ref-sonarcloud" ref-type="bibr">“Sonarcloud
  - a Source Code Analyzer.” 2020</xref>), a code analyzer to analyze
  and report any code smells. To ensure correctness of the code, we use
  the Google Test library
  (<xref alt="“Googletest - Google Testing and Mocking Framework.” 2020" rid="ref-gtest" ref-type="bibr">“Googletest
  - Google Testing and Mocking Framework.” 2020</xref>) to rigorously
  test each of the device specific kernels and the core framework of the
  library.</p>
</sec>
<sec id="performance-and-benchmarking">
  <title>Performance and Benchmarking</title>
  <p>The Ginkgo software is tailored for High Performance Computing and
  provides high performance implementations on modern manycore
  architectures. In particular, Ginkgo is competitive with hardware
  vendor libraries such as hipSPARSE and cuSPARSE
  (<xref alt="Tsai et al., 2020" rid="ref-2019spmvhip" ref-type="bibr">Tsai
  et al., 2020</xref>). The two following figures highlight this fact by
  comparing the performance of Ginkgo’s Hybrid and CSR SpMV kernels
  against the counterparts from the vendor libraries AMD hipSPARSE and
  NVIDIA cuSPARSE for all matrices available in the Suite Sparse Matrix
  Collection.</p>
  <fig>
    <caption><p>Ginkgo Hybrid spmv provides better performance than
    (left) cuSPARSE and (right) hipSPARSE</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/ginkgo-hybrid.png" xlink:title="" />
  </fig>
  <fig>
    <caption><p>Ginkgo CSR spmv performance is competitive against
    (left) cuSPARSE and (right) hipSPARSE</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figures/ginkgo-csr.png" xlink:title="" />
  </fig>
  <p>Ginkgo provides comprehensive logging facilities both in-house and
  with interfaces to external libraries such as PAPI
  (<xref alt="Terpstra et al., 2010" rid="ref-papi" ref-type="bibr">Terpstra
  et al., 2010</xref>). This allows for detailed analysis of the kernels
  while reducing the intellectual overhead of optimizing the
  applications.</p>
  <p>To enhance reproducibility from a performance perspective, the
  Ginkgo project aims at providing Continuous Benchmarking on top of its
  extensive Continuous Integration setup
  (<xref alt="Anzt, Chen, et al., 2019" rid="ref-gko-cb" ref-type="bibr">Anzt,
  Chen, et al., 2019</xref>). To this end, we provide the performance
  results of our kernel implementations in an open source git
  repository. A unique feature of Ginkgo is the availability of an
  interactive webtool, the Ginkgo Performance explorer
  (<xref alt="Ginkgo Performance Explorer, 2020" rid="ref-gpe" ref-type="bibr"><italic>Ginkgo
  Performance Explorer</italic>, 2020</xref>), which can plot results
  from the aforementioned data repository. Additionally, we have also
  put in some effort in making benchmarking easier, within the Ginkgo
  repository using the <monospace>rapidjson</monospace>
  (<xref alt="“RapidJSON - a Fast JSON Parser/Generator for c++,” 2020" rid="ref-rapidjson" ref-type="bibr">“RapidJSON
  - a Fast JSON Parser/Generator for c++,” 2020</xref>) and
  <monospace>gflags</monospace>
  (<xref alt="“gflags - a c++ Library That Implements Commandline Flags Processing.” 2020" rid="ref-gflags" ref-type="bibr">“<named-content content-type="nocase">gflags</named-content>
  - a c++ Library That Implements Commandline Flags Processing.”
  2020</xref>) libraries to run and generate benchmarking results for a
  variety of Ginkgo features.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Research and software development in Ginkgo received support from
  the Helmholtz association (Impuls und Vernetzungsfond VH-NG-1241), and
  the US Exascale Computing Project (17-SC-20-SC), a collaborative
  effort of the U.S. Department of Energy Office of Science and the
  National Nuclear Security Administration.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-topc-spmv">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Cojean</surname><given-names>Terry</given-names></name>
          <name><surname>Yen-Chen</surname><given-names>Chen</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
          <name><surname>Flegar</surname><given-names>Goran</given-names></name>
          <name><surname>Nayak</surname><given-names>Pratik</given-names></name>
          <name><surname>Tomov</surname><given-names>Stanimire</given-names></name>
          <name><surname>Tsai</surname><given-names>Yuhsiang M.</given-names></name>
          <name><surname>Wang</surname><given-names>Weichung</given-names></name>
        </person-group>
        <article-title>Load-balancing sparse matrix vector product kernels on GPUs</article-title>
        <source>ACM Trans. Parallel Comput.</source>
        <publisher-name>Association for Computing Machinery</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="2020-03">2020</year><month>03</month>
        <volume>7</volume>
        <issue>1</issue>
        <issn>2329-4949</issn>
        <uri>https://doi.org/10.1145/3380930</uri>
        <pub-id pub-id-type="doi">10.1145/3380930</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-parilut">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Ribizel</surname><given-names>Tobias</given-names></name>
          <name><surname>Flegar</surname><given-names>Goran</given-names></name>
          <name><surname>Chow</surname><given-names>Edmond</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
        </person-group>
        <article-title>ParILUT - a parallel threshold ILU for GPUs</article-title>
        <source>2019 IEEE International Parallel and Distributed Processing Symposium (IPDPS)</source>
        <year iso-8601-date="2019">2019</year>
        <pub-id pub-id-type="doi">10.1109/IPDPS.2019.00033</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2019spmvhip">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Tsai</surname><given-names>Yuhsiang M.</given-names></name>
          <name><surname>Cojean</surname><given-names>Terry</given-names></name>
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
        </person-group>
        <article-title>Sparse linear algebra on AMD and NVIDIA GPUs – the race is on</article-title>
        <source>High performance computing</source>
        <person-group person-group-type="editor">
          <name><surname>Sadayappan</surname><given-names>Ponnuswamy</given-names></name>
          <name><surname>Chamberlain</surname><given-names>Bradford L.</given-names></name>
          <name><surname>Juckeland</surname><given-names>Guido</given-names></name>
          <name><surname>Ltaief</surname><given-names>Hatem</given-names></name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham</publisher-loc>
        <year iso-8601-date="2020">2020</year>
        <isbn>978-3-030-50743-5</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-030-50743-5_16</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-adaptive-bj">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
          <name><surname>Flegar</surname><given-names>Goran</given-names></name>
          <name><surname>Higham</surname><given-names>Nicholas J.</given-names></name>
          <name><surname>Quintana-Ortí</surname><given-names>Enrique S.</given-names></name>
        </person-group>
        <article-title>Adaptive precision in block-jacobi preconditioning for iterative sparse linear system solvers</article-title>
        <source>Concurrency and Computation: Practice and Experience</source>
        <year iso-8601-date="2019">2019</year>
        <volume>31</volume>
        <issue>6</issue>
        <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.4460</uri>
        <pub-id pub-id-type="doi">10.1002/cpe.4460</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gko-cb">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Chen</surname><given-names>Yen-Chen</given-names></name>
          <name><surname>Cojean</surname><given-names>Terry</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
          <name><surname>Flegar</surname><given-names>Goran</given-names></name>
          <name><surname>Nayak</surname><given-names>Pratik</given-names></name>
          <name><surname>Quintana-Ortı́</surname><given-names>Enrique S.</given-names></name>
          <name><surname>Tsai</surname><given-names>Yuhsiang M.</given-names></name>
          <name><surname>Wang</surname><given-names>Weichung</given-names></name>
        </person-group>
        <article-title>Towards continuous benchmarking: An automated performance evaluation framework for high performance software</article-title>
        <source>Proceedings of the platform for advanced scientific computing conference</source>
        <publisher-name>Association for Computing Machinery</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="2019">2019</year>
        <isbn>9781450367707</isbn>
        <uri>https://doi.org/10.1145/3324989.3325719</uri>
        <pub-id pub-id-type="doi">10.1145/3324989.3325719</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-dealii">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Arndt</surname><given-names>D.</given-names></name>
          <name><surname>Bangerth</surname><given-names>W.</given-names></name>
          <name><surname>Clevenger</surname><given-names>T. C.</given-names></name>
          <name><surname>Davydov</surname><given-names>D.</given-names></name>
          <name><surname>Fehling</surname><given-names>M.</given-names></name>
          <name><surname>Garcia-Sanchez</surname><given-names>D.</given-names></name>
          <name><surname>Harper</surname><given-names>G.</given-names></name>
          <name><surname>Heister</surname><given-names>T.</given-names></name>
          <name><surname>Heltai</surname><given-names>L.</given-names></name>
          <name><surname>Kronbichler</surname><given-names>M.</given-names></name>
          <name><surname>Kynch</surname><given-names>R. M.</given-names></name>
          <name><surname>Maier</surname><given-names>M.</given-names></name>
          <name><surname>Pelteret</surname><given-names>J.-P.</given-names></name>
          <name><surname>Turcksin</surname><given-names>B.</given-names></name>
          <name><surname>Wells</surname><given-names>D.</given-names></name>
        </person-group>
        <article-title>The deal.II library, version 9.1</article-title>
        <source>Journal of Numerical Mathematics</source>
        <year iso-8601-date="2019">2019</year>
        <uri>https://dealii.org/deal91-preprint.pdf</uri>
        <pub-id pub-id-type="doi">10.1515/jnma-2019-0064</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mfem">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anderson</surname><given-names>Robert</given-names></name>
          <name><surname>Andrej</surname><given-names>Julian</given-names></name>
          <name><surname>Barker</surname><given-names>Andrew</given-names></name>
          <name><surname>Bramwell</surname><given-names>Jamie</given-names></name>
          <name><surname>Camier</surname><given-names>Jean-Sylvain</given-names></name>
          <name><surname>Cerveny</surname><given-names>Jakub</given-names></name>
          <name><surname>Dobrev</surname><given-names>Veselin</given-names></name>
          <name><surname>Dudouit</surname><given-names>Yohann</given-names></name>
          <name><surname>Fisher</surname><given-names>Aaron</given-names></name>
          <name><surname>Kolev</surname><given-names>Tzanio</given-names></name>
          <name><surname>Pazner</surname><given-names>Will</given-names></name>
          <name><surname>Stowell</surname><given-names>Mark</given-names></name>
          <name><surname>Tomov</surname><given-names>Vladimir</given-names></name>
          <name><surname>Akkerman</surname><given-names>Ido</given-names></name>
          <name><surname>Dahm</surname><given-names>Johann</given-names></name>
          <name><surname>Medina</surname><given-names>David</given-names></name>
          <name><surname>Zampini</surname><given-names>Stefano</given-names></name>
        </person-group>
        <article-title>MFEM: A modular finite element methods library</article-title>
        <source>Computers &amp; Mathematics with Applications</source>
        <year iso-8601-date="2020">2020</year>
        <issn>0898-1221</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S0898122120302583</uri>
        <pub-id pub-id-type="doi">10.1016/j.camwa.2020.06.009</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-papi">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Terpstra</surname><given-names>Dan</given-names></name>
          <name><surname>Jagode</surname><given-names>Heike</given-names></name>
          <name><surname>You</surname><given-names>Haihang</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
        </person-group>
        <article-title>Collecting performance data with PAPI-C</article-title>
        <source>Tools for high performance computing 2009</source>
        <person-group person-group-type="editor">
          <name><surname>Müller</surname><given-names>Matthias S.</given-names></name>
          <name><surname>Resch</surname><given-names>Michael M.</given-names></name>
          <name><surname>Schulz</surname><given-names>Alexander</given-names></name>
          <name><surname>Nagel</surname><given-names>Wolfgang E.</given-names></name>
        </person-group>
        <publisher-name>Springer Berlin Heidelberg</publisher-name>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <year iso-8601-date="2010">2010</year>
        <isbn>978-3-642-11261-4</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-642-11261-4_11</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-spai">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Huckle</surname><given-names>Thomas K.</given-names></name>
          <name><surname>Bräckle</surname><given-names>Jürgen</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack</given-names></name>
        </person-group>
        <article-title>Incomplete sparse approximate inverses for parallel preconditioning</article-title>
        <source>Parallel Computing</source>
        <year iso-8601-date="2018">2018</year>
        <volume>71</volume>
        <issn>0167-8191</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S016781911730176X</uri>
        <pub-id pub-id-type="doi">10.1016/j.parco.2017.10.003</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gko-arxiv">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Anzt</surname><given-names>Hartwig</given-names></name>
          <name><surname>Cojean</surname><given-names>Terry</given-names></name>
          <name><surname>Flegar</surname><given-names>Goran</given-names></name>
          <name><surname>Göbel</surname><given-names>Fritz</given-names></name>
          <name><surname>Grützmacher</surname><given-names>Thomas</given-names></name>
          <name><surname>Nayak</surname><given-names>Pratik</given-names></name>
          <name><surname>Ribizel</surname><given-names>Tobias</given-names></name>
          <name><surname>Tsai</surname><given-names>Yuhsiang Mike</given-names></name>
          <name><surname>Quintana-Ortı́</surname><given-names>Enrique S.</given-names></name>
        </person-group>
        <article-title>Ginkgo: A Modern Linear Operator Algebra Framework for High Performance Computing</article-title>
        <source>arXiv e-prints</source>
        <year iso-8601-date="2020-06">2020</year><month>06</month>
        <uri>https://arxiv.org/abs/2006.16852</uri>
      </element-citation>
    </ref>
    <ref id="ref-gpe">
      <element-citation>
        <article-title>Ginkgo performance explorer</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://ginkgo-project.github.io/gpe/</uri>
      </element-citation>
    </ref>
    <ref id="ref-spack">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Gamblin</surname><given-names>T.</given-names></name>
          <name><surname>LeGendre</surname><given-names>M.</given-names></name>
          <name><surname>Collette</surname><given-names>M. R.</given-names></name>
          <name><surname>Lee</surname><given-names>G. L.</given-names></name>
          <name><surname>Moody</surname><given-names>A.</given-names></name>
          <name><surname>de Supinski</surname><given-names>B. R.</given-names></name>
          <name><surname>Futral</surname><given-names>S.</given-names></name>
        </person-group>
        <article-title>The spack package manager: Bringing order to HPC software chaos</article-title>
        <source>SC ’15: Proceedings of the international conference for high performance computing, networking, storage and analysis</source>
        <year iso-8601-date="2015">2015</year>
      </element-citation>
    </ref>
    <ref id="ref-xsdk">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bartlett</surname><given-names>Roscoe</given-names></name>
          <name><surname>Demeshko</surname><given-names>Irina</given-names></name>
          <name><surname>Gamblin</surname><given-names>Todd</given-names></name>
          <name><surname>Hammond</surname><given-names>Glenn</given-names></name>
          <name><surname>Heroux</surname><given-names>Michael</given-names></name>
          <name><surname>Johnson</surname><given-names>Jeffrey</given-names></name>
          <name><surname>Klinvex</surname><given-names>Alicia</given-names></name>
          <name><surname>Li</surname><given-names>Xiaoye</given-names></name>
          <name><surname>McInnes</surname><given-names>Lois</given-names></name>
          <name><surname>Moulton</surname><given-names>J.</given-names></name>
          <name><surname>Osei-Kuffuor</surname><given-names>Daniel</given-names></name>
          <name><surname>Sarich</surname><given-names>Jason</given-names></name>
          <name><surname>Smith</surname><given-names>Barry</given-names></name>
          <name><surname>Willenbring</surname><given-names>James</given-names></name>
          <name><surname>Yang</surname><given-names>Ulrike</given-names></name>
        </person-group>
        <article-title>xSDK foundations: Toward an extreme-scale scientific software development kit</article-title>
        <source>Supercomputing Frontiers and Innovations</source>
        <year iso-8601-date="2017">2017</year>
        <volume>4</volume>
        <issue>1</issue>
        <issn>2313-8734</issn>
        <uri>https://superfri.org/superfri/article/view/127</uri>
        <pub-id pub-id-type="doi">10.14529/jsfi170104</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-rapidjson">
      <element-citation>
        <article-title>RapidJSON - a fast JSON parser/generator for c++</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/Tencent/rapidjson</uri>
      </element-citation>
    </ref>
    <ref id="ref-gflags">
      <element-citation>
        <article-title>gflags - a c++ library that implements commandline flags processing.</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/gflags/gflags</uri>
      </element-citation>
    </ref>
    <ref id="ref-gtest">
      <element-citation>
        <article-title>Googletest - google testing and mocking framework.</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/google/googletest</uri>
      </element-citation>
    </ref>
    <ref id="ref-sonarcloud">
      <element-citation>
        <article-title>Sonarcloud - a source code analyzer.</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://sonarcloud.io/</uri>
      </element-citation>
    </ref>
    <ref id="ref-cholmod">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Chen</surname><given-names>Yanqing</given-names></name>
          <name><surname>Davis</surname><given-names>Timothy A.</given-names></name>
          <name><surname>Hager</surname><given-names>William W.</given-names></name>
          <name><surname>Rajamanickam</surname><given-names>Sivasankaran</given-names></name>
        </person-group>
        <article-title>Algorithm 887: CHOLMOD, supernodal sparse cholesky factorization and update/downdate</article-title>
        <source>ACM Trans. Math. Softw.</source>
        <publisher-name>Association for Computing Machinery</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="2008-10">2008</year><month>10</month>
        <volume>35</volume>
        <issue>3</issue>
        <issn>0098-3500</issn>
        <uri>https://doi.org/10.1145/1391989.1391995</uri>
        <pub-id pub-id-type="doi">10.1145/1391989.1391995</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-umfpack">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Davis</surname><given-names>Timothy A.</given-names></name>
        </person-group>
        <article-title>Algorithm 832: UMFPACK V4.3—an unsymmetric-pattern multifrontal method</article-title>
        <source>ACM Trans. Math. Softw.</source>
        <publisher-name>Association for Computing Machinery</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="2004-06">2004</year><month>06</month>
        <volume>30</volume>
        <issue>2</issue>
        <issn>0098-3500</issn>
        <uri>https://doi.org/10.1145/992200.992206</uri>
        <pub-id pub-id-type="doi">10.1145/992200.992206</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-petsc">
      <element-citation publication-type="report">
        <person-group person-group-type="author">
          <name><surname>Balay</surname><given-names>Satish</given-names></name>
          <name><surname>Abhyankar</surname><given-names>Shrirang</given-names></name>
          <name><surname>Adams</surname><given-names>Mark F.</given-names></name>
          <name><surname>Brown</surname><given-names>Jed</given-names></name>
          <name><surname>Brune</surname><given-names>Peter</given-names></name>
          <name><surname>Buschelman</surname><given-names>Kris</given-names></name>
          <name><surname>Dalcin</surname><given-names>Lisandro</given-names></name>
          <name><surname>Dener</surname><given-names>Alp</given-names></name>
          <name><surname>Eijkhout</surname><given-names>Victor</given-names></name>
          <name><surname>Gropp</surname><given-names>William D.</given-names></name>
          <name><surname>Karpeyev</surname><given-names>Dmitry</given-names></name>
          <name><surname>Kaushik</surname><given-names>Dinesh</given-names></name>
          <name><surname>Knepley</surname><given-names>Matthew G.</given-names></name>
          <name><surname>May</surname><given-names>Dave A.</given-names></name>
          <name><surname>McInnes</surname><given-names>Lois Curfman</given-names></name>
          <name><surname>Mills</surname><given-names>Richard Tran</given-names></name>
          <name><surname>Munson</surname><given-names>Todd</given-names></name>
          <name><surname>Rupp</surname><given-names>Karl</given-names></name>
          <name><surname>Sanan</surname><given-names>Patrick</given-names></name>
          <name><surname>Smith</surname><given-names>Barry F.</given-names></name>
          <name><surname>Zampini</surname><given-names>Stefano</given-names></name>
          <name><surname>Zhang</surname><given-names>Hong</given-names></name>
          <name><surname>Zhang</surname><given-names>Hong</given-names></name>
        </person-group>
        <article-title>PETSc users manual</article-title>
        <publisher-name>Argonne National Laboratory</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.mcs.anl.gov/petsc</uri>
      </element-citation>
    </ref>
    <ref id="ref-trilinos">
      <element-citation>
        <article-title>The Trilinos Project Website</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://trilinos.github.io</uri>
      </element-citation>
    </ref>
    <ref id="ref-eigen">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Guennebaud</surname><given-names>Gaël</given-names></name>
          <name><surname>Jacob</surname><given-names>Benoît</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>Eigen v3</article-title>
        <publisher-name>http://eigen.tuxfamily.org</publisher-name>
        <year iso-8601-date="2010">2010</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
