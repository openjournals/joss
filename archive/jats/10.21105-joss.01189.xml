<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1189</article-id>
<article-id pub-id-type="doi">10.21105/joss.01189</article-id>
<title-group>
<article-title>The Biddy BDD package</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3395-1227</contrib-id>
<string-name>Robert Meolic</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Faculty of Electrical Engineering and Computer Science,
University of Maribor</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-01-15">
<day>15</day>
<month>1</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>34</issue>
<fpage>1189</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Boolean algebra</kwd>
<kwd>unate cube set algebra</kwd>
<kwd>binary decision diagram</kwd>
<kwd>zero-suppressed binary decision diagram</kwd>
<kwd>formal methods</kwd>
<kwd>free software</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>A <bold>Binary Decision Diagram</bold> (BDD) is a data structure
  used in different areas including but not limited to the design,
  testing, optimization, and verification of digital circuits,
  communications protocols, and distributed systems
  (<xref alt="Bryant, 1986" rid="ref-Bryant1986" ref-type="bibr">Bryant,
  1986</xref>). There exist many different types of BDDs intended for
  different applications. The most notable types are used to represent
  Boolean functions and combination sets. For these purposes, BDDs can
  be very efficient, for example, they enable the representation and
  manipulation of set of sparse cubes with
  <inline-formula><alternatives>
  <tex-math><![CDATA[10^{47}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mn>10</mml:mn><mml:mn>47</mml:mn></mml:msup></mml:math></alternatives></inline-formula>
  cubes
  (<xref alt="Minato, 2013" rid="ref-Minato2013" ref-type="bibr">Minato,
  2013</xref>).</p>
  <p>In a BDD, every internal node contains a variable while leafs
  contain constants <inline-formula><alternatives>
  <tex-math><![CDATA[0]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>0</mml:mn></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1</mml:mn></mml:math></alternatives></inline-formula>,
  respectively. For a Reduced Ordered Binary Decision Diagram (ROBDD),
  each edge to internal node <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  with variable <inline-formula><alternatives>
  <tex-math><![CDATA[var(n)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
  left successor <inline-formula><alternatives>
  <tex-math><![CDATA[else(n)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>e</mml:mi><mml:mi>l</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>,
  and right successor <inline-formula><alternatives>
  <tex-math><![CDATA[then(n)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  corresponds to the Boolean function <inline-formula><alternatives>
  <tex-math><![CDATA[f(n)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  that is calculated as:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[f(n) = \overline{var(n)}\ \&\ else(n) + var(n)\ \&\ then(n)]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mover><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mi>e</mml:mi><mml:mi>l</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>For the ROBDD in Figure 1 this is applied as follows:
  <inline-formula><alternatives>
  <tex-math><![CDATA[F3[088] = \overline{x1}\ \&\ (\overline{x3}\ \&\ 0 + x3\ \&\ 1) + x1\ \&\ (\overline{x2}\ \&\ (\overline{x3}\ \&\ 1\ + x3\ \&\ 0)\ + x2\ \&\ 0)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>F</mml:mi><mml:mn>3</mml:mn><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mn>088</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mn>0</mml:mn><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mn>3</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mn>1</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mn>1</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mn>3</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mn>0</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mspace width="0.222em"></mml:mspace><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mn>2</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mn>0</mml:mn><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>.
  The same result can be obtained if every path starting in the root and
  leading to a leaf with constant <inline-formula><alternatives>
  <tex-math><![CDATA[1]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>1</mml:mn></mml:math></alternatives></inline-formula>
  is considered to be a product of variables in which a negative literal
  is included if the path continues in the else successor and a positive
  literal is included if the path continues in the then successor. The
  resulting Boolean function is a sum of the obtained products. In this
  way, for the ROBDD in Figure 1 we directly obtain a minimal
  sum-of-products form, but in general, the result is not a minimal
  form. For the explanation of other types of BDDs we refer to the given
  references.</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="./design/F3-88-comparison.png" />
  Figure 1: Representation of Boolean function
  <inline-formula><alternatives>
  <tex-math><![CDATA[F3[088] = \overline{x1}\ \&\ x3\ + x1\ \&\ \overline{x2}\ \&\ \overline{x3}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>F</mml:mi><mml:mn>3</mml:mn><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:mn>088</mml:mn><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mi>x</mml:mi><mml:mn>3</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mo>+</mml:mo><mml:mi>x</mml:mi><mml:mn>1</mml:mn><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mspace width="0.222em"></mml:mspace><mml:mi>&amp;</mml:mi><mml:mspace width="0.222em"></mml:mspace><mml:mover><mml:mrow><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover></mml:mrow></mml:math></alternatives></inline-formula>
  with different types of BDDs. From left to right there are an ROBDD,
  an ROBDD with complemented edges, a 0-sup-BDD, a 0-sup-BDD with
  complemented edges, and a tagged 0-sup-BDD.</p>
  <p>Boolean functions are primarily used in digital circuit design
  where a thousand and more variables are not unusual. It is impossible
  to represent such large Boolean functions with vectors and similar
  explicit representations of the truth table. Strings are also not an
  option because they are not canonical. On the other hand, many huge
  Boolean functions of practical importance have a managable
  representation with BDDs. Nowadays, however, logic synthesis is not
  the only, or even not the main, target for Boolean functions and BDDs.
  They are also used as characteristic functions of sets and relations,
  which enables the encoding of combinatorial problems and their
  symbolic solution
  (<xref alt="Knuth, 2009" rid="ref-Knuth2009" ref-type="bibr">Knuth,
  2009</xref>)
  (<xref alt="Minato, 2013" rid="ref-Minato2013" ref-type="bibr">Minato,
  2013</xref>)
  (<xref alt="Meolic &amp; Brezočnik, 2018" rid="ref-Meolic2018" ref-type="bibr">Meolic
  &amp; Brezočnik, 2018</xref>). A very special method that has profited
  a lot from BDDs is model checking
  (<xref alt="Chaki &amp; Gurfinkel, 2018" rid="ref-Chaki2018" ref-type="bibr">Chaki
  &amp; Gurfinkel, 2018</xref>). Application areas where BDDs can also
  be applied are approximate string matching, fault tree analysis,
  scheduling algorithms, security algorithms, reversible computing, and
  many others.</p>
  <p>An efficient implementation of algorithms for BDDs is a rather
  complicated task, but several free BDD packages are avaliable online.
  Herein we describe the cross-platform <bold>Biddy BDD package</bold>
  (<xref alt="Meolic, 2012" rid="ref-Meolic2012" ref-type="bibr">Meolic,
  2012</xref>), one of the oldest continually developed of these BDD
  packages. From version 1.8.2, many standard features are implemented,
  such as automatic garbage collection, complemented edges, and a
  management system. Dynamic variable ordering with a sifting algorithm
  and an exhaustive search over all the possible variable orderings are
  provided, too. Various statistics about global properties and the
  individual Boolean functions are available.</p>
  <p>Some distinguishing properties of the Biddy BDD package are:</p>
  <list list-type="bullet">
    <list-item>
      <p>can be built on various platforms using native environments,
      including <bold>gcc</bold>, <bold>mingw</bold>, and <bold>Visual
      Studio</bold>;</p>
    </list-item>
    <list-item>
      <p>it follows a strict implementation style;</p>
    </list-item>
    <list-item>
      <p>it has a refined <bold>C</bold> API;</p>
    </list-item>
    <list-item>
      <p>it offers a uniform support for classical <bold>reduced ordered
      BDDs</bold> (ROBDDs) and <bold>zero-suppressed BDDs</bold>
      (0-sup-BDDs);</p>
    </list-item>
    <list-item>
      <p>at this moment, Biddy is the only package thoroughly supporting
      the <bold>tagged zero-suppressed BDDs</bold>
      (<xref alt="Meolic, 2016" rid="ref-Meolic2016" ref-type="bibr">Meolic,
      2016</xref>)
      (<xref alt="Dijk et al., 2017" rid="ref-Meolic2017" ref-type="bibr">Dijk
      et al., 2017</xref>).</p>
    </list-item>
  </list>
  <p>The Biddy BDD package is a part of the Biddy project that also
  focuses on the visualization of BDDs. The application <bold>BDD
  Scout</bold>, which is bundled with the Biddy BDD package, is an
  interactive tool (Figure 2). Its key features are:</p>
  <list list-type="bullet">
    <list-item>
      <p>the creation of a BDD from a Boolean expression,</p>
    </list-item>
    <list-item>
      <p>node manipulation and variable reordering in the displayed
      BDD,</p>
    </list-item>
    <list-item>
      <p>conversion between the supported types of BDDs,</p>
    </list-item>
    <list-item>
      <p>exports to LaTeX, and</p>
    </list-item>
    <list-item>
      <p>integrated Tcl scripting.</p>
    </list-item>
  </list>
  <p>These features make BDD Scout a unique tool for teaching and
  exploring properties of BDDs. For an example, check the generated BDD
  Encyclopedia
  (<xref alt="Meolic, 2019a" rid="ref-BddEncyclopedia" ref-type="bibr">Meolic,
  2019a</xref>).</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="./design/bddscout-small.png" />
  Figure 2: An annotated screenshot from BDD Scout</p>
  <p>In conclusion, the Biddy BDD package is free software to be used in
  projects that need to manipulate Boolean functions or combination
  sets. It is a complete and efficient product suitable for many
  academic and commercial settings. The binary executables, the user
  manual, and the other documentation can be obtained from Biddy’s
  Homepage
  (<xref alt="Meolic, 2019b" rid="ref-Biddy" ref-type="bibr">Meolic,
  2019b</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The development of the Biddy BDD package and BDD Scout application
  so far was supported by University of Maribor, Faculty of Electrical
  Engineering and Computer Science.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Bryant1986">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bryant</surname><given-names>R. E.</given-names></name>
        </person-group>
        <article-title>Graph-based algorithms for boolean function manipulation. IEEE transactions on computers, 35(8), pp. 677-691, 1986</article-title>
        <year iso-8601-date="1986">1986</year>
        <pub-id pub-id-type="doi">10.1109/TC.1986.1676819</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Chaki2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Chaki</surname><given-names>S.</given-names></name>
          <name><surname>Gurfinkel</surname><given-names>A.</given-names></name>
        </person-group>
        <article-title>BDD-based symbolic model checking. In handbook of model checking, springer, pp. 219-245, 2018</article-title>
        <year iso-8601-date="2018">2018</year>
        <pub-id pub-id-type="doi">10.1007/978-3-319-10575-8_8</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Knuth2009">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Knuth</surname><given-names>D. E.</given-names></name>
        </person-group>
        <source>The art of computer programming, Volume 4, Fascicle 1: Bitwise tricks and techniques; Binary decision diagrams. Addison-Wesley Professional, 2009</source>
        <year iso-8601-date="2009">2009</year>
        <isbn>9780321637413</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Minato2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Minato</surname><given-names>S.</given-names></name>
        </person-group>
        <article-title>Techniques of BDD/ZDD: Brief history and recent activity. IEICE trans. on information and systems, E96D(7), pp. 1419-1429, 2013</article-title>
        <year iso-8601-date="2013">2013</year>
        <pub-id pub-id-type="doi">10.1587/transinf.E96.D.1419</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Meolic2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Biddy - a multi-platform academic BDD package. Journal of software, 7(6), pp. 1358-1366, 2012</article-title>
        <year iso-8601-date="2012">2012</year>
        <pub-id pub-id-type="doi">10.4304/jsw.7.6.1358-1366</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Meolic2016">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Implementation aspects of a BDD package supporting general decision diagrams. University of Maribor, Tech. rep., 2016</article-title>
        <year iso-8601-date="2016">2016</year>
        <date-in-citation content-type="access-date"><year iso-8601-date="2019-01-15">2019</year><month>01</month><day>15</day></date-in-citation>
        <uri>https://dk.um.si/IzpisGradiva.php?id=68831&amp;lang=eng</uri>
      </element-citation>
    </ref>
    <ref id="ref-Meolic2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Dijk</surname><given-names>T. van</given-names></name>
          <name><surname>Wille</surname><given-names>R.</given-names></name>
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Tagged BDDs: Combining reduction rules from different decision diagram types. In proc. FMCAD 2017, pp. 108-115, 2017</article-title>
        <year iso-8601-date="2017">2017</year>
        <pub-id pub-id-type="doi">10.23919/FMCAD.2017.8102248</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Meolic2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
          <name><surname>Brezočnik</surname><given-names>Z.</given-names></name>
        </person-group>
        <article-title>Flexible job shop scheduling using zero-suppressed binary decision diagrams. Advances in production engineering and management, 13(4), pp. 373-388, 2018</article-title>
        <year iso-8601-date="2018">2018</year>
        <pub-id pub-id-type="doi">10.14743/apem2018.4.297</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Biddy">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Biddy’s homepage</article-title>
        <year iso-8601-date="2019">2019</year>
        <date-in-citation content-type="access-date"><year iso-8601-date="2019-01-15">2019</year><month>01</month><day>15</day></date-in-citation>
        <uri>http://biddy.meolic.com/</uri>
      </element-citation>
    </ref>
    <ref id="ref-BddEncyclopedia">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <name><surname>Meolic</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>BDD Encyclopedia</article-title>
        <year iso-8601-date="2019">2019</year>
        <date-in-citation content-type="access-date"><year iso-8601-date="2019-01-15">2019</year><month>01</month><day>15</day></date-in-citation>
        <uri>http://svn.savannah.nongnu.org/viewvc/*checkout*/biddy/bddscout/ENCYCLOPEDIA/bddencyclopedia.html</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
