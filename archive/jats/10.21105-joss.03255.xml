<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3255</article-id>
<article-id pub-id-type="doi">10.21105/joss.03255</article-id>
<title-group>
<article-title>Easy3D: a lightweight, easy-to-use, and efficient C++
library for processing and rendering 3D data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5629-9975</contrib-id>
<string-name>Liangliang Nan</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>3D Geoinformation Research Group, Delft University of
Technology, the Netherlands</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-12-02">
<day>2</day>
<month>12</month>
<year>2020</year>
</pub-date>
<volume>6</volume>
<issue>64</issue>
<fpage>3255</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>data structure</kwd>
<kwd>geometry processing</kwd>
<kwd>rendering</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><italic>Easy3D</italic> is an open-source library for 3D modeling,
  geometry processing, and rendering. It is implemented in C++ and
  designed with an emphasis on simplicity (i.e., processing and
  visualizing 3D data can be achieved by few lines of API calls). The
  contributions of <italic>Easy3D</italic> are threefold: (1) efficient
  data structures for representing common 3D data (i.e., point clouds,
  surface meshes, polyhedral meshes, and graphs), (2) commonly used
  algorithms for processing 3D data, and (3) standard techniques for the
  visualization of 3D data. The data structures, geometry processing
  algorithms, and rendering techniques can be seamlessly and easily
  integrated for the fast development of research prototypes or 3D
  applications.
  <xref alt="Figure 1" rid="figU003Adatastructures">Figure 1</xref> and
  <xref alt="Figure 2" rid="figU003Arendering">Figure 2</xref> show
  overviews of the data structures and rendering functionalities
  respectively provided by <italic>Easy3D</italic>.</p>
  <fig>
    <caption><p>The data structures provided by Easy3D. From left to
    right: point cloud, surface mesh, polyhedral mesh, and graph.
    <styled-content id="figU003Adatastructures"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="datastructures.png" xlink:title="" />
  </fig>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The amount of 3D data has been explosively increasing in the past
  decades, driven by the fast development of data acquisition techniques
  (e.g., laser scanning, photogrammetry, and 3D computer vision) and
  real-world applications (e.g., urban planning, autonomous driving,
  surveying, and entertainment). The processing and application of such
  data require specialized algorithms and software systems, for which
  great tools and algorithm libraries have been developed, such as
  MeshLab
  (<xref alt="Cignoni et al., 2008" rid="ref-meshlabU003A2008" ref-type="bibr">Cignoni
  et al., 2008</xref>), CloudCompare
  (<xref alt="Girardeau-Montaut, 2016" rid="ref-cloudcompareU003A2016" ref-type="bibr">Girardeau-Montaut,
  2016</xref>), CGAL
  (<xref alt="Fabri &amp; Pion, 2009" rid="ref-cgalU003A2009" ref-type="bibr">Fabri
  &amp; Pion, 2009</xref>), libigl
  (<xref alt="Jacobson et al., 2016" rid="ref-libiglU003A2016" ref-type="bibr">Jacobson
  et al., 2016</xref>), and PMP
  (<xref alt="Sieger &amp; Botsch, 2020" rid="ref-pmpU003A2020" ref-type="bibr">Sieger
  &amp; Botsch, 2020</xref>).</p>
  <p>The development of end-to-end 3D data processing software typically
  requires integrating different functionalities such as data structures
  (for representing and storing 3D data), algorithms (for processing and
  analysis), and rendering (for visualizing the data and the derived
  information). However, each of these open-source software has a
  particular focus and it is not an easy task to integrate the
  functionalities provided by different software packages. For example,
  MeshLab
  (<xref alt="Cignoni et al., 2008" rid="ref-meshlabU003A2008" ref-type="bibr">Cignoni
  et al., 2008</xref>) and CloudCompare
  (<xref alt="Girardeau-Montaut, 2016" rid="ref-cloudcompareU003A2016" ref-type="bibr">Girardeau-Montaut,
  2016</xref>)) focus on easy-to-use GUIs (Graphical User Interface) for
  processing meshes and point clouds, respectively. The CGAL
  (<xref alt="Fabri &amp; Pion, 2009" rid="ref-cgalU003A2009" ref-type="bibr">Fabri
  &amp; Pion, 2009</xref>), libigl
  (<xref alt="Jacobson et al., 2016" rid="ref-libiglU003A2016" ref-type="bibr">Jacobson
  et al., 2016</xref>), and PMP
  (<xref alt="Sieger &amp; Botsch, 2020" rid="ref-pmpU003A2020" ref-type="bibr">Sieger
  &amp; Botsch, 2020</xref>) have an emphasis on the implementation of
  sophisticated mesh processing algorithms, lacking rendering and
  interactive capabilities. As a result, the development process has a
  high demand for the expertise of a developer in all the related
  aspects.</p>
  <p>To facilitate the fast development of 3D data processing software,
  <italic>Easy3D</italic> provides not only the data structures, but
  also commonly used geometry processing algorithms, and standard
  rendering techniques. All these functionalities can be seamlessly
  integrated into a software implementation.</p>
  <fig>
    <caption><p>An overview of the rendering functionalities of Easy3D.
    <styled-content id="figU003Arendering"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="rendering.png" xlink:title="" />
  </fig>
</sec>
<sec id="overview-of-the-features">
  <title>Overview of the features</title>
  <p>The core features of <italic>Easy3D</italic> include:</p>
  <list list-type="bullet">
    <list-item>
      <p>Efficient data structures for representing and managing 3D
      models (i.e., point clouds, surface meshes, polyhedral meshes, and
      graphs). Easy to add/access arbitrary types of per-element
      properties. Non-manifoldness is automatically resolved when
      loading models from files.</p>
    </list-item>
    <list-item>
      <p>A set of widely used algorithms, e.g., point cloud normal
      estimation/re-orientation, Poisson Surface Reconstruction, RANSAC,
      mesh simplification, subdivision, smoothing, parameterization, and
      remeshing.</p>
    </list-item>
    <list-item>
      <p>A bunch of rendering techniques, e.g., point/line imposters,
      ambient occlusion (SSAO), hard shadow (shadow maps), soft shadow
      (PCSS), eye-dome lighting (for rendering point clouds without
      normal information), and transparency (average color blending,
      dual depth peeling).</p>
    </list-item>
    <list-item>
      <p>High-level encapsulation of OpenGL and GLSL for convenient and
      efficient rendering (based on modern and faster
      programmable-shader-style rendering, i.e., no fixed function
      calls). Client code does not need to touch the low-level APIs of
      OpenGL.</p>
    </list-item>
    <list-item>
      <p>Step-by-step tutorials demonstrating various uses of the APIs,
      to get acquainted with the data structures, rendering techniques,
      and algorithms for 3D modeling and geometry processing.</p>
    </list-item>
    <list-item>
      <p>A viewer that can be used directly to visualize 3D scenes in
      various formats, which can also be easily extended. A handy tool
      <italic>Mapple</italic> created out of the <italic>Easy3D</italic>
      library for rendering and processing 3D data.</p>
    </list-item>
  </list>
  <p><italic>Easy3D</italic> was initially designed with an intention
  for research and educational purposes, while its wide range of
  features also enables developing sophisticated 3D applications.
  <italic>Easy3D</italic> has been widely used by graduate students in
  courses and research projects and has enabled several scientific
  publications, e.g., Du et al.
  (<xref alt="2019" rid="ref-adtreeU003A2019" ref-type="bibr">2019</xref>),
  Fan et al.
  (<xref alt="2020" rid="ref-adqsmU003A2020" ref-type="bibr">2020</xref>),
  and Gao et al.
  (<xref alt="2021" rid="ref-sumU003A2021" ref-type="bibr">2021</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The implementation of <italic>Easy3D</italic> greatly benefited
  from and was inspired by existing great open-source libraries, such as
  CGAL
  (<xref alt="Fabri &amp; Pion, 2009" rid="ref-cgalU003A2009" ref-type="bibr">Fabri
  &amp; Pion, 2009</xref>), libigl
  (<xref alt="Jacobson et al., 2016" rid="ref-libiglU003A2016" ref-type="bibr">Jacobson
  et al., 2016</xref>), and PMP
  (<xref alt="Sieger &amp; Botsch, 2020" rid="ref-pmpU003A2020" ref-type="bibr">Sieger
  &amp; Botsch, 2020</xref>)]. We would like to thank the original
  authors of these projects for their permissive license terms. We also
  thank the users, contributors, and JOSS reviewers for reporting/fixing
  bugs, testing, and providing valuable feedback and suggestions.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-meshlabU003A2008">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Cignoni</surname><given-names>Paolo</given-names></name>
          <name><surname>Callieri</surname><given-names>Marco</given-names></name>
          <name><surname>Corsini</surname><given-names>Massimiliano</given-names></name>
          <name><surname>Dellepiane</surname><given-names>Matteo</given-names></name>
          <name><surname>Ganovelli</surname><given-names>Fabio</given-names></name>
          <name><surname>Ranzuglia</surname><given-names>Guido</given-names></name>
        </person-group>
        <article-title>Meshlab: An open-source mesh processing tool.</article-title>
        <source>Eurographics italian chapter conference</source>
        <publisher-name>Salerno</publisher-name>
        <year iso-8601-date="2008">2008</year>
        <volume>2008</volume>
        <pub-id pub-id-type="doi">10.2312/LocalChapterEvents/ItalChap/ItalianChapConf2008/129-136</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cloudcompareU003A2016">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Girardeau-Montaut</surname><given-names>Daniel</given-names></name>
        </person-group>
        <article-title>CloudCompare</article-title>
        <source>GitHub repository</source>
        <publisher-name>GPL Software</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <uri>https://github.com/CloudCompare/CloudCompare</uri>
      </element-citation>
    </ref>
    <ref id="ref-cgalU003A2009">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Fabri</surname><given-names>Andreas</given-names></name>
          <name><surname>Pion</surname><given-names>Sylvain</given-names></name>
        </person-group>
        <article-title>CGAL: The computational geometry algorithms library</article-title>
        <source>Proceedings of the 17th ACM SIGSPATIAL international conference on advances in geographic information systems</source>
        <year iso-8601-date="2009">2009</year>
        <pub-id pub-id-type="doi">10.1145/1653771.1653865</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-libiglU003A2016">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jacobson</surname><given-names>Alec</given-names></name>
          <name><surname>Panozzo</surname><given-names>Daniele</given-names></name>
          <name><surname>Schüller</surname><given-names>C</given-names></name>
          <name><surname>Diamanti</surname><given-names>Olga</given-names></name>
          <name><surname>Zhou</surname><given-names>Qingnan</given-names></name>
          <name><surname>Pietroni</surname><given-names>N</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>Libigl: A simple c++ geometry processing library</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <uri>https://github.com/libigl/libigl</uri>
      </element-citation>
    </ref>
    <ref id="ref-pmpU003A2020">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Sieger</surname><given-names>Daniel</given-names></name>
          <name><surname>Botsch</surname><given-names>Mario</given-names></name>
        </person-group>
        <article-title>The polygon mesh processing library</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/pmp-library/pmp-library/</uri>
      </element-citation>
    </ref>
    <ref id="ref-adtreeU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Du</surname><given-names>Shenglan</given-names></name>
          <name><surname>Lindenbergh</surname><given-names>Roderik</given-names></name>
          <name><surname>Ledoux</surname><given-names>Hugo</given-names></name>
          <name><surname>Stoter</surname><given-names>Jantien</given-names></name>
          <name><surname>Nan</surname><given-names>Liangliang</given-names></name>
        </person-group>
        <article-title>AdTree: Accurate, detailed, and automatic modelling of laser-scanned trees</article-title>
        <source>Remote Sensing</source>
        <publisher-name>Multidisciplinary Digital Publishing Institute</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>11</volume>
        <issue>18</issue>
        <pub-id pub-id-type="doi">10.3390/rs11182074</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-adqsmU003A2020">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Fan</surname><given-names>Guangpeng</given-names></name>
          <name><surname>Nan</surname><given-names>Liangliang</given-names></name>
          <name><surname>Dong</surname><given-names>Yanqi</given-names></name>
          <name><surname>Su</surname><given-names>Xiaohui</given-names></name>
          <name><surname>Chen</surname><given-names>Feixiang</given-names></name>
        </person-group>
        <article-title>AdQSM: A new method for estimating above-ground biomass from TLS point clouds</article-title>
        <source>Remote Sensing</source>
        <publisher-name>Multidisciplinary Digital Publishing Institute</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <volume>12</volume>
        <issue>18</issue>
        <pub-id pub-id-type="doi">10.3390/rs12183089</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-sumU003A2021">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gao</surname><given-names>Weixiao</given-names></name>
          <name><surname>Nan</surname><given-names>Liangliang</given-names></name>
          <name><surname>Boom</surname><given-names>Bas</given-names></name>
          <name><surname>Ledoux</surname><given-names>Hugo</given-names></name>
        </person-group>
        <article-title>SUM: A benchmark dataset of semantic urban meshes</article-title>
        <source>ISPRS Journal of Photogrammetry and Remote Sensing</source>
        <year iso-8601-date="2021">2021</year>
        <volume>179</volume>
        <issn>0924-2716</issn>
        <pub-id pub-id-type="doi">10.1016/j.isprsjprs.2021.07.008</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
