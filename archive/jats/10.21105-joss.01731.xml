<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1731</article-id>
<article-id pub-id-type="doi">10.21105/joss.01731</article-id>
<title-group>
<article-title>EoN (Epidemics on Networks): a fast, flexible Python
package for simulation, analytic approximation, and analysis of
epidemics on networks</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-4426-0405</contrib-id>
<string-name>Joel C. Miller</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<string-name>Tony Ting</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>La Trobe University, Melbourne, Australia</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Institute for Disease Modeling, Seattle, Washington,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-07-19">
<day>19</day>
<month>7</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>44</issue>
<fpage>1731</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>SIR</kwd>
<kwd>SIS</kwd>
<kwd>Epidemic</kwd>
<kwd>Network</kwd>
<kwd>Stochastic simulation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>EoN (EpidemicsOnNetworks) is a pure-Python package designed to
  study infectious processes spreading in networks. It rose out of the
  book <italic>Mathematics of Epidemics on Networks</italic>
  (<xref alt="Kiss et al., 2017" rid="ref-kissU003AEoN" ref-type="bibr">Kiss
  et al., 2017</xref>), and now consists of over 100 user-functions. EoN
  relies on the networkx package
  (<xref alt="Hagberg et al., 2008" rid="ref-hagberg2008exploring" ref-type="bibr">Hagberg
  et al., 2008</xref>).</p>
  <p>EoN provides methods for</p>
  <list list-type="bullet">
    <list-item>
      <p>Susceptible-Infected-Susceptible (SIS) and
      Susceptible-Infected-Recovered (SIR) disease</p>
      <list list-type="bullet">
        <list-item>
          <p>Stochastic simulation of disease spread in networkx
          graphs</p>
          <list list-type="bullet">
            <list-item>
              <p>continuous time Markovian</p>
            </list-item>
            <list-item>
              <p>continuous time nonMarkovian</p>
            </list-item>
            <list-item>
              <p>discrete time</p>
            </list-item>
          </list>
        </list-item>
        <list-item>
          <p>Numerical solution of over 20 differential equation models,
          including</p>
          <list list-type="bullet">
            <list-item>
              <p>individual and pair-based models</p>
            </list-item>
            <list-item>
              <p>pairwise models</p>
            </list-item>
            <list-item>
              <p>edge-based compartmental models</p>
            </list-item>
          </list>
        </list-item>
      </list>
    </list-item>
    <list-item>
      <p>Stochastic simulation of a wide range of Simple and Complex
      contagions</p>
    </list-item>
    <list-item>
      <p>Visualization and analysis of stochastic simulations</p>
    </list-item>
  </list>
  <p>The documentation is maintained at
  https://epidemicsonnetworks.readthedocs.io/en/latest/ including
  numerous examples at
  https://epidemicsonnetworks.readthedocs.io/en/latest/Examples.html.
  This paper briefly describes a few of EoN’s main tools. The online
  documentation gives full detail, including examples.</p>
  <sec id="sir-and-sis-disease">
    <title>SIR and SIS disease</title>
    <sec id="stochastic-simulation">
      <title>Stochastic simulation</title>
      <p>The main stochastic simulation tools allow the user to
      investigate standard SIS and SIR dynamics:</p>
      <list list-type="bullet">
        <list-item>
          <p>Markovian SIS and SIR simulations
          (<monospace>fast_SIS</monospace>,
          <monospace>Gillespie_SIS</monospace>,
          <monospace>fast_SIR</monospace>, and
          <monospace>Gillespie_SIR</monospace>).</p>
        </list-item>
        <list-item>
          <p>non-Markovian SIS and SIR simulations
          (<monospace>fast_nonMarkovian_SIS</monospace> and
          <monospace>fast_nonMarkovian_SIR</monospace>).</p>
        </list-item>
        <list-item>
          <p>discrete time SIS and SIR simulations where infections last
          a single time step (<monospace>basic_discrete_SIS</monospace>,
          <monospace>basic_discrete_SIR</monospace>, and
          <monospace>discrete_SIR</monospace>).</p>
        </list-item>
      </list>
      <p>For both Markovian and non-Markovian methods it is possible for
      the transition rates to depend on individual or partnership
      properties.</p>
      <p>The continuous-time stochastic simulations have two
      implementations: a Gillespie implementation
      (<xref alt="Doob, 1945" rid="ref-doob1945markoff" ref-type="bibr">Doob,
      1945</xref>;
      <xref alt="Gillespie, 1977" rid="ref-gillespie1977exact" ref-type="bibr">Gillespie,
      1977</xref>) and an event-driven implementation. They have similar
      speed if the dynamics are Markovian (depending on network and
      disease parameters either may be faster than the other), but the
      event-driven implementations also handle non-Markovian dynamics.
      In earlier versions, the event-driven simulations were
      consistently faster, leading to the names
      <monospace>fast_SIR</monospace> and
      <monospace>fast_SIS</monospace>. The Gillespie simulations have
      been optimized using ideas from
      (<xref alt="Holme, 2014" rid="ref-holme2014model" ref-type="bibr">Holme,
      2014</xref>) and
      (<xref alt="Cota &amp; Ferreira, 2017" rid="ref-cota2017optimized" ref-type="bibr">Cota
      &amp; Ferreira, 2017</xref>).</p>
      <p>The algorithms typically handle an SIR epidemic spreading on
      hundreds of thousands of individuals in well under a minute on a
      laptop. SIS versions are slower because the number of events that
      happen is typically much larger.</p>
    </sec>
    <sec id="differential-equations-models">
      <title>Differential Equations Models</title>
      <p>EoN also provides tools to numerically solve about 20
      differential equations models for SIS or SIR disease spread in
      networks using SciPy integration tools. The models use different
      information about the network to predict the number of infected
      individuals as a function of time. Model derivations and
      explanations of their simplifying assumptions are in
      (<xref alt="Kiss et al., 2017" rid="ref-kissU003AEoN" ref-type="bibr">Kiss
      et al., 2017</xref>).</p>
    </sec>
  </sec>
  <sec id="simple-and-complex-contagions">
    <title>Simple and Complex Contagions</title>
    <p>Other contagious processes in networks have received attention.
    Many of these can be classifed as either “simple contagions” or
    “complex contagions”.</p>
    <p>In a “simple contagion,” an individual <monospace>u</monospace>
    may be induced to change status by an interaction with its partner
    <monospace>v</monospace>. This status change occurs with the same
    rate regardless of the statuses of other partners of
    <monospace>u</monospace> (there may be a race between partners to
    determine which transmits first). SIS, SIR, SEIR, and SIRS diseases
    are special cases of simple contagions.</p>
    <p>In “complex contagions,” however, the rate at which
    <monospace>u</monospace> changes from one status to another may
    depend on the statuses of others in more complex ways. Two infected
    individuals may work synergistically to cause a susceptible
    individual to become infected. This is frequently thought to model
    social contagions where an individual may only believe something if
    multiple partners believe it
    (<xref alt="Centola et al., 2007" rid="ref-centolaU003Acascade" ref-type="bibr">Centola
    et al., 2007</xref>).</p>
    <p>Simple and complex contagions are currently implemented only in a
    Gillespie framework, so they require Markovian assumptions. It would
    typically be feasible to make a bespoke algorithm that runs
    significantly faster.</p>
    <sec id="simple-contagions">
      <title>Simple contagions</title>
      <p>EoN provides a function
      <monospace>Gillespie_simple_contagion</monospace> that allows a
      user to specify the rules governing an arbitrary simple contagion.
      The implementation requires the user to separate out two distinct
      ways in which transitions occur: those that occur spontaneously
      from an individual’s current state and those that are induced by a
      partner. To help demonstrate, consider an “SEIR” epidemic, where
      individuals begin susceptible, but when they interact with
      infectious partners they may enter an exposed state. They remain
      in that exposed state for some period of time before transitioning
      into the infectious state independently of the status of any
      partner. They remain infectious and eventually transition into the
      recovered state, again independently of the status of any partner.
      Here the “E” to “I” and “I” to “R” transitions occur spontaneously
      given the individual’s state, while the “S” to “E” transition is
      induced by a partner.</p>
    </sec>
    <sec id="complex-contagions">
      <title>Complex contagions</title>
      <p>Complex contagions are implemented through
      <monospace>Gillespie_complex_contagion</monospace> for which the
      user specifies the rules governing a relatively arbitrary complex
      contagion. There is a constraint that there is no memory: an
      individual will change from one status to another based on the
      current statuses of its neighbors, and not based on previous
      interactions with some neighbors who may have since changed
      status.</p>
      <p>The Gillespie implementation requires a user-defined function
      that calculates the rate at which <monospace>u</monospace> will
      change status given the current system state and another function
      which chooses its new status. It also needs a function that
      determines which nodes have their rate change due to
      <monospace>u</monospace>’s transition. With these functions
      defined, the Gillespie algorithm can simulate the complex
      contagion.</p>
    </sec>
    <sec id="visualization-analysis">
      <title>Visualization &amp; Analysis</title>
      <p>By default, simulations return NumPy arrays providing counts of
      each state.
      However, if we set a flag
      <monospace>return_full_data=True</monospace>, the simulations
      return a <monospace>Simulation_Investigation</monospace> object.
      This provides access to complete information about the simulation,
      including the transmission chains.</p>
      <p>The <monospace>Simulation_Investigation</monospace> object can
      create a snapshot of the network at a given time. By default the
      visualization includes the time series (e.g., S, I, and R) plotted
      beside the network snapshot, with flexibility about what (or if)
      other time series appear. With appropriate additional packages for
      Matplotlib’s animation tools, it can produce animations as
      well.</p>
    </sec>
  </sec>
  <sec id="discussion">
    <title>Discussion</title>
    <p>EoN provides tools for contagious processes spreading in contact
    networks, including SIR and SIS diseases and more generally simple
    and complex contagions. It also provides tools for visualizing
    stochastic simulation output. Full documentation is available at
    https://epidemicsonnetworks.readthedocs.io/en/latest/</p>
  </sec>
</sec>
<sec id="dependencies">
  <title>Dependencies:</title>
  <p>Scipy NumPy networkx Matplotlib</p>
</sec>
<sec id="related-packages">
  <title>Related Packages</title>
  <p>Several alternative software packages allow for simulation of
  epidemics on networks. Here we briefly review some of these.</p>
  <sec id="epydemic">
    <title>epydemic</title>
    <p>The Python package Epydemic simulates SIS and SIR epidemics in
    networks. It is built on networkx. It handles both discrete-time or
    continuous-time Markovian simulations for which it uses a
    Gillespie-style algorithm. It can handle any process which can be
    simulated using
    <monospace>EoN.simple_contagion</monospace>.</p>
    <p>The documentation is available at
    https://pyepydemic.readthedocs.io/en/latest/</p>
  </sec>
  <sec id="graph-tool">
    <title>Graph-tool</title>
    <p>The Python package Graph-tool
    (<xref alt="Peixoto, 2014" rid="ref-peixoto_graph-tool_2014" ref-type="bibr">Peixoto,
    2014</xref>) serves as a networkx alternative. Its underlying
    processes are written in C++, so it is often much faster.</p>
    <p>Graph-tool has a number of built-in dynamic models, including the
    SIS, SIR, and SIRS models. The disease models are currently
    available only in discrete-time versions.</p>
    <p>The disease model documentation is available at
    https://graph-tool.skewed.de/static/doc/dynamics.html.</p>
  </sec>
  <sec id="epimodel">
    <title>EpiModel</title>
    <p>The R package EpiModel
    (<xref alt="Jenness et al., 2018" rid="ref-jennessU003AEpiModel" ref-type="bibr">Jenness
    et al., 2018</xref>) can handle SI, SIS, and SIR disease spread. It
    is possible to extend EpiModel to other processes. EpiModel is built
    around the StatNet package. More details are available at
    https://www.epimodel.org/</p>
  </sec>
</sec>
<sec id="funding-and-support">
  <title>Funding and Support</title>
  <p>The development of EoN has been supported by Global Good and by La
  Trobe University.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-centolaU003Acascade">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Centola</surname><given-names>Damon</given-names></name>
          <name><surname>Eguı́luz</surname><given-names>Vı́ctor M</given-names></name>
          <name><surname>Macy</surname><given-names>Michael W</given-names></name>
        </person-group>
        <article-title>Cascade dynamics of complex propagation</article-title>
        <source>Physica A: Statistical Mechanics and its Applications</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2007">2007</year>
        <volume>374</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1016/j.physa.2006.06.018</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cota2017optimized">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Cota</surname><given-names>Wesley</given-names></name>
          <name><surname>Ferreira</surname><given-names>Silvio C</given-names></name>
        </person-group>
        <article-title>Optimized gillespie algorithms for the simulation of markovian epidemic processes on large and heterogeneous networks</article-title>
        <source>Computer Physics Communications</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>219</volume>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2017.06.007</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-doob1945markoff">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Doob</surname><given-names>Joseph L</given-names></name>
        </person-group>
        <article-title>Markoff chains–denumerable case</article-title>
        <source>Transactions of the American Mathematical Society</source>
        <publisher-name>JSTOR</publisher-name>
        <year iso-8601-date="1945">1945</year>
        <volume>58</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1090/S0002-9947-1945-0013857-4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-jennessU003AEpiModel">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Jenness</surname><given-names>S. M.</given-names></name>
          <name><surname>Goodreau</surname><given-names>S. M.</given-names></name>
          <name><surname>Morris</surname><given-names>M.</given-names></name>
        </person-group>
        <article-title>EpiModel: An R package for mathematical modeling of infectious disease over networks</article-title>
        <source>Journal of Statistical Software</source>
        <year iso-8601-date="2018">2018</year>
        <volume>84</volume>
        <issue>8</issue>
        <pub-id pub-id-type="doi">10.18637/jss.v084.i08</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gillespie1977exact">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gillespie</surname><given-names>D. T.</given-names></name>
        </person-group>
        <article-title>Exact stochastic simulation of coupled chemical reactions</article-title>
        <source>The Journal of Physical Chemistry</source>
        <year iso-8601-date="1977">1977</year>
        <volume>81</volume>
        <issue>25</issue>
        <pub-id pub-id-type="doi">10.1021/j100540a008</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-hagberg2008exploring">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Hagberg</surname><given-names>Aric A.</given-names></name>
          <name><surname>Schult</surname><given-names>Daniel A.</given-names></name>
          <name><surname>Swart</surname><given-names>Pieter J.</given-names></name>
        </person-group>
        <article-title>Exploring network structure, dynamics, and function using NetworkX</article-title>
        <source>Proceedings of the 7th python in science conference</source>
        <person-group person-group-type="editor">
          <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
          <name><surname>Vaught</surname><given-names>Travis</given-names></name>
          <name><surname>Millman</surname><given-names>Jarrod</given-names></name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <pub-id pub-id-type="doi">10.25080/issn.2575-9752</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-holme2014model">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Holme</surname><given-names>Petter</given-names></name>
        </person-group>
        <article-title>Model versions and fast algorithms for network epidemiology</article-title>
        <source>arXiv preprint arXiv:1403.1011</source>
        <year iso-8601-date="2014">2014</year>
      </element-citation>
    </ref>
    <ref id="ref-kissU003AEoN">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Kiss</surname><given-names>Istvan Z</given-names></name>
          <name><surname>Miller</surname><given-names>Joel C</given-names></name>
          <name><surname>Simon</surname><given-names>Péter L</given-names></name>
        </person-group>
        <source>Mathematics of epidemics on networks: From exact to approximate models</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <pub-id pub-id-type="doi">10.1007/978-3-319-50806-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-peixoto_graph-tool_2014">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Peixoto</surname><given-names>Tiago P.</given-names></name>
        </person-group>
        <article-title>The graph-tool python library</article-title>
        <source>figshare</source>
        <year iso-8601-date="2014">2014</year>
        <date-in-citation content-type="access-date"><year iso-8601-date="2014-09-10">2014</year><month>09</month><day>10</day></date-in-citation>
        <uri>http://figshare.com/articles/graph_tool/1164194</uri>
        <pub-id pub-id-type="doi">10.6084/m9.figshare.1164194</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
