<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3471</article-id>
<article-id pub-id-type="doi">10.21105/joss.03471</article-id>
<title-group>
<article-title>pointcloudset: Efficient Analysis of Large Datasets of
Point Clouds Recorded Over Time</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-3925-6260</contrib-id>
<string-name>Thomas Goelles</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3290-5333</contrib-id>
<string-name>Birgit Schlager</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1920-8437</contrib-id>
<string-name>Stefan Muckenhuber</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<string-name>Sarah Haas</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Tobias Hammer</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Virtual Vehicle Research GmbH, Inffeldgasse 21A, 8010 Graz,
Austria</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Graz University of Technology, Rechbauerstrasse 12, 8010
Graz, Austria</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>University of Graz, Heinrichstrasse 36, 8010 Graz,
Austria</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-02-01">
<day>1</day>
<month>2</month>
<year>2021</year>
</pub-date>
<volume>6</volume>
<issue>65</issue>
<fpage>3471</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>lidar</kwd>
<kwd>point cloud</kwd>
<kwd>ROS</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Point clouds are a very common format for representing three
  dimensional data. Point clouds can be acquired by different sensor
  types and methods, such as lidar (light detection and ranging), radar
  (radio detection and ranging), RGB-D (red, green, blue, depth)
  cameras, photogrammetry, etc. In many cases multiple point clouds are
  recorded over time, e.g., automotive lidars record point clouds with
  very high acquisition frequencies (typically around 10-20Hz) resulting
  in millions of points per second. Analyzing such a large collection of
  point clouds is a big challenge due to the huge amount of measurement
  data. The Python package <monospace>pointcloudset</monospace> provides
  a way to handle, analyse, and visualize large datasets consisting of
  multiple point clouds recorded over time.
  <monospace>pointcloudset</monospace> features lazy evaluation and
  parallel processing and is designed to enable development of new point
  cloud algorithms and their application on big datasets.</p>
  <p><monospace>pointcloudset</monospace> builds on several well
  established Python libraries and packages for data processing and
  visualization, such as dask
  (<xref alt="Dask Development Team, 2016" rid="ref-dask" ref-type="bibr">Dask
  Development Team, 2016</xref>;
  <xref alt="Rocklin, 2015" rid="ref-matthew_rocklin-proc-scipy-2015" ref-type="bibr">Rocklin,
  2015</xref>), pyntcloud
  (<xref alt="Pyntcloud Development Team, 2021" rid="ref-pyntcloud" ref-type="bibr">Pyntcloud
  Development Team, 2021</xref>), open3D
  (<xref alt="Zhou et al., 2018" rid="ref-ZhouU003A2018" ref-type="bibr">Zhou
  et al., 2018</xref>), plotly
  (<xref alt="Plotly Technologies Inc., 2015" rid="ref-plotlyU003A2015" ref-type="bibr">Plotly
  Technologies Inc., 2015</xref>), and pandas
  (<xref alt="McKinney, 2010" rid="ref-mckinney-proc-scipyU003A2010" ref-type="bibr">McKinney,
  2010</xref>;
  <xref alt="The pandas development team, 2020" rid="ref-reback2020pandasU003A2020" ref-type="bibr">The
  pandas development team, 2020</xref>).</p>
</sec>
<sec id="emerging-point-cloud-sensor-technologies">
  <title>Emerging Point Cloud Sensor Technologies</title>
  <p>Considering recently emerging and promising lidar technologies such
  as micro-electro-mechanical systems, optical phased array,
  vertical-cavity surface-emitting laser, single-photon avalanche diode,
  etc., combined with large efforts invested in particular by the
  automotive industry
  (<xref alt="Hecht, 2018" rid="ref-HechtU003A2018" ref-type="bibr">Hecht,
  2018</xref>;
  <xref alt="Thakur, 2016" rid="ref-ThakurU003A2016" ref-type="bibr">Thakur,
  2016</xref>;
  <xref alt="Warren, 2019" rid="ref-WarrenU003A2019" ref-type="bibr">Warren,
  2019</xref>) to further develop low-cost lidar systems, lidar sensors
  have the potential to enable a new cost-efficient way to perceive and
  measure the environment. This will not only have a strong impact on
  automotive applications but also offers a large potential for other
  research fields and application domains, such as robotics, geophysics,
  etc. Already today, state-of-the-art lidar sensors designed for
  automotive applications, such as the Ouster OS-1 [https://ouster.com]
  or the Velodyne Ultra Puck [https://velodynelidar.com], offer many
  advantages compared to previous lidar systems used for 3D surveying or
  terrestrial laser scanning: automotive lidar sensors, are small in
  size, light in weight, robust, have a low eye safety class, and
  support high scanning speed. The expected substantial decrease in
  costs and increase in performance in the upcoming years will open up
  many new application areas for lidar systems.</p>
  <p>Apart from the progress in the lidar sector, technological
  improvements, as well as size and cost reduction, can also be observed
  for other 3D sensing technologies such as radar and RGB-D cameras.
  This will additionally open up new possibilities and application areas
  for 3D sensing methods and increases the importance of Python packages
  that are able to process large amounts of point cloud data.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Other Python packages for point clouds, such as open3D, pyntcloud,
  and pcl
  (<xref alt="Rusu &amp; Cousins, 2011" rid="ref-Rusu_ICRA2011_PCL" ref-type="bibr">Rusu
  &amp; Cousins, 2011</xref>) and its Python bindings
  (<xref alt="Python-PCL Contributors, 2017" rid="ref-python-pcl" ref-type="bibr">Python-PCL
  Contributors, 2017</xref>), focus on processing single point clouds
  rather than on processing time series of point clouds. Another related
  library is PDAL
  (<xref alt="PDAL Contributors, 2018" rid="ref-pdal_contributors_2018_2556738" ref-type="bibr">PDAL
  Contributors, 2018</xref>), which also works with pipelines on point
  clouds. However, it is focused on single point cloud processing as
  well. ROS (robot operating system)
  (<xref alt="Stanford Artificial Intelligence Laboratory et al., 2018" rid="ref-rosU003A2018" ref-type="bibr">Stanford
  Artificial Intelligence Laboratory et al., 2018</xref>) provides a way
  to store, access, and visualize multiple point clouds stored as
  <monospace>rosbags</monospace>. However, these
  <monospace>rosbags</monospace> are meant to be accessed only in a
  serial fashion, which is not ideal for postprocessing and not well
  suited for extracting subsets of the point cloud dataset.</p>
  <p>Compared to these packages, pointcloudset provides efficient
  analysis of time series of point clouds using parallel processing. For
  instance, the package is a helpful toolkit for postprocessing lidar
  datasets recorded by ROS or for postprocessing multiple lidar scans
  from terrestrial laser scanners. In addition, pointcloudset can be
  used to develop algorithms on a single point cloud and apply them to
  big datasets of point clouds.</p>
</sec>
<sec id="data-structures-of-pointcloudset">
  <title>Data Structures of pointcloudset</title>
  <fig>
    <caption><p>Dataset object with main properties and ways to read and
    write data.
    <styled-content id="figU003Adataset"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="./figures/data_pipeline2.pdf" xlink:title="" />
  </fig>
  <fig>
    <caption><p>PointCloud object with main properties and ways to read
    and write data.
    <styled-content id="figU003Apointcloud"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="./figures/data_pipeline3.pdf" xlink:title="" />
  </fig>
  <p><xref alt="Figure 1" rid="figU003Adataset">Figure 1</xref>
  illustrates the structure of the <monospace>Dataset</monospace> class,
  including import and export possibilities. A Dataset consists of many
  PointCloud objects, which can be accessed like list elements in
  Python. Alternatively, a <monospace>PointCloud</monospace> object can
  also be created directly from files, as illustrated in
  <xref alt="Figure 2" rid="figU003Apointcloud">Figure 2</xref>.</p>
</sec>
<sec id="contributions">
  <title>Contributions</title>
  <p>T.G. developed the concept and architecture; T.G., B.S., and S.H.
  developed the software; T.G. wrote the automatic tests; B.S. and T.G.
  wrote the software documentation; T.H. and T.G. created Jupyter
  notebooks for example usage; S.M., T.G., and B.S. wrote the
  manuscript. All authors contributed to the manuscript and software
  testing.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The publication was written at Virtual Vehicle Research GmbH in
  Graz, Austria. The authors would like to acknowledge the financial
  support within the COMET K2 Competence Centers for Excellent
  Technologies from the Austrian Federal Ministry for Climate Action
  (BMK), the Austrian Federal Ministry for Digital and Economic Affairs
  (BMDW), the Province of Styria (Dept. 12) and the Styrian Business
  Promotion Agency (SFG). The Austrian Research Promotion Agency (FFG)
  has been authorised for the programme management.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-reback2020pandasU003A2020">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>The pandas development team</string-name>
        </person-group>
        <source>Pandas-dev/pandas: pandas</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2020-02">2020</year><month>02</month>
        <uri>https://doi.org/10.5281/zenodo.3509134</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.3509134</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mckinney-proc-scipyU003A2010">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>McKinney</surname></name>
        </person-group>
        <article-title>Data Structures for Statistical Computing in Python</article-title>
        <source>Proceedings of the 9th Python in Science Conference</source>
        <person-group person-group-type="editor">
          <name><surname>Walt</surname></name>
          <name><surname>Millman</surname></name>
        </person-group>
        <year iso-8601-date="2010">2010</year>
        <pub-id pub-id-type="doi"> 10.25080/Majora-92bf1922-00a </pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ZhouU003A2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Zhou</surname><given-names>Qian-Yi</given-names></name>
          <name><surname>Park</surname><given-names>Jaesik</given-names></name>
          <name><surname>Koltun</surname><given-names>Vladlen</given-names></name>
        </person-group>
        <article-title>Open3D: A modern library for 3D data processing</article-title>
        <source>arXiv:1801.09847</source>
        <year iso-8601-date="2018">2018</year>
      </element-citation>
    </ref>
    <ref id="ref-plotlyU003A2015">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <string-name>Plotly Technologies Inc.</string-name>
        </person-group>
        <article-title>Collaborative data science</article-title>
        <publisher-name>Plotly Technologies Inc.</publisher-name>
        <publisher-loc>Montreal, QC</publisher-loc>
        <year iso-8601-date="2015">2015</year>
        <uri>https://plot.ly</uri>
      </element-citation>
    </ref>
    <ref id="ref-rosU003A2018">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>Stanford Artificial Intelligence Laboratory et al.</string-name>
        </person-group>
        <source>Robotic operating system</source>
        <year iso-8601-date="2018-05-23">2018</year><month>05</month><day>23</day>
        <uri>https://www.ros.org</uri>
      </element-citation>
    </ref>
    <ref id="ref-HechtU003A2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hecht</surname><given-names>Jeff</given-names></name>
        </person-group>
        <article-title>Lidar for Self-Driving Cars</article-title>
        <source>Optics &amp; Photonics News</source>
        <year iso-8601-date="2018-01">2018</year><month>01</month>
        <volume>29</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1364/OPN.29.1.000026</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ThakurU003A2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Thakur</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Scanning LIDAR in advanced driver assistance systems and beyond: Building a road map for next-generation LIDAR technology</article-title>
        <source>IEEE Consumer Electronics Magazine</source>
        <year iso-8601-date="2016">2016</year>
        <volume>5</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1109/MCE.2016.2556878</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-WarrenU003A2019">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Warren</surname><given-names>M. E.</given-names></name>
        </person-group>
        <article-title>Automotive LIDAR technology</article-title>
        <source>2019 symposium on VLSI circuits</source>
        <year iso-8601-date="2019">2019</year>
        <volume></volume>
        <pub-id pub-id-type="doi">10.23919/VLSIC.2019.8777993</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-dask">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>Dask Development Team</string-name>
        </person-group>
        <source>Dask: Library for dynamic task scheduling</source>
        <year iso-8601-date="2016">2016</year>
        <uri>https://dask.org</uri>
      </element-citation>
    </ref>
    <ref id="ref-pyntcloud">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>Pyntcloud Development Team</string-name>
        </person-group>
        <source>Pyntcloud</source>
        <year iso-8601-date="2021">2021</year>
        <uri>https://pyntcloud.readthedocs.io/en/latest/introduction.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-matthew_rocklin-proc-scipy-2015">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Rocklin</surname><given-names>Matthew</given-names></name>
        </person-group>
        <article-title>Dask: Parallel computation with blocked algorithms and task scheduling</article-title>
        <source>Proceedings of the 14th Python in Science Conference</source>
        <person-group person-group-type="editor">
          <name><surname>Huff</surname><given-names>Kathryn</given-names></name>
          <name><surname>Bergstra</surname><given-names>James</given-names></name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <pub-id pub-id-type="doi">10.25080/majora-7b98e3ed-013</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-pdal_contributors_2018_2556738">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>PDAL Contributors</string-name>
        </person-group>
        <article-title>PDAL point data abstraction library</article-title>
        <year iso-8601-date="2018-11">2018</year><month>11</month>
        <uri>https://doi.org/10.5281/zenodo.2556738</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.2556738</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Rusu_ICRA2011_PCL">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Rusu</surname><given-names>Radu Bogdan</given-names></name>
          <name><surname>Cousins</surname><given-names>Steve</given-names></name>
        </person-group>
        <article-title>3D is here: Point Cloud Library (PCL)</article-title>
        <source>IEEE International Conference on Robotics and Automation (ICRA)</source>
        <publisher-name>IEEE</publisher-name>
        <publisher-loc>Shanghai, China</publisher-loc>
        <year iso-8601-date="2011">2011</year>
        <pub-id pub-id-type="doi">10.1109/icra.2011.5980567</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-python-pcl">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>Python-PCL Contributors</string-name>
        </person-group>
        <source>Python-PCL: Python bindings to the pointcloud library (pcl)</source>
        <year iso-8601-date="2017-12-07">2017</year><month>12</month><day>07</day>
        <uri>https://github.com/strawlab/python-pcl</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
