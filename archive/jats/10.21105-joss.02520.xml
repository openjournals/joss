<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2520</article-id>
<article-id pub-id-type="doi">10.21105/joss.02520</article-id>
<title-group>
<article-title>Gridap: An extensible Finite Element toolbox in
Julia</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2391-4086</contrib-id>
<string-name>Santiago Badia</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3667-443X</contrib-id>
<string-name>Francesc Verdugo</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Mathematics, Monash University, Clayton,
Victoria, 3800, Australia.</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Centre Internacional de Mètodes Numèrics en Enginyeria,
Esteve Terrades 5, E-08860 Castelldefels, Spain.</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-07-06">
<day>6</day>
<month>7</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>52</issue>
<fpage>2520</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>julia</kwd>
<kwd>pdes</kwd>
<kwd>partial differential equations</kwd>
<kwd>finite elements</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Gridap is a new Finite Element (FE) framework, exclusively written
  in the Julia programming language, for the numerical simulation of a
  wide range of mathematical models governed by partial differential
  equations (PDEs). The library provides a feature-rich set of
  discretization techniques, including continuous and discontinuous FE
  methods with Lagrangian, Raviart-Thomas, or Nédélec interpolations,
  and supports a wide range of problem types including linear,
  nonlinear, single-field, and multi-field PDEs (see
  (<xref alt="Badia et al., 2018, sec. 3" rid="ref-badia_femparU003A_2017" ref-type="bibr">Badia
  et al., 2018, sec. 3</xref>) for a detailed presentation of the
  mathematical abstractions behind the implementation of these FE
  methods). Gridap is designed to help application experts to easily
  simulate real-world problems, to help researchers improve productivity
  when developing new FE-related techniques, and also for its usage in
  numerical PDE courses.</p>
  <p>The main motivation behind Gridap is to find an improved balance
  between computational performance, user-experience, and work-flow
  productivity when working with FE libraries. Previous FE frameworks,
  e.g., FEniCS
  (<xref alt="Alnæs et al., 2015" rid="ref-Alnaes2015" ref-type="bibr">Alnæs
  et al., 2015</xref>) or Deal.II
  (<xref alt="Bangerth et al., 2007" rid="ref-Bangerth2007" ref-type="bibr">Bangerth
  et al., 2007</xref>) usually provides a high-level user front-end to
  facilitate the use of the library and a computational back-end to
  achieve performance. The user front-end is usually programmable in an
  interpreted language like Python, whereas the computational back-end
  is usually coded in a compiled language like C/C++ or Fortran. Users
  can benefit from the high-level front-end (i.e., for rapid
  prototyping) and simultaneously enjoy the performance of the compiled
  back-end. This approach reaches a compromise between performance and
  productivity when the back-end provides all the functionality required
  by the user. However, it does not satisfactorily address the needs of
  researchers on numerical methods willing to extend the library with
  new techniques or features. These extensions usually need to be done
  at the level of the computational back-end for performance reasons.
  Thus, the researcher is forced to develop a new code in a compiled
  language like C/C++ instead of benefiting from the productivity of
  scripting languages like Python, incurring serious productivity
  losses. In order to overcome this limitation, Gridap is fully
  implemented in the Julia programming language
  (<xref alt="Bezanson et al., 2017" rid="ref-Bezanson2017" ref-type="bibr">Bezanson
  et al., 2017</xref>). Julia combines the performance of compiled
  languages with the productivity of interpreted ones by using type
  inference and just-in-time compilation to generate fast code. As a
  result, there is no need to use two different languages to write
  low-level performance code and high-level user interfaces. In
  addition, writing a FE library in Julia also allows one to leverage
  the feature-rich ecosystem of Julia libraries and exploit its
  excellent package manager. It permits a seamless coupling of Gridap
  with application-specific libraries, like optimization
  (<xref alt="Dunning et al., 2017" rid="ref-Dunning2017" ref-type="bibr">Dunning
  et al., 2017</xref>), an approximation of ordinary differential
  equations
  (<xref alt="Rackauckas &amp; Nie, 2017" rid="ref-Rackauckas2017" ref-type="bibr">Rackauckas
  &amp; Nie, 2017</xref>), or data science
  (<xref alt="Innes, 2018" rid="ref-Innes2018" ref-type="bibr">Innes,
  2018</xref>), which can certainly boost the capabilities of a FE
  solver.</p>
  <p>Another major feature of Gridap is that it is not a simple Julia
  translation of a standard object-oriented FE code. There are other FE
  libraries written in Julia that have been inspired by standard FE
  frameworks, see, e.g., FinEtools
  (<xref alt="Krysl, n.d." rid="ref-finetools" ref-type="bibr">Krysl,
  n.d.</xref>), JuliaFEM
  (<xref alt="Frondelius &amp; Aho, 2017" rid="ref-frondelius2017juliafem" ref-type="bibr">Frondelius
  &amp; Aho, 2017</xref>), or JuAFEM
  (<xref alt="Carlsson, n.d." rid="ref-Carlsson" ref-type="bibr">Carlsson,
  n.d.</xref>) (whose interface resembles Deal.II). In contrast, Gridap
  adopts a novel software design that allows one to manipulate different
  types of data associated with the cells of the computational mesh in a
  convenient way. For instance, one can build an object representing the
  elemental matrices for all cells in the mesh using high-level API
  calls, without explicitly writing any for-loop. These objects
  representing data for all cells of the mesh are usually
  <italic>lazy</italic>, meaning that the underlying data is never
  stored for all cells in the mesh simultaneously. Instead, the value
  for a specific cell is computed on-the-fly when needed, which
  certainly reduces memory requirements. This software design allows the
  library developers to hide assembly loops and other core computations
  from the user-code, leading to a very compact, user-friendly, syntax,
  while providing a high degree of flexibility for users to define their
  own weak forms. A Poisson or Stokes problem can be solved with Gridap
  in 10-20 lines of code, as this example for the Poisson equation
  shows:</p>
  <graphic mimetype="application" mime-subtype="pdf" xlink:href="code.pdf" />
  <p>Other FE packages like FEniCS also achieve such compact user
  interfaces, but in contrast to Gridap, they are based on a
  sophisticated compiler of variational forms
  (<xref alt="Kirby &amp; Logg, 2006" rid="ref-Kirby2006" ref-type="bibr">Kirby
  &amp; Logg, 2006</xref>), which generates, compiles and links a
  specialized C++ back-end for the problem at hand. One of the
  limitations of this approach is that the form compiler is a rigid
  system that is not designed to be extended by average users.</p>
  <p>Gridap is an open-source project hosted at Github and distributed
  under an MIT license.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-badia_femparU003A_2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Badia</surname><given-names>Santiago</given-names></name>
          <name><surname>Martín</surname><given-names>Alberto F.</given-names></name>
          <name><surname>Principe</surname><given-names>Javier</given-names></name>
        </person-group>
        <article-title>FEMPAR: An Object-Oriented Parallel Finite Element Framework</article-title>
        <source>Archives of Computational Methods in Engineering</source>
        <year iso-8601-date="2018-10">2018</year><month>10</month>
        <volume>25</volume>
        <issue>2</issue>
        <issn>18861784</issn>
        <pub-id pub-id-type="doi">10.1007/s11831-017-9244-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-frondelius2017juliafem">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Frondelius</surname><given-names>Tero</given-names></name>
          <name><surname>Aho</surname><given-names>Jukka</given-names></name>
        </person-group>
        <article-title>JuliaFEM - open source solver for both industrial and academia usage</article-title>
        <source>Rakenteiden Mekaniikka</source>
        <year iso-8601-date="2017">2017</year>
        <volume>50</volume>
        <issue>3</issue>
        <uri>https://rakenteidenmekaniikka.journal.fi/article/view/64224</uri>
        <pub-id pub-id-type="doi">10.23998/rm.64224</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Innes2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Innes</surname><given-names>Mike</given-names></name>
        </person-group>
        <article-title>Flux: Elegant machine learning with Julia</article-title>
        <source>Journal of Open Source Software</source>
        <publisher-name>The Open Journal</publisher-name>
        <year iso-8601-date="2018-05">2018</year><month>05</month>
        <volume>3</volume>
        <issue>25</issue>
        <issn>2475-9066</issn>
        <uri>http://joss.theoj.org/papers/10.21105/joss.00602</uri>
        <pub-id pub-id-type="doi">10.21105/joss.00602</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Dunning2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Dunning</surname><given-names>Iain</given-names></name>
          <name><surname>Huchette</surname><given-names>Joey</given-names></name>
          <name><surname>Lubin</surname><given-names>Miles</given-names></name>
        </person-group>
        <article-title>JuMP: A modeling language for mathematical optimization</article-title>
        <source>SIAM Review</source>
        <publisher-name>Society for Industrial; Applied Mathematics Publications</publisher-name>
        <year iso-8601-date="2017-05">2017</year><month>05</month>
        <volume>59</volume>
        <issue>2</issue>
        <issn>00361445</issn>
        <uri>https://arxiv.org/abs/1508.01982</uri>
        <pub-id pub-id-type="doi">10.1137/15M1020575</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Bezanson2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bezanson</surname><given-names>Jeff</given-names></name>
          <name><surname>Edelman</surname><given-names>Alan</given-names></name>
          <name><surname>Karpinski</surname><given-names>Stefan</given-names></name>
          <name><surname>Shah</surname><given-names>Viral B.</given-names></name>
        </person-group>
        <article-title>Julia: A fresh approach to numerical computing</article-title>
        <source>SIAM Review</source>
        <publisher-name>Society for Industrial; Applied Mathematics Publications</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>59</volume>
        <issue>1</issue>
        <issn>00361445</issn>
        <pub-id pub-id-type="doi">10.1137/141000671</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Bangerth2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bangerth</surname><given-names>W.</given-names></name>
          <name><surname>Hartmann</surname><given-names>R.</given-names></name>
          <name><surname>Kanschat</surname><given-names>G.</given-names></name>
        </person-group>
        <article-title>Deal.II –A general-purpose object-oriented finite element library</article-title>
        <source>ACM Transactions on Mathematical Software</source>
        <publisher-name>ACM</publisher-name>
        <year iso-8601-date="2007-08">2007</year><month>08</month>
        <volume>33</volume>
        <issue>4</issue>
        <isbn>0098-3500</isbn>
        <issn>00983500</issn>
        <uri>http://portal.acm.org/citation.cfm?doid=1268776.1268779</uri>
        <pub-id pub-id-type="doi">10.1145/1268776.1268779</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Carlsson">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Carlsson</surname><given-names>Kristoffer</given-names></name>
        </person-group>
        <article-title>JuaFEM git repository</article-title>
        <uri>https://github.com/KristofferC/JuAFEM.jl</uri>
      </element-citation>
    </ref>
    <ref id="ref-finetools">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Krysl</surname><given-names>Petr</given-names></name>
        </person-group>
        <article-title>FinEtools git repository</article-title>
        <uri>https://github.com/PetrKryslUCSD/FinEtools.jl</uri>
      </element-citation>
    </ref>
    <ref id="ref-Kirby2006">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kirby</surname><given-names>Robert C</given-names></name>
          <name><surname>Logg</surname><given-names>Anders</given-names></name>
        </person-group>
        <article-title>A compiler for variational forms</article-title>
        <source>ACM Transactions on Mathematical Software</source>
        <year iso-8601-date="2006">2006</year>
        <volume>32</volume>
        <issue>3</issue>
        <issn>00983500</issn>
        <uri>https://arxiv.org/abs/1112.0402</uri>
        <pub-id pub-id-type="doi">10.1145/1163641.1163644</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Rackauckas2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Rackauckas</surname><given-names>Christopher</given-names></name>
          <name><surname>Nie</surname><given-names>Qing</given-names></name>
        </person-group>
        <article-title>DifferentialEquations.jl – A Performant and Feature-Rich Ecosystem for Solving Differential Equations in Julia</article-title>
        <source>Journal of Open Research Software</source>
        <publisher-name>Ubiquity Press, Ltd.</publisher-name>
        <year iso-8601-date="2017-05">2017</year><month>05</month>
        <volume>5</volume>
        <issue>1</issue>
        <issn>2049-9647</issn>
        <uri>http://openresearchsoftware.metajnl.com/articles/10.5334/jors.151/</uri>
        <pub-id pub-id-type="doi">10.5334/jors.151</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Alnaes2015">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Alnæs</surname><given-names>Martin</given-names></name>
          <name><surname>Blechta</surname><given-names>Jan</given-names></name>
          <name><surname>Hake</surname><given-names>Johan</given-names></name>
          <name><surname>Johansson</surname><given-names>August</given-names></name>
          <name><surname>Kehlet</surname><given-names>Benjamin</given-names></name>
          <name><surname>Logg</surname><given-names>Anders</given-names></name>
          <name><surname>Richardson</surname><given-names>Chris</given-names></name>
          <name><surname>Ring</surname><given-names>Johannes</given-names></name>
          <name><surname>Rognes</surname><given-names>Marie E</given-names></name>
          <name><surname>Wells</surname><given-names>Garth N</given-names></name>
        </person-group>
        <article-title>The FEniCS Project Version 1.5</article-title>
        <source>The FEniCS Project Version 1.5</source>
        <year iso-8601-date="2015-12">2015</year><month>12</month>
        <volume>3</volume>
        <issue>100</issue>
        <issn>2197-8263</issn>
        <uri>https://journals.ub.uni-heidelberg.de/index.php/ans/article/view/20553</uri>
        <pub-id pub-id-type="doi">10.11588/ans.2015.100.20553</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
