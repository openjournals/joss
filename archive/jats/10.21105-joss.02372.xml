<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2372</article-id>
<article-id pub-id-type="doi">10.21105/joss.02372</article-id>
<title-group>
<article-title>DVRlib: A C++ library for geometric mesh improvement
using Directional Vertex Relaxation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<string-name>Ramsharan Rangarajan</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Adrian Lew</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Mechanical Engineering, Indian Institute of
Science Bangalore, India</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Mechanical Engineering, Stanford University,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-06-24">
<day>24</day>
<month>6</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>52</issue>
<fpage>2372</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>unstructured meshes</kwd>
<kwd>optimization</kwd>
<kwd>mesh improvement</kwd>
<kwd>finite element</kwd>
<kwd>moving boundary problems</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The success of finite element simulations in physical sciences,
  applied mathematics, and computer graphics relies on generating
  high-quality unstructured meshes. In general, well-shaped elements are
  essential to ensure accurate numerical approximations, to improve the
  conditioning of systems of equations to be resolved, and to choose
  reasonable step sizes in time integration schemes.</p>
  <p><monospace>DVRlib</monospace> is a C++ library that implements the
  directional vertex relaxation algorithm introduced in Rangarajan &amp;
  Lew
  (<xref alt="2017" rid="ref-rangarajan2017provably" ref-type="bibr">2017</xref>)
  to improve qualities of unstructured meshes.
  <monospace>DVRlib</monospace> improves qualities of triangular and
  tetrahedral elements by <italic>iteratively</italic> and
  <italic>optimally</italic> perturbing a selected set of vertices along
  prescribed directions. During the process, the connectivity of the
  mesh remains unaltered; just the locations of vertices may change.
  <monospace>DVRlib</monospace> is straightforward to couple with
  existing libraries for unstructured mesh generation by invoking the
  functionalities it provides as a simple post-processing step. Equally
  significantly, <monospace>DVRlib</monospace> enables engineers and
  researchers to simulate a challenging class of moving boundary
  problems by helping to maintain good element qualities in deforming
  meshes.</p>
</sec>
<sec id="what-dvrlib-does-and-doesnt">
  <title>What <monospace>DVRlib</monospace> does (and doesn’t)</title>
  <p><monospace>DVRlib</monospace> provides robust and efficient
  functionalities for improving element qualities in triangular and
  tetrahedral meshes by perturbing locations of a specified set of
  vertices along a prescribed set of directions. Despite relying solely
  on vertex perturbations for (geometric) mesh relaxation,
  <monospace>DVRlib</monospace> generally achieves significant
  improvement in mesh quality. The documentation accompanying the
  library provides numerous examples demonstrating improvement in mesh
  quality achieved using <monospace>DVRlib</monospace> when relaxing
  meshes produced by commonly used mesh generators
  (<xref alt="Alliez et al., 2020" rid="ref-cgalU003Arty-m3-20a" ref-type="bibr">Alliez
  et al., 2020</xref>;
  <xref alt="Altair Engineering, 2020" rid="ref-hypermesh" ref-type="bibr">Altair
  Engineering, 2020</xref>;
  <xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-geuzaine2009gmsh" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>;
  <xref alt="Shewchuk, 1996" rid="ref-shewchuk1996triangle" ref-type="bibr">Shewchuk,
  1996</xref>;
  <xref alt="Si, 2015" rid="ref-si2015tetgen" ref-type="bibr">Si,
  2015</xref>).</p>
  <p>A large number of software libraries provide a variety of tools for
  generating, improving and manipulating unstructured meshes
  (<xref alt="Altair Engineering, 2020" rid="ref-hypermesh" ref-type="bibr">Altair
  Engineering, 2020</xref>;
  <xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-geuzaine2009gmsh" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>;
  <xref alt="​Schöberl, 2020" rid="ref-netgen" ref-type="bibr">​Schöberl,
  2020</xref>;
  <xref alt="Shewchuk, 1996" rid="ref-shewchuk1996triangle" ref-type="bibr">Shewchuk,
  1996</xref>;
  <xref alt="Si, 2015" rid="ref-si2015tetgen" ref-type="bibr">Si,
  2015</xref>;
  <xref alt="The CGAL Project, 2020" rid="ref-cgalU003Aeb-20a" ref-type="bibr">The
  CGAL Project, 2020</xref>). In this context, it is important to note
  what <monospace>DVRlib</monospace> is <italic>not</italic>:</p>
  <list list-type="bullet">
    <list-item>
      <p><monospace>DVRlib</monospace> is not a mesh generator but can
      be coupled to one.</p>
    </list-item>
    <list-item>
      <p><monospace>DVRlib</monospace> is not a tool for adaptive mesh
      refinement but can improve an adaptively refined mesh.</p>
    </list-item>
    <list-item>
      <p><monospace>DVRlib</monospace> is not a mesh untangling tool but
      can improve an untangled mesh.</p>
    </list-item>
    <list-item>
      <p><monospace>DVRlib</monospace> is not a mesh simplification
      tool.</p>
    </list-item>
  </list>
  <fig>
    <caption><p>Examples illustrating connectivity-preserving mesh
    improvement with
    DVRlib.<styled-content id="figU003A1"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="fig1.jpg" xlink:title="" />
  </fig>
  <p><monospace>DVRlib</monospace> is neither intended to be nor is a
  comprehensive mesh improvement toolbox. <monospace>DVRlib</monospace>
  performs a very specific type of vertex relaxation to improve mesh
  qualities. Nevertheless, <monospace>DVRlib</monospace> can be coupled
  with libraries providing a complementary suite of operations,
  including topological operations such as edge/face swapping, vertex
  insertion/removal and local remeshing
  (<xref alt="​Freitag-Diachin, 2020" rid="ref-mesquite" ref-type="bibr">​Freitag-Diachin,
  2020</xref>;
  <xref alt="​Schlömer, 2020" rid="ref-optimesh" ref-type="bibr">​Schlömer,
  2020</xref>;
  <xref alt="The CGAL Project, 2020" rid="ref-cgalU003Aeb-20a" ref-type="bibr">The
  CGAL Project, 2020</xref>;
  <xref alt="Vartziotis &amp; Wipper, 2018" rid="ref-vartziotis2018getme" ref-type="bibr">Vartziotis
  &amp; Wipper, 2018</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Despite the large volume of literature on the topic and the
  extensive arsenal of operations available for mesh relaxation, mesh
  improvement remains a challenging problem. The state of affairs is
  well summarized in the words of Geuzaine &amp; Remacle
  (<xref alt="2009" rid="ref-geuzaine2009gmsh" ref-type="bibr">2009</xref>):
  <italic>“mesh optimization procedures have a lot to do with ‘black
  magic’: even if the ingredients required to construct a mesh
  optimization procedure are well known (essentially swapping and
  smoothing), there is no known ‘best recipe’, i.e. no known optimal way
  of combining those smoothing and swapping operators.”</italic></p>
  <p><bold>Mesh relaxation with guarantees.</bold> The directional
  vertex relaxation (DVR) algorithm implemented by
  <monospace>DVRlib</monospace> enjoys the distinctive feature of being
  provably robust. DVR guarantees that the mesh quality, and in
  particular, the poorest quality among elements being perturbed
  improves monotonically with each vertex perturbation at each iteration
  (<xref alt="Rangarajan &amp; Lew, 2017" rid="ref-rangarajan2017provably" ref-type="bibr">Rangarajan
  &amp; Lew, 2017</xref>). These guarantees hold independently of the
  choice of vertices being relaxed and the choice of relaxation
  directions, and even when computing with finite precision. These
  features of DVR, which are inherited by its implementation in
  <monospace>DVRlib</monospace>, are notable when compared with commonly
  used mesh smoothing techniques that are often based on heuristic
  analogies with mechanical systems
  (<xref alt="Degand &amp; Farhat, 2002" rid="ref-degand2002three" ref-type="bibr">Degand
  &amp; Farhat, 2002</xref>;
  <xref alt="Persson &amp; Strang, 2004" rid="ref-persson2004simple" ref-type="bibr">Persson
  &amp; Strang, 2004</xref>). Furthermore, unlike mesh relaxation
  algorithms that require resolving systems of equations
  (<xref alt="Budd et al., 2009" rid="ref-budd2009adaptivity" ref-type="bibr">Budd
  et al., 2009</xref>;
  <xref alt="Freitag &amp; Knupp, 2002" rid="ref-freitag2002tetrahedral" ref-type="bibr">Freitag
  &amp; Knupp, 2002</xref>), <monospace>DVRlib</monospace> relaxes
  vertices by resolving single-variable optimization problems.</p>
  <p><bold>Simulating moving boundary problems.</bold> Simulating
  problems involving domains that evolve with time present algorithmic
  challenges stemming from deterioration in mesh quality due to element
  distortion. Fluid-structure interaction and shape optimization
  problems, which are of a broad interest in research and engineering,
  fall in this category. Practical simulation strategies invariably rely
  on remeshing the domain once the mesh is deemed to be sufficiently
  distorted
  (<xref alt="​Dapogny et al., 2020" rid="ref-mmgs" ref-type="bibr">​Dapogny
  et al., 2020</xref>). The functionalities provided by
  <monospace>DVRlib</monospace> are well-suited to aid such simulations,
  see <xref alt="Figure 1" rid="figU003A1">Figure 1</xref>. First, a
  deforming mesh can be relaxed periodically with
  <monospace>DVRlib</monospace> and hence used for longer durations
  (either in time or number of iterations) before remeshing entirely.
  Second, since <monospace>DVRlib</monospace> retains element
  connectivities during mesh relaxation, the sparsity of data structures
  involved in a simulation are preserved (e.g., mass and stiffness
  matrices) so that expensive memory reallocation is avoided.</p>
  <fig>
    <caption><p>Performance benchmarks for serial and thread-parallel
    mesh optimization routines in
    <monospace>DVRlib</monospace>.<styled-content id="figU003A2"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="jpeg" xlink:href="fig2.jpg" xlink:title="" />
  </fig>
  <p>Third, the guarantee of robustness underlying the mesh relaxation
  algorithm implemented by <monospace>DVRlib</monospace> is crucial when
  simulating moving boundary problems, since user-interactivity in
  guiding mesh improvement at each time step or each iteration is
  impossible.</p>
  <p>In this context, we mention that <monospace>DVRlib</monospace> is
  an integral component of on-going research on universal meshes for
  discretizing evolving domains
  (<xref alt="Rangarajan et al., 2019" rid="ref-rangarajan2019algorithm" ref-type="bibr">Rangarajan
  et al., 2019</xref>). We refer to Sharma &amp; Rangarajan
  (<xref alt="2019" rid="ref-sharma2019shape" ref-type="bibr">2019</xref>)
  for an application that uses <monospace>DVRlib</monospace> to adapt
  triangle meshes to conform to moving contact interfaces that arise
  when simulating elastic contact.</p>
  <p><bold>Non-smooth max-min optimization.</bold> The mathematical
  problem defining vertex perturbations in the DVR algorithm is of the
  form:
  <named-content id="eqU003Aopt" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[
  \text{Find}~\lambda^{\mathrm{opt}} \in
  \arg\max_{\lambda\in {\mathbb R}} {\mathrm{F}}(\lambda),\quad \text{where}~
  {\mathrm{F}}(\lambda) \triangleq
  \min\{f_1(\lambda),f_2(\lambda),\ldots,f_n(\lambda)\}.  \label{eq:opt}\tag{1}
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mtext mathvariant="normal">Find</mml:mtext><mml:mspace width="0.222em"></mml:mspace><mml:msup><mml:mi>λ</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>t</mml:mi></mml:mstyle></mml:msup><mml:mo>∈</mml:mo><mml:mo>arg</mml:mo><mml:munder><mml:mo>max</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mo>∈</mml:mo><mml:mstyle mathvariant="double-struck"><mml:mi>ℝ</mml:mi></mml:mstyle></mml:mrow></mml:munder><mml:mstyle mathvariant="normal"><mml:mi>F</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1.0em"></mml:mspace><mml:mtext mathvariant="normal">where</mml:mtext><mml:mspace width="0.222em"></mml:mspace><mml:mstyle mathvariant="normal"><mml:mi>F</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>≜</mml:mo><mml:mo>min</mml:mo><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mi>.</mml:mi></mml:mrow></mml:math></alternatives></disp-formula></named-content>
  Each univariate scalar-valued function <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda\mapsto f_\alpha(\lambda)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>↦</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>λ</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  appearing in (<xref alt="[eq:opt]" rid="eqU003Aopt">[eq:opt]</xref>)
  represents the variation in quality of an element as one of its nodes
  is perturbed along a prescribed direction by the coordinate
  <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda\in {\mathbb R}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>∈</mml:mo><mml:mstyle mathvariant="double-struck"><mml:mi>ℝ</mml:mi></mml:mstyle></mml:mrow></mml:math></alternatives></inline-formula>.
  The vertex perturbation <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda^{\mathrm{opt}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>λ</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>t</mml:mi></mml:mstyle></mml:msup></mml:math></alternatives></inline-formula>
  is optimal in the sense that it maximizes the minimum among the
  qualities of all elements incident at the vertex.</p>
  <p>Computing <inline-formula><alternatives>
  <tex-math><![CDATA[\lambda^{\mathrm{opt}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msup><mml:mi>λ</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>t</mml:mi></mml:mstyle></mml:msup></mml:math></alternatives></inline-formula>,
  however, is a challenge. Since element quality metrics generally
  depend smoothly on vertex locations, each function
  <inline-formula><alternatives>
  <tex-math><![CDATA[f_\alpha]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>f</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:math></alternatives></inline-formula>
  is smooth. As the minimum among the functions
  <inline-formula><alternatives>
  <tex-math><![CDATA[\{f_\alpha\}_\alpha]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="false" form="prefix">{</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:msub><mml:mo stretchy="false" form="postfix">}</mml:mo><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>,
  however, <inline-formula><alternatives>
  <tex-math><![CDATA[{\mathrm{F}}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="normal"><mml:mi>F</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>
  is continuous but not differentiable. Hence, eq.
  (<xref alt="[eq:opt]" rid="eqU003Aopt">[eq:opt]</xref>) represents a
  non-smooth max-min optimization problem for which straightforward
  Newton-type methods do not apply. Ad hoc techniques are ill-advised
  because mesh relaxation requires resolving one such problem for each
  vertex perturbation at each iteration of the algorithm. Heuristic
  methods are also likely to be inefficient, since the number of
  functions <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>,
  which equals the valence of the vertex being relaxed, can be large. In
  tetrahedral meshes, for example, <inline-formula><alternatives>
  <tex-math><![CDATA[n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
  ranges from <inline-formula><alternatives>
  <tex-math><![CDATA[25]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>25</mml:mn></mml:math></alternatives></inline-formula>
  to <inline-formula><alternatives>
  <tex-math><![CDATA[30]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mn>30</mml:mn></mml:math></alternatives></inline-formula>
  for commonly used mesh generators. One of the main functionalities
  provided by <monospace>DVRlib</monospace> is an efficient
  implementation of the algorithm introduced and analyzed in Rangarajan
  (<xref alt="2017" rid="ref-rangarajan2017resolution" ref-type="bibr">2017</xref>)
  to resolve (<xref alt="[eq:opt]" rid="eqU003Aopt">[eq:opt]</xref>) for
  a specific class of element quality metrics.</p>
</sec>
<sec id="functionalities-in-dvrlib">
  <title>Functionalities in <monospace>DVRlib</monospace></title>
  <list list-type="bullet">
    <list-item>
      <p><italic>Mean ratio element quality metrics</italic> for 2D
      triangles and 3D tetrahedra.</p>
    </list-item>
    <list-item>
      <p><italic>Max-min solvers</italic> to compute optimal
      unconstrained vertex perturbations and sampling-based suboptimal
      constrained vertex perturbations.</p>
    </list-item>
    <list-item>
      <p><italic>Relaxation direction generators</italic> for vertex
      relaxation along Cartesian and random directions, and along
      tangent planes to curvilinear manifolds.</p>
    </list-item>
    <list-item>
      <p><italic>Mesh optimization routines.</italic> Overloaded vertex
      and mesh optimization routines for serial and thread-parallel
      execution, see
      <xref alt="Figure 2" rid="figU003A2">Figure 2</xref>.</p>
    </list-item>
    <list-item>
      <p><italic>Mesh data structures.</italic> Recognizing the
      diversity in commonly used mesh data structures,
      <monospace>DVRlib</monospace> retains the mesh type as a template
      parameter throughout. This also facilitates integrating
      <monospace>DVRlib</monospace> into high-performance computing
      codes. A rudimentary mesh data structure is included with the
      library for testing.</p>
    </list-item>
  </list>
  <p>The documentation for <monospace>DVRlib</monospace> provides a
  detailed set of tutorial-style examples for users to get started. The
  library also provides a mesh repository to help test its
  functionalities and to reproduce the benchmark examples discussed in
  the documentation.</p>
  <p>We expect future extensions of the library to introduce new mesh
  types (e.g., quadrilaterals, bricks) and to incorporate a broader
  class of element quality metrics.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>RR thanks the Defence Research and Development Organization’s
  (DRDO, India) research grant JATP/P-VIII/P-2019/164 through the Joint
  Advanced Technology Program with the Indian Institute of Science
  Bangalore, the Science and Engineering Research Board’s (SERB, India)
  early career award ECR/2017/000346, and Ms. Varshini Subash for
  assistance with code profiling and testing as part of her
  undergraduate thesis.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-rangarajan2017provably">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Rangarajan</surname><given-names>Ramsharan</given-names></name>
          <name><surname>Lew</surname><given-names>Adrian J</given-names></name>
        </person-group>
        <article-title>Provably robust directional vertex relaxation for geometric mesh optimization</article-title>
        <source>SIAM J. Sci. Comput.</source>
        <publisher-name>SIAM</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>39</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1137/16M1089101</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-rangarajan2017resolution">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Rangarajan</surname><given-names>Ramsharan</given-names></name>
        </person-group>
        <article-title>On the resolution of certain discrete univariate max–min problems</article-title>
        <source>Comput. Optim. Appl.</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>68</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1007/s10589-017-9903-z</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-si2015tetgen">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Si</surname><given-names>Hang</given-names></name>
        </person-group>
        <article-title>TetGen, a delaunay-based quality tetrahedral mesh generator</article-title>
        <source>ACM Trans. Math. Software</source>
        <publisher-name>ACM New York, NY, USA</publisher-name>
        <year iso-8601-date="2015">2015</year>
        <volume>41</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1145/2629697</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-geuzaine2009gmsh">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Geuzaine</surname><given-names>Christophe</given-names></name>
          <name><surname>Remacle</surname><given-names>Jean-François</given-names></name>
        </person-group>
        <article-title>Gmsh: A 3-d finite element mesh generator with built-in pre-and post-processing facilities</article-title>
        <source>Internat. J. Numer. Methods Engrg.</source>
        <publisher-name>Wiley Online Library</publisher-name>
        <year iso-8601-date="2009">2009</year>
        <volume>79</volume>
        <issue>11</issue>
        <pub-id pub-id-type="doi">10.1002/nme.2579</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-shewchuk1996triangle">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Shewchuk</surname><given-names>Jonathan</given-names></name>
        </person-group>
        <article-title>Triangle: Engineering a 2D quality mesh generator and delaunay triangulator</article-title>
        <source>Workshop on applied computational geometry</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="1996">1996</year>
        <pub-id pub-id-type="doi">10.1007/BFb0014497</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cgalU003Aeb-20a">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>The CGAL Project</string-name>
        </person-group>
        <source>CGAL user and reference manual</source>
        <publisher-name>CGAL Editorial Board</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://doc.cgal.org/5.0.2/Manual/packages.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-mmgs">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>​Dapogny</surname><given-names>C</given-names></name>
          <name><surname>Dobrzynski</surname><given-names>C</given-names></name>
          <name><surname>Frey</surname><given-names>P</given-names></name>
          <name><surname>Froehly</surname><given-names>A</given-names></name>
        </person-group>
        <article-title>Mmg PLATFORM: Robust, open-source and multidisciplinary software for remeshing</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/MmgTools/mmg</uri>
      </element-citation>
    </ref>
    <ref id="ref-hypermesh">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Altair Engineering</surname><given-names>Inc.</given-names></name>
        </person-group>
        <article-title>HyperMesh</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://altairhyperworks.com/product/HyperMesh</uri>
      </element-citation>
    </ref>
    <ref id="ref-persson2004simple">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Persson</surname><given-names>Per-Olof</given-names></name>
          <name><surname>Strang</surname><given-names>Gilbert</given-names></name>
        </person-group>
        <article-title>A simple mesh generator in MATLAB</article-title>
        <source>SIAM Review</source>
        <publisher-name>SIAM</publisher-name>
        <year iso-8601-date="2004">2004</year>
        <volume>46</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1137/S0036144503429121</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-degand2002three">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Degand</surname><given-names>C</given-names></name>
          <name><surname>Farhat</surname><given-names>C</given-names></name>
        </person-group>
        <article-title>A three-dimensional torsional spring analogy method for unstructured dynamic meshes</article-title>
        <source>Computers &amp; Structures</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2002">2002</year>
        <volume>80</volume>
        <issue>3-4</issue>
        <pub-id pub-id-type="doi">10.1016/S0045-7949(02)00002-0</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-sharma2019shape">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sharma</surname><given-names>Akriti</given-names></name>
          <name><surname>Rangarajan</surname><given-names>Ramsharan</given-names></name>
        </person-group>
        <article-title>A shape optimization approach for simulating contact of elastic membranes with rigid obstacles</article-title>
        <source>Internat. J. Numer. Methods Engrg.</source>
        <publisher-name>Wiley Online Library</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>117</volume>
        <issue>4</issue>
        <pub-id pub-id-type="doi">10.1002/nme.5960</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-rangarajan2019algorithm">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Rangarajan</surname><given-names>Ramsharan</given-names></name>
          <name><surname>Kabaria</surname><given-names>Hardik</given-names></name>
          <name><surname>Lew</surname><given-names>Adrian</given-names></name>
        </person-group>
        <article-title>An algorithm for triangulating smooth three-dimensional domains immersed in universal meshes</article-title>
        <source>Internat. J. Numer. Methods Engrg.</source>
        <publisher-name>Wiley Online Library</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>117</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1002/nme.5949</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cgalU003Arty-m3-20a">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Alliez</surname><given-names>Pierre</given-names></name>
          <name><surname>Jamin</surname><given-names>Clément</given-names></name>
          <name><surname>Rineau</surname><given-names>Laurent</given-names></name>
          <name><surname>Tayeb</surname><given-names>Stéphane</given-names></name>
          <name><surname>Tournois</surname><given-names>Jane</given-names></name>
          <name><surname>Yvinec</surname><given-names>Mariette</given-names></name>
        </person-group>
        <article-title>3D mesh generation</article-title>
        <source>CGAL user and reference manual</source>
        <publisher-name>CGAL Editorial Board</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://doc.cgal.org/latest/Mesh_3/group__PkgMesh3Ref.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-optimesh">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>​Schlömer</surname><given-names>Nico</given-names></name>
        </person-group>
        <article-title>OPTIMESH: Triangular mesh optimization</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/nschloe/optimesh</uri>
      </element-citation>
    </ref>
    <ref id="ref-netgen">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>​Schöberl</surname><given-names>Joachim</given-names></name>
        </person-group>
        <article-title>Netgen mesh generator</article-title>
        <source>​GitHub repository</source>
        <publisher-name>​GitHub</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/NGSolve/netgen</uri>
      </element-citation>
    </ref>
    <ref id="ref-mesquite">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>​Freitag-Diachin</surname><given-names>Lori</given-names></name>
        </person-group>
        <article-title>Mesquite: Mesh quality improvement toolkit</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://trilinos.github.io/mesquite.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-vartziotis2018getme">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Vartziotis</surname><given-names>D</given-names></name>
          <name><surname>Wipper</surname><given-names>J</given-names></name>
        </person-group>
        <source>The GETMe mesh smoothing framework: A geometric way to quality finite element meshes</source>
        <publisher-name>CRC Press</publisher-name>
        <year iso-8601-date="2018">2018</year>
        <isbn>9780429680106</isbn>
      </element-citation>
    </ref>
    <ref id="ref-freitag2002tetrahedral">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Freitag</surname><given-names>Lori</given-names></name>
          <name><surname>Knupp</surname><given-names>Patrick</given-names></name>
        </person-group>
        <article-title>Tetrahedral mesh improvement via optimization of the element condition number</article-title>
        <source>Internat. J. Numer. Methods Engrg.</source>
        <publisher-name>Wiley Online Library</publisher-name>
        <year iso-8601-date="2002">2002</year>
        <volume>53</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1002/nme.341</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-budd2009adaptivity">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Budd</surname><given-names>Chris</given-names></name>
          <name><surname>Huang</surname><given-names>Weizhang</given-names></name>
          <name><surname>Russell</surname><given-names>Robert</given-names></name>
        </person-group>
        <article-title>Adaptivity with moving grids</article-title>
        <source>Acta Numer.</source>
        <year iso-8601-date="2009">2009</year>
        <volume>18</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1017/S0962492906400015</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
