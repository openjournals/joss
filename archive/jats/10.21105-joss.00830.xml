<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">830</article-id>
<article-id pub-id-type="doi">10.21105/joss.00830</article-id>
<title-group>
<article-title>MaDaTS: Managing Data on Tiered Storage for Scientific
Workflows</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6819-6949</contrib-id>
<string-name>Devarshi Ghoshal</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1761-4132</contrib-id>
<string-name>Lavanya Ramakrishnan</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Lawrence Berkeley National Lab</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-07-04">
<day>4</day>
<month>7</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>30</issue>
<fpage>830</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>scientific workflows</kwd>
<kwd>data management</kwd>
<kwd>multi-tiered storage</kwd>
<kwd>data abstractions</kwd>
<kwd>high performance computing</kwd>
<kwd>burst buffer</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Scientific workflows are processing large amounts of data through
  complex simulation and analysis tasks. Meanwhile, the need to minimize
  I/O costs on next generation systems and the evolution of new
  technologies (NVRAMs, SSDs etc.) is resulting in deeper storage
  hierarchies on High Performance Computing (HPC) systems. A
  multi-tiered storage hierarchy introduces complexities in workflow and
  data management. There is need for simple and flexible data
  abstractions that can allow users to seamlessly manage workflow data
  and tasks on HPC systems with multiple storage tiers. MaDaTS (Managing
  Data on Tiered Storage for Scientific Workflows) provides an API and a
  command-line tool that allows users to manage their workflows and data
  on tiered storage (Ghoshal &amp; Ramakrishnan
  (<xref alt="2017" rid="ref-Ghoshal2017" ref-type="bibr">2017</xref>)).</p>
  <table-wrap>
    <table>
      <thead>
        <tr>
          <th align="center">Traditional Workflow Execution</th>
          <th align="center">MaDaTS Workflow Execution</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="center"><inline-graphic mimetype="image" mime-subtype="png" xlink:href="figs/traditional_wf_hpc.png" /></td>
          <td align="center"><inline-graphic mimetype="image" mime-subtype="png" xlink:href="figs/vdsc_wf_hpc.png" /></td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>The traditional programming model defines a workflow as a
  collection of tasks using data as inputs and outputs. This makes data
  management complex on multi-tiered storage systems because the data
  needs to be managed explicitly as the workflow tasks execute, ensuring
  that the data dependencies and consistencies are handled correctly.
  MaDaTS is built on top of an abstraction called <bold>Virtual Data
  Space</bold> (VDS) that hides the complexities of managing data on
  tiered storage systems. VDS is a collection of virtual data objects. A
  virtual data object is an abstraction of workflow data in VDS,
  associated with certain properties and tasks. MaDaTS uses these task
  associations and properties to define the actual location of data at
  runtime. In MaDaTS, users simply need to create the appropriate
  virtual data objects and add them to a VDS. MaDaTS takes care of all
  the data management and workflow execution tasks.</p>
  <sec id="data-management-abstractions">
    <title>Data Management Abstractions</title>
    <p>MaDaTS provides a simple data management abstraction through the
    <bold>manage()</bold> interface. Users create a VDS and tell MaDaTS
    to manage workflow data and tasks. The ‘manage’ interface also
    allows users to group the tasks in different ways. Additionally,
    users can select the data management strategy in MaDaTS. By default,
    MaDaTS provides three data management strategies - i)
    <italic>workflow-aware</italic>: data management decisions are made
    based on the structure of the workflow, ii)
    <italic>storage-aware</italic>: data management decisions are made
    based on the storage properties, and iii) <italic>passive</italic>:
    allows users to define custom data placement and movement
    policies.</p>
    <p>Users can also define new data management strategies in MaDaTS by
    defining data tasks through the <bold>create_data_task()</bold>
    interface. The interface adds the necessary data operations needed
    for efficient execution of the workflow. Both
    <italic>workflow-aware</italic> and <italic>storage-aware</italic>
    data management strategies use ‘create_data_task’ to add
    supplementary tasks that operate on managing data across the storage
    tiers. These data tasks are executed as part of the workflow and are
    managed through MaDaTS.</p>
  </sec>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Ghoshal2017">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Ghoshal</surname><given-names>Devarshi</given-names></name>
          <name><surname>Ramakrishnan</surname><given-names>Lavanya</given-names></name>
        </person-group>
        <article-title>MaDaTS: Managing data on tiered storage for scientific workflows</article-title>
        <source>Proceedings of the 26th international symposium on high-performance parallel and distributed computing</source>
        <publisher-name>ACM</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="2017">2017</year>
        <isbn>978-1-4503-4699-3</isbn>
        <uri>http://doi.acm.org/10.1145/3078597.3078611</uri>
        <pub-id pub-id-type="doi">10.1145/3078597.3078611</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
