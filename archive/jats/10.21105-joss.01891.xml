<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1891</article-id>
<article-id pub-id-type="doi">10.21105/joss.01891</article-id>
<title-group>
<article-title>Hypothesis: A new approach to property-based
testing</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-8635-3223</contrib-id>
<string-name>David R. MacIver</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-8646-8362</contrib-id>
<string-name>Zac Hatfield-Dodds</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<string-name>many other contributors</string-name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Imperial College London</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Australian National University</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Various</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-11-01">
<day>1</day>
<month>11</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>43</issue>
<fpage>1891</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>testing</kwd>
<kwd>test-case reduction</kwd>
<kwd>test-case generation</kwd>
<kwd>property-based testing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><italic>Property-based testing</italic> is a style of testing
  popularised by the QuickCheck family of libraries, first in Haskell
  (<xref alt="Claessen &amp; Hughes, 2000" rid="ref-DBLPU003AconfU002FicfpU002FClaessenH00" ref-type="bibr">Claessen
  &amp; Hughes, 2000</xref>) and later in Erlang
  (<xref alt="Arts et al., 2006" rid="ref-DBLPU003AconfU002FerlangU002FArtsHJW06" ref-type="bibr">Arts
  et al., 2006</xref>), which integrates generated test cases into
  existing software testing workflows: Instead of tests that provide
  examples of a single concrete behaviour, tests specify properties that
  hold for a wide range of inputs, which the testing library then
  attempts to generate test cases to refute. For a general introduction
  to property-based testing, see
  (<xref alt="MacIver, 2019" rid="ref-PraiseOfPBT" ref-type="bibr">MacIver,
  2019</xref>).</p>
  <p>Hypothesis is a mature and widely used property-based testing
  library for Python. It has over 100,000 downloads per
  week<xref ref-type="fn" rid="fn1">1</xref>, thousands of open source
  projects use it<xref ref-type="fn" rid="fn2">2</xref>, and in 2018
  more than 4% of Python users surveyed by the PSF reported using
  it<xref ref-type="fn" rid="fn3">3</xref>. It will be of interest both
  to researchers using Python for developing scientific software, and to
  software testing researchers as a platform for research in its own
  right.</p>
</sec>
<sec id="hypothesis-for-testing-scientific-software">
  <title>Hypothesis for Testing Scientific Software</title>
  <p>Python has a rich and thriving ecosystem of scientific software,
  and Hypothesis is helpful for ensuring its correctness. Any researcher
  who tests their software in Python can benefit from these facilities,
  but it is particularly useful for improving the correctness
  foundational libraries on which the scientific software ecosystem is
  built. For example, it has found bugs in astropy
  (<xref alt="Price-Whelan et al., 2018" rid="ref-astropyU003A2018" ref-type="bibr">Price-Whelan
  et al., 2018</xref>)<xref ref-type="fn" rid="fn4">4</xref> and numpy
  (<xref alt="Walt et al., 2011" rid="ref-DBLPU003AjournalsU002FcseU002FWaltCV11" ref-type="bibr">Walt
  et al., 2011</xref>)<xref ref-type="fn" rid="fn5">5</xref>.</p>
  <p>Additionally, Hypothesis is easily extensible, and has a number of
  third-party extensions for specific research applications. For
  example, hypothesis-networkx<xref ref-type="fn" rid="fn6">6</xref>
  generates graph data structures, and
  hypothesis-bio<xref ref-type="fn" rid="fn7">7</xref> generates formats
  suitable for bioinformatics. As it is used by more researchers, the
  number of research applications will only increase.</p>
  <p>By lowering the barrier to effective testing, Hypothesis makes
  testing of research software written in Python much more compelling,
  and has the potential to significantly improve the quality of the
  associated scientific research as a result.</p>
</sec>
<sec id="hypothesis-for-software-testing-research">
  <title>Hypothesis for Software Testing Research</title>
  <p>Hypothesis is a powerful platform for software testing research,
  both because of the wide array of software that can be easily tested
  with it, and because it has a novel implementation that solves a major
  difficulty faced by prior software testing research.</p>
  <p>Much of software testing research boils down to variants on the
  following problem: Given some interestingness condition (e.g., that it
  triggers a bug in some software), how do we generate a “good” test
  case that satisfies that condition?</p>
  <p>Particular sub-problems of this are:</p>
  <list list-type="order">
    <list-item>
      <p>How do we generate test cases that satisfy difficult
      interestingness conditions?</p>
    </list-item>
    <list-item>
      <p>How do we ensure we generate only valid test cases? (the
      <italic>test-case validity problem</italic> - see Regehr et al.
      (<xref alt="2012" rid="ref-DBLPU003AconfU002FpldiU002FRegehrCCEEY12" ref-type="bibr">2012</xref>))</p>
    </list-item>
    <list-item>
      <p>How do we generate human readable test cases?</p>
    </list-item>
  </list>
  <p>Traditionally property-based testing has adopted random test-case
  generation to find interesting test cases, followed by test-case
  reduction (see Regehr et al.
  (<xref alt="2012" rid="ref-DBLPU003AconfU002FpldiU002FRegehrCCEEY12" ref-type="bibr">2012</xref>),
  Zeller &amp; Hildebrandt
  (<xref alt="2002" rid="ref-DBLPU003AjournalsU002FtseU002FZellerH02" ref-type="bibr">2002</xref>))
  to turn them into more human readable ones, requiring the users to
  manually specify a <italic>validity oracle</italic> (a predicate that
  identifies if an arbitrary test case is valid) to avoid invalid test
  cases.</p>
  <p>The chief limitations of this from a user’s point of view are:</p>
  <list list-type="bullet">
    <list-item>
      <p>Writing correct validity oracles is difficult and annoying.</p>
    </list-item>
    <list-item>
      <p>Random generation, while often much better than hand-written
      examples, is not especially good at satisfying difficult
      properties.</p>
    </list-item>
    <list-item>
      <p>Writing test-case reducers that work well for your problem
      domain is a specialised skill that few people have or want to
      acquire.</p>
    </list-item>
  </list>
  <p>The chief limitation from a researcher’s point of view is that
  trying to improve on random generation’s ability to find bugs will
  typically require modification of existing tests to support new ways
  of generating data, and typically these modifications are
  significantly more complex than writing the random generator would
  have been. Users are rarely going to be willing to undertake the work
  themselves, which leaves researchers in the unfortunate position of
  having to put in a significant amount of work per project to
  understand how to test it.</p>
  <p>Hypothesis avoids both of these problems by using a single
  universal representation for test cases. Ensuring that test cases
  produced from this format are valid is relatively easy, no more
  difficult than ensuring that randomly generated tests cases are valid,
  and improvements to the generation process can operate solely on this
  universal representation rather than requiring adapting to each
  test.</p>
  <p>Currently Hypothesis uses this format to support two major use
  cases:</p>
  <list list-type="order">
    <list-item>
      <p>It is the basis of its approach to test-case reduction,
      allowing it to support more powerful test-case reduction than is
      found in most property-based testing libraries with no user
      intervention.</p>
    </list-item>
    <list-item>
      <p>It supports Targeted Property-Based Testing
      (<xref alt="Löscher &amp; Sagonas, 2017" rid="ref-DBLPU003AconfU002FisstaU002FLoscherS17" ref-type="bibr">Löscher
      &amp; Sagonas, 2017</xref>), which uses a score to guide testing
      towards a particular goal (e.g., maximising an error term). In the
      original implementation this would require custom mutation
      operators per test, but in Hypothesis this mutation is transparent
      to the user and they need only specify the goal.</p>
    </list-item>
  </list>
  <p>The internal format is flexible and contains rich information about
  the structure of generated test cases, so it is likely future versions
  of the software will see other features built on top of it, and we
  hope researchers will use it as a vehicle to explore other interesting
  possibilities for test-case generation.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-DBLPU003AconfU002FicfpU002FClaessenH00">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Claessen</surname><given-names>Koen</given-names></name>
          <name><surname>Hughes</surname><given-names>John</given-names></name>
        </person-group>
        <article-title>QuickCheck: A lightweight tool for random testing of Haskell programs</article-title>
        <source>Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming (ICFP ’00)</source>
        <person-group person-group-type="editor">
          <name><surname>Odersky</surname><given-names>Martin</given-names></name>
          <name><surname>Wadler</surname><given-names>Philip</given-names></name>
        </person-group>
        <publisher-name>ACM</publisher-name>
        <year iso-8601-date="2000">2000</year>
        <isbn>1-58113-202-6</isbn>
        <uri>https://doi.org/10.1145/351240.351266</uri>
        <pub-id pub-id-type="doi">10.1145/351240.351266</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FerlangU002FArtsHJW06">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Arts</surname><given-names>Thomas</given-names></name>
          <name><surname>Hughes</surname><given-names>John</given-names></name>
          <name><surname>Johansson</surname><given-names>Joakim</given-names></name>
          <name><surname>Wiger</surname><given-names>Ulf T.</given-names></name>
        </person-group>
        <article-title>Testing telecoms software with quviq QuickCheck</article-title>
        <source>Proceedings of the 2006 ACM SIGPLAN Workshop on Erlang</source>
        <person-group person-group-type="editor">
          <name><surname>Feeley</surname><given-names>Marc</given-names></name>
          <name><surname>Trinder</surname><given-names>Philip W.</given-names></name>
        </person-group>
        <publisher-name>ACM</publisher-name>
        <year iso-8601-date="2006">2006</year>
        <isbn>1-59593-490-1</isbn>
        <uri>https://doi.org/10.1145/1159789.1159792</uri>
        <pub-id pub-id-type="doi">10.1145/1159789.1159792</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-PraiseOfPBT">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>MacIver</surname><given-names>David R.</given-names></name>
        </person-group>
        <article-title>In praise of property-bsed testing</article-title>
        <publisher-name>https://increment.com/testing/in-praise-of-property-based-testing/</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AjournalsU002FtseU002FZellerH02">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Zeller</surname><given-names>Andreas</given-names></name>
          <name><surname>Hildebrandt</surname><given-names>Ralf</given-names></name>
        </person-group>
        <article-title>Simplifying and isolating failure-inducing input</article-title>
        <source>IEEE Trans. Software Eng.</source>
        <year iso-8601-date="2002">2002</year>
        <volume>28</volume>
        <issue>2</issue>
        <uri>https://doi.org/10.1109/32.988498</uri>
        <pub-id pub-id-type="doi">10.1109/32.988498</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FpldiU002FRegehrCCEEY12">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Regehr</surname><given-names>John</given-names></name>
          <name><surname>Chen</surname><given-names>Yang</given-names></name>
          <name><surname>Cuoq</surname><given-names>Pascal</given-names></name>
          <name><surname>Eide</surname><given-names>Eric</given-names></name>
          <name><surname>Ellison</surname><given-names>Chucky</given-names></name>
          <name><surname>Yang</surname><given-names>Xuejun</given-names></name>
        </person-group>
        <article-title>Test-case reduction for C compiler bugs</article-title>
        <source>ACM SIGPLAN Conference on Programming Language Design and Implementation, (PLDI ’12)</source>
        <person-group person-group-type="editor">
          <name><surname>Vitek</surname><given-names>Jan</given-names></name>
          <name><surname>Lin</surname><given-names>Haibo</given-names></name>
          <name><surname>Tip</surname><given-names>Frank</given-names></name>
        </person-group>
        <publisher-name>ACM</publisher-name>
        <year iso-8601-date="2012">2012</year>
        <isbn>978-1-4503-1205-9</isbn>
        <uri>https://doi.org/10.1145/2254064.2254104</uri>
        <pub-id pub-id-type="doi">10.1145/2254064.2254104</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-astropyU003A2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Price-Whelan</surname><given-names>A. M.</given-names></name>
          <name><surname>Sipőcz</surname><given-names>B. M.</given-names></name>
          <name><surname>Günther</surname><given-names>H. M.</given-names></name>
          <name><surname>Lim</surname><given-names>P. L.</given-names></name>
          <name><surname>Crawford</surname><given-names>S. M.</given-names></name>
          <name><surname>Conseil</surname><given-names>S.</given-names></name>
          <name><surname>Shupe</surname><given-names>D. L.</given-names></name>
          <name><surname>Craig</surname><given-names>M. W.</given-names></name>
          <name><surname>Dencheva</surname><given-names>N.</given-names></name>
          <name><surname>Ginsburg</surname><given-names>A.</given-names></name>
          <name><surname>VanderPlas</surname><given-names>J. T.</given-names></name>
          <name><surname>Bradley</surname><given-names>L. D.</given-names></name>
          <name><surname>Pérez-Suárez</surname><given-names>D.</given-names></name>
          <name><surname>de Val-Borro</surname><given-names>M.</given-names></name>
          <name><surname>Paper Contributors</surname><given-names>(Primary</given-names></name>
          <name><surname>Aldcroft</surname><given-names>T. L.</given-names></name>
          <name><surname>Cruz</surname><given-names>K. L.</given-names></name>
          <name><surname>Robitaille</surname><given-names>T. P.</given-names></name>
          <name><surname>Tollerud</surname><given-names>E. J.</given-names></name>
          <name><surname>Coordination Committee</surname><given-names>(Astropy</given-names></name>
          <name><surname>Ardelean</surname><given-names>C.</given-names></name>
          <name><surname>Babej</surname><given-names>T.</given-names></name>
          <name><surname>Bach</surname><given-names>Y. P.</given-names></name>
          <name><surname>Bachetti</surname><given-names>M.</given-names></name>
          <name><surname>Bakanov</surname><given-names>A. V.</given-names></name>
          <name><surname>Bamford</surname><given-names>S. P.</given-names></name>
          <name><surname>Barentsen</surname><given-names>G.</given-names></name>
          <name><surname>Barmby</surname><given-names>P.</given-names></name>
          <name><surname>Baumbach</surname><given-names>A.</given-names></name>
          <name><surname>Berry</surname><given-names>K. L.</given-names></name>
          <name><surname>Biscani</surname><given-names>F.</given-names></name>
          <name><surname>Boquien</surname><given-names>M.</given-names></name>
          <name><surname>Bostroem</surname><given-names>K. A.</given-names></name>
          <name><surname>Bouma</surname><given-names>L. G.</given-names></name>
          <name><surname>Brammer</surname><given-names>G. B.</given-names></name>
          <name><surname>Bray</surname><given-names>E. M.</given-names></name>
          <name><surname>Breytenbach</surname><given-names>H.</given-names></name>
          <name><surname>Buddelmeijer</surname><given-names>H.</given-names></name>
          <name><surname>Burke</surname><given-names>D. J.</given-names></name>
          <name><surname>Calderone</surname><given-names>G.</given-names></name>
          <name><surname>Cano Rodrı́guez</surname><given-names>J. L.</given-names></name>
          <name><surname>Cara</surname><given-names>M.</given-names></name>
          <name><surname>Cardoso</surname><given-names>J. V. M.</given-names></name>
          <name><surname>Cheedella</surname><given-names>S.</given-names></name>
          <name><surname>Copin</surname><given-names>Y.</given-names></name>
          <name><surname>Corrales</surname><given-names>L.</given-names></name>
          <name><surname>Crichton</surname><given-names>D.</given-names></name>
          <name><surname>D’Avella</surname><given-names>D.</given-names></name>
          <name><surname>Deil</surname><given-names>C.</given-names></name>
          <name><surname>Depagne</surname><given-names>É.</given-names></name>
          <name><surname>Dietrich</surname><given-names>J. P.</given-names></name>
          <name><surname>Donath</surname><given-names>A.</given-names></name>
          <name><surname>Droettboom</surname><given-names>M.</given-names></name>
          <name><surname>Earl</surname><given-names>N.</given-names></name>
          <name><surname>Erben</surname><given-names>T.</given-names></name>
          <name><surname>Fabbro</surname><given-names>S.</given-names></name>
          <name><surname>Ferreira</surname><given-names>L. A.</given-names></name>
          <name><surname>Finethy</surname><given-names>T.</given-names></name>
          <name><surname>Fox</surname><given-names>R. T.</given-names></name>
          <name><surname>Garrison</surname><given-names>L. H.</given-names></name>
          <name><surname>Gibbons</surname><given-names>S. L. J.</given-names></name>
          <name><surname>Goldstein</surname><given-names>D. A.</given-names></name>
          <name><surname>Gommers</surname><given-names>R.</given-names></name>
          <name><surname>Greco</surname><given-names>J. P.</given-names></name>
          <name><surname>Greenfield</surname><given-names>P.</given-names></name>
          <name><surname>Groener</surname><given-names>A. M.</given-names></name>
          <name><surname>Grollier</surname><given-names>F.</given-names></name>
          <name><surname>Hagen</surname><given-names>A.</given-names></name>
          <name><surname>Hirst</surname><given-names>P.</given-names></name>
          <name><surname>Homeier</surname><given-names>D.</given-names></name>
          <name><surname>Horton</surname><given-names>A. J.</given-names></name>
          <name><surname>Hosseinzadeh</surname><given-names>G.</given-names></name>
          <name><surname>Hu</surname><given-names>L.</given-names></name>
          <name><surname>Hunkeler</surname><given-names>J. S.</given-names></name>
          <name><surname>Ivezić</surname><given-names>Ž.</given-names></name>
          <name><surname>Jain</surname><given-names>A.</given-names></name>
          <name><surname>Jenness</surname><given-names>T.</given-names></name>
          <name><surname>Kanarek</surname><given-names>G.</given-names></name>
          <name><surname>Kendrew</surname><given-names>S.</given-names></name>
          <name><surname>Kern</surname><given-names>N. S.</given-names></name>
          <name><surname>Kerzendorf</surname><given-names>W. E.</given-names></name>
          <name><surname>Khvalko</surname><given-names>A.</given-names></name>
          <name><surname>King</surname><given-names>J.</given-names></name>
          <name><surname>Kirkby</surname><given-names>D.</given-names></name>
          <name><surname>Kulkarni</surname><given-names>A. M.</given-names></name>
          <name><surname>Kumar</surname><given-names>A.</given-names></name>
          <name><surname>Lee</surname><given-names>A.</given-names></name>
          <name><surname>Lenz</surname><given-names>D.</given-names></name>
          <name><surname>Littlefair</surname><given-names>S. P.</given-names></name>
          <name><surname>Ma</surname><given-names>Z.</given-names></name>
          <name><surname>Macleod</surname><given-names>D. M.</given-names></name>
          <name><surname>Mastropietro</surname><given-names>M.</given-names></name>
          <name><surname>McCully</surname><given-names>C.</given-names></name>
          <name><surname>Montagnac</surname><given-names>S.</given-names></name>
          <name><surname>Morris</surname><given-names>B. M.</given-names></name>
          <name><surname>Mueller</surname><given-names>M.</given-names></name>
          <name><surname>Mumford</surname><given-names>S. J.</given-names></name>
          <name><surname>Muna</surname><given-names>D.</given-names></name>
          <name><surname>Murphy</surname><given-names>N. A.</given-names></name>
          <name><surname>Nelson</surname><given-names>S.</given-names></name>
          <name><surname>Nguyen</surname><given-names>G. H.</given-names></name>
          <name><surname>Ninan</surname><given-names>J. P.</given-names></name>
          <name><surname>Nöthe</surname><given-names>M.</given-names></name>
          <name><surname>Ogaz</surname><given-names>S.</given-names></name>
          <name><surname>Oh</surname><given-names>S.</given-names></name>
          <name><surname>Parejko</surname><given-names>J. K.</given-names></name>
          <name><surname>Parley</surname><given-names>N.</given-names></name>
          <name><surname>Pascual</surname><given-names>S.</given-names></name>
          <name><surname>Patil</surname><given-names>R.</given-names></name>
          <name><surname>Patil</surname><given-names>A. A.</given-names></name>
          <name><surname>Plunkett</surname><given-names>A. L.</given-names></name>
          <name><surname>Prochaska</surname><given-names>J. X.</given-names></name>
          <name><surname>Rastogi</surname><given-names>T.</given-names></name>
          <name><surname>Reddy Janga</surname><given-names>V.</given-names></name>
          <name><surname>Sabater</surname><given-names>J.</given-names></name>
          <name><surname>Sakurikar</surname><given-names>P.</given-names></name>
          <name><surname>Seifert</surname><given-names>M.</given-names></name>
          <name><surname>Sherbert</surname><given-names>L. E.</given-names></name>
          <name><surname>Sherwood-Taylor</surname><given-names>H.</given-names></name>
          <name><surname>Shih</surname><given-names>A. Y.</given-names></name>
          <name><surname>Sick</surname><given-names>J.</given-names></name>
          <name><surname>Silbiger</surname><given-names>M. T.</given-names></name>
          <name><surname>Singanamalla</surname><given-names>S.</given-names></name>
          <name><surname>Singer</surname><given-names>L. P.</given-names></name>
          <name><surname>Sladen</surname><given-names>P. H.</given-names></name>
          <name><surname>Sooley</surname><given-names>K. A.</given-names></name>
          <name><surname>Sornarajah</surname><given-names>S.</given-names></name>
          <name><surname>Streicher</surname><given-names>O.</given-names></name>
          <name><surname>Teuben</surname><given-names>P.</given-names></name>
          <name><surname>Thomas</surname><given-names>S. W.</given-names></name>
          <name><surname>Tremblay</surname><given-names>G. R.</given-names></name>
          <name><surname>Turner</surname><given-names>J. E. H.</given-names></name>
          <name><surname>Terrón</surname><given-names>V.</given-names></name>
          <name><surname>van Kerkwijk</surname><given-names>M. H.</given-names></name>
          <name><surname>de la Vega</surname><given-names>A.</given-names></name>
          <name><surname>Watkins</surname><given-names>L. L.</given-names></name>
          <name><surname>Weaver</surname><given-names>B. A.</given-names></name>
          <name><surname>Whitmore</surname><given-names>J. B.</given-names></name>
          <name><surname>Woillez</surname><given-names>J.</given-names></name>
          <name><surname>Zabalza</surname><given-names>V.</given-names></name>
          <name><surname>Contributors</surname><given-names>(Astropy</given-names></name>
        </person-group>
        <article-title>The Astropy Project: Building an Open-science Project and Status of the v2.0 Core Package</article-title>
        <source></source>
        <year iso-8601-date="2018-09">2018</year><month>09</month>
        <volume>156</volume>
        <pub-id pub-id-type="doi">10.3847/1538-3881/aabc4f</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AjournalsU002FcseU002FWaltCV11">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Walt</surname><given-names>Stéfan van der</given-names></name>
          <name><surname>Colbert</surname><given-names>S. Chris</given-names></name>
          <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
        </person-group>
        <article-title>The NumPy array: A structure for efficient numerical computation</article-title>
        <source>Computing in Science and Engineering</source>
        <year iso-8601-date="2011">2011</year>
        <volume>13</volume>
        <issue>2</issue>
        <uri>https://doi.org/10.1109/MCSE.2011.37</uri>
        <pub-id pub-id-type="doi">10.1109/MCSE.2011.37</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-DBLPU003AconfU002FisstaU002FLoscherS17">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Löscher</surname><given-names>Andreas</given-names></name>
          <name><surname>Sagonas</surname><given-names>Konstantinos</given-names></name>
        </person-group>
        <article-title>Targeted property-based testing</article-title>
        <source>Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis</source>
        <person-group person-group-type="editor">
          <name><surname>Bultan</surname><given-names>Tevfik</given-names></name>
          <name><surname>Sen</surname><given-names>Koushik</given-names></name>
        </person-group>
        <publisher-name>ACM</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <isbn>978-1-4503-5076-1</isbn>
        <uri>https://doi.org/10.1145/3092703.3092711</uri>
        <pub-id pub-id-type="doi">10.1145/3092703.3092711</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>https://pypistats.org/packages/hypothesis</p>
  </fn>
  <fn id="fn2">
    <label>2</label><p>https://github.com/HypothesisWorks/hypothesis/network/dependents</p>
  </fn>
  <fn id="fn3">
    <label>3</label><p>https://www.jetbrains.com/research/python-developers-survey-2018/</p>
  </fn>
  <fn id="fn4">
    <label>4</label><p>e.g. https://github.com/astropy/astropy/pull/9328,
    https://github.com/astropy/astropy/pull/9532</p>
  </fn>
  <fn id="fn5">
    <label>5</label><p>e.g. https://github.com/numpy/numpy/issues/10930,
    https://github.com/numpy/numpy/issues/13089,
    https://github.com/numpy/numpy/issues/14239</p>
  </fn>
  <fn id="fn6">
    <label>6</label><p>https://pypi.org/project/hypothesis-networkx/</p>
  </fn>
  <fn id="fn7">
    <label>7</label><p>https://pypi.org/project/hypothesis-bio/</p>
  </fn>
</fn-group>
</back>
</article>
