<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1448</article-id>
<article-id pub-id-type="doi">10.21105/joss.01448</article-id>
<title-group>
<article-title>labjack-controller: Robust and Easy Data Collection with
Labjack T-Series DAQs in Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1240-5385</contrib-id>
<string-name>Benjamin A. Montgomery</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1887-354X</contrib-id>
<string-name>Paul A. Nakroshis</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Southern Maine</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-04-05">
<day>5</day>
<month>4</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>38</issue>
<fpage>1448</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>experimental</kwd>
<kwd>daq</kwd>
<kwd>labjack</kwd>
<kwd>parallel</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The ability to accurately collect and computationally process data
  from sensors in both a logging and interactive sense is crucial to
  many scientific experiments. Researchers in many field are results
  driven and want to be able to easily and inexpensively gather data at
  high speeds with uniform sampling rates without having to invest weeks
  of time learning a complicated API. Common (expensive) paid solutions
  are found in Digital Acquisition Devices (DAQs) provided by companies
  like National Instruments (NI). These pre-built DAQs are generally
  understood to be tied to proprietary analysis software or languages,
  such as NI’s paid language LabView. In light of this, there has been a
  recent surge in DAQ offerings from multiple manufacturers to capture
  the market. These solutions tend to have cost-effective, versatile
  hardware, but interfaces that are poorly designed or immature
  (<xref alt="Model 301/302 Developer Application Software, 2017" rid="ref-Lawson" ref-type="bibr"><italic>Model
  301/302 Developer Application Software</italic>, 2017</xref>), which
  makes it difficult for non-specialists to use. Current offerings from
  Labjack
  (<xref alt="Labjack, 2019" rid="ref-Labjack" ref-type="bibr"><italic>Labjack</italic>,
  2019</xref>) are one such example; their hardware is used in major
  industrial applications, but the interface is exceedingly nuanced and
  provides little in the way of error recovery.</p>
  <p><monospace>labjack-controller</monospace> is a Python package for
  Labjack’s most recent DAQs, the T-series devices, and serves a similar
  overall purpose as NI’s nidaqmx-python
  (<xref alt="Nidaqmx-Python, 2017" rid="ref-ni" ref-type="bibr"><italic>Nidaqmx-Python</italic>,
  2017</xref>) data collection package for NI devices. It focuses on
  providing thread-safe functions that abstract and automate data
  collection, error handling, and configuration procedures that are
  normally exceedingly nuanced or complex. Care was given to writing
  efficient code for streaming data from and communicating to these
  devices, and using as many optimized tools as possible, such as
  Labjack’s provided low-level C interface. In the interest of
  versatility, <monospace>labjack-controller</monospace> fully supports
  Linux, OSX, and Windows, along with any connection method or protocol
  supported by any of the T-series devices.</p>
  <p><monospace>labjack-controller</monospace> is designed to be used by
  anyone who has at least an introductory knowledge of Python and
  intends to involve a computer in the process of reading sensor data,
  from data backup purposes to live reaction to sensor readings. We
  emphasize that this package is a huge time saver for researchers
  interested in gathering data so that they can focus on the science
  rather than losing valuable time in development or being forced into
  expensive proprietary options. It is currently used in upper-level
  undergraduate physics laboratory courses and a research lab at the
  University of Southern Maine for the purposes of reacting to live
  data, most notably with a torsion pendulum with dynamic
  electromagnetic damping. We expect that the speed, error handling
  abilities, and parallelization support of this library will make
  robust and reliable data collection one of the least challenging
  aspects of experimental science.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge funding through the University of Southern
  Maine.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Lawson">
      <element-citation>
        <article-title>Model 301/302 developer application software</article-title>
        <publisher-name>http://www.lawsonlabs.com/specExternal301_Developer.html#30xLinux</publisher-name>
        <year iso-8601-date="2017">2017</year>
      </element-citation>
    </ref>
    <ref id="ref-Labjack">
      <element-citation>
        <article-title>Labjack</article-title>
        <publisher-name>https://labjack.com/support/software/installers/ljm</publisher-name>
        <year iso-8601-date="2019-05">2019</year><month>05</month>
      </element-citation>
    </ref>
    <ref id="ref-ni">
      <element-citation>
        <article-title>Nidaqmx-python</article-title>
        <publisher-name>https://github.com/ni/nidaqmx-python/</publisher-name>
        <year iso-8601-date="2017">2017</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
