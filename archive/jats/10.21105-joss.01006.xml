<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1006</article-id>
<article-id pub-id-type="doi">10.21105/joss.01006</article-id>
<title-group>
<article-title>SeqTools: A python package for easy transformation,
combination and evaluation of large datasets.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2943-9888</contrib-id>
<string-name>Nicolas Granger</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-7383-0588</contrib-id>
<string-name>Mounîm A. El Yacoubi</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Télécom SudParis</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-10-09">
<day>9</day>
<month>10</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>30</issue>
<fpage>1006</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>pre-processing</kwd>
<kwd>pipeline</kwd>
<kwd>dataset</kwd>
<kwd>machine learning</kwd>
<kwd>lazy evaluation</kwd>
<kwd>on-demand</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>SeqTools</monospace> facilitates the manipulation of
  large datasets and the evaluation of a transformation pipeline. Some
  of the provided functionnalities include: mapping element-wise
  operations, reordering, reindexing, concatenation, joining, slicing,
  minibatching, etc…</p>
  <p>To improve ease of use, <monospace>SeqTools</monospace> assumes
  that dataset are objects that implement a list-like
  <ext-link ext-link-type="uri" xlink:href="https://docs.python.org/3/glossary.html#term-sequence">sequence</ext-link>
  interface: a container object with a length and its <italic>elements
  accessible via indexing or slicing</italic>. All
  <monospace>SeqTools</monospace> functions take and return objects
  compatible with this simple and convenient interface.</p>
  <p>Sometimes manipulating a whole dataset with transformations or
  combinations can be slow and resource intensive; a transformed dataset
  might not even fit into memory! To circumvent this issue,
  <monospace>SeqTools</monospace> implements <italic>on-demand</italic>
  execution under the hood, so that computations are only run when
  needed, and only for actually required elements while ignoring the
  rest of the dataset. This helps to keep memory resources down to a
  bare minimum and accelerate the time it take to access any arbitrary
  result. This on-demand strategy helps to quickly define dataset-wide
  transformations and probe a few results for debugging or prototyping
  purposes, yet it is transparent for the users who still benefit from a
  simple and convenient list-like interface.</p>
  <p>When comes the transition from prototyping to execution, the
  list-like container interface facilitates serial evaluation. Besides,
  <monospace>SeqTools</monospace> also provides simple helpers to
  dispatch work between multiple background workers (threads or
  processes), and therefore to maximize execution speed and resource
  usage.</p>
  <p><monospace>SeqTools</monospace> originally targets data science,
  more precisely the preprocessing stages of a dataset. Being aware of
  the experimental nature of this usage, on-demand execution is made as
  transparent as possible to users by providing fault-tolerant functions
  and insightful error reporting. Moreover, internal code is kept
  concise and clear with comments to facilitate error tracing through a
  failing transformation pipeline.</p>
  <p>Nevertheless, this project purposedly keeps a generic interface and
  only requires minimal dependencies in order to facilitate reusability
  beyond this scope of application.</p>
</sec>
<sec id="related-work">
  <title>Related Work</title>
  <p><ext-link ext-link-type="uri" xlink:href="https://joblib.readthedocs.io">Joblib</ext-link>,
  proposes low-level functions with many optimization settings to
  optimize pipelined transformations. This library notably provides
  advanced caching mechanisms which are not the primary concern of
  <monospace>SeqTool</monospace>. <monospace>SeqTool</monospace> uses a
  simpler container-oriented interface with multiple utility functions
  in order to assist fast prototyping. On-demand evaluation is its
  default behaviour and applies at all layers of a transformation
  pipeline. In particular, parallel evaluation can be inserted in the
  middle of the transformation pipeline and won’t block the execution to
  wait for the computation of all elements from the dataset.</p>
  <p><monospace>SeqTools</monospace> is conceived to connect nicely to
  the data loading pipeline of Machine Learning libraries such as
  (<xref alt="Paszke et al., 2017" rid="ref-paszke2017automatic" ref-type="bibr">Paszke
  et al., 2017</xref>) or
  (<xref alt="Abadi et al., 2015" rid="ref-tensorflow2015-whitepaper" ref-type="bibr">Abadi
  et al., 2015</xref>). The interface of these libraries focuses on
  iterators to access transformed elements, contary to
  <monospace>SeqTools</monospace> which also provides arbitrary reads
  via indexing.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-tensorflow2015-whitepaper">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Abadi</surname><given-names>Martı́n</given-names></name>
          <name><surname>Agarwal</surname><given-names>Ashish</given-names></name>
          <name><surname>Barham</surname><given-names>Paul</given-names></name>
          <name><surname>Brevdo</surname><given-names>Eugene</given-names></name>
          <name><surname>Chen</surname><given-names>Zhifeng</given-names></name>
          <name><surname>Citro</surname><given-names>Craig</given-names></name>
          <name><surname>Corrado</surname><given-names>Greg S.</given-names></name>
          <name><surname>Davis</surname><given-names>Andy</given-names></name>
          <name><surname>Dean</surname><given-names>Jeffrey</given-names></name>
          <name><surname>Devin</surname><given-names>Matthieu</given-names></name>
          <name><surname>Ghemawat</surname><given-names>Sanjay</given-names></name>
          <name><surname>Goodfellow</surname><given-names>Ian</given-names></name>
          <name><surname>Harp</surname><given-names>Andrew</given-names></name>
          <name><surname>Irving</surname><given-names>Geoffrey</given-names></name>
          <name><surname>Isard</surname><given-names>Michael</given-names></name>
          <name><surname>Jia</surname><given-names>Yangqing</given-names></name>
          <name><surname>Jozefowicz</surname><given-names>Rafal</given-names></name>
          <name><surname>Kaiser</surname><given-names>Lukasz</given-names></name>
          <name><surname>Kudlur</surname><given-names>Manjunath</given-names></name>
          <name><surname>Levenberg</surname><given-names>Josh</given-names></name>
          <name><surname>Mané</surname><given-names>Dandelion</given-names></name>
          <name><surname>Monga</surname><given-names>Rajat</given-names></name>
          <name><surname>Moore</surname><given-names>Sherry</given-names></name>
          <name><surname>Murray</surname><given-names>Derek</given-names></name>
          <name><surname>Olah</surname><given-names>Chris</given-names></name>
          <name><surname>Schuster</surname><given-names>Mike</given-names></name>
          <name><surname>Shlens</surname><given-names>Jonathon</given-names></name>
          <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
          <name><surname>Sutskever</surname><given-names>Ilya</given-names></name>
          <name><surname>Talwar</surname><given-names>Kunal</given-names></name>
          <name><surname>Tucker</surname><given-names>Paul</given-names></name>
          <name><surname>Vanhoucke</surname><given-names>Vincent</given-names></name>
          <name><surname>Vasudevan</surname><given-names>Vijay</given-names></name>
          <name><surname>Viégas</surname><given-names>Fernanda</given-names></name>
          <name><surname>Vinyals</surname><given-names>Oriol</given-names></name>
          <name><surname>Warden</surname><given-names>Pete</given-names></name>
          <name><surname>Wattenberg</surname><given-names>Martin</given-names></name>
          <name><surname>Wicke</surname><given-names>Martin</given-names></name>
          <name><surname>Yu</surname><given-names>Yuan</given-names></name>
          <name><surname>Zheng</surname><given-names>Xiaoqiang</given-names></name>
        </person-group>
        <article-title>TensorFlow: Large-scale machine learning on heterogeneous systems</article-title>
        <year iso-8601-date="2015">2015</year>
        <uri>https://www.tensorflow.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-paszke2017automatic">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Paszke</surname><given-names>Adam</given-names></name>
          <name><surname>Gross</surname><given-names>Sam</given-names></name>
          <name><surname>Chintala</surname><given-names>Soumith</given-names></name>
          <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
          <name><surname>Yang</surname><given-names>Edward</given-names></name>
          <name><surname>DeVito</surname><given-names>Zachary</given-names></name>
          <name><surname>Lin</surname><given-names>Zeming</given-names></name>
          <name><surname>Desmaison</surname><given-names>Alban</given-names></name>
          <name><surname>Antiga</surname><given-names>Luca</given-names></name>
          <name><surname>Lerer</surname><given-names>Adam</given-names></name>
        </person-group>
        <article-title>Automatic differentiation in PyTorch</article-title>
        <source>NIPS-w</source>
        <year iso-8601-date="2017">2017</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
