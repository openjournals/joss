<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1172</article-id>
<article-id pub-id-type="doi">10.21105/joss.01172</article-id>
<title-group>
<article-title>Instrbuilder: A Python package for electrical instrument
control</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-7236-7202</contrib-id>
<string-name>Lucas J. Koerner</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Lucas J. Koerner, Department of Electrical and Computer
Engineering, University of St. Thomas</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-01-06">
<day>6</day>
<month>1</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>36</issue>
<fpage>1172</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>instrument control</kwd>
<kwd>data acquisition</kwd>
<kwd>SCPI</kwd>
<kwd>electrical engineering</kwd>
<kwd>physics</kwd>
<kwd>experiments</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="background">
  <title>Background</title>
  <p><italic>instrbuilder</italic> is an open-source Python package for
  control of electrical instruments. This package eases the development
  of high-level “drivers” to interface with oscilloscopes, power
  supplies, function generators, multimeters, or any instrument that
  uses ASCII textual string communication, such as SCPI
  (<xref alt="SCPI Consortium, 1999" rid="ref-scpi1999standard" ref-type="bibr">SCPI
  Consortium, 1999</xref>). <italic>instrbuilder</italic> is
  particularly suited for prototyping and automating experiments in
  research laboratory setups within an IPython terminal. Our goals are
  to accelerate the development of automated data collection and improve
  the reproducibility of laboratory experiments.</p>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p><italic>instrbuilder</italic> reads and writes data from
  instruments over a serial interface by using PySerial
  (<xref alt="Liechti, 2017" rid="ref-pyserial" ref-type="bibr">Liechti,
  2017</xref>) or over a USB interface by using PyVISA
  (<xref alt="PyVISA Authors, 2018" rid="ref-pyvisa" ref-type="bibr">PyVISA
  Authors, 2018</xref>). <italic>instrbuilder</italic> leverages the
  consistency of SCPI commands so that new instrument “drivers” can be
  created with a simple CSV file (example command files are included in
  the package). An example write command to configure the offset of a
  function generator:</p>
  <code language="python">fg.set('offset', 0.5)</code>
  <p>and an example read command:</p>
  <code language="python">offset = fg.get('offset')</code>
  <p>Nonstandard instrument commands may also be generated by writing
  Python code. Each instrument object is comprised of a communication
  handle and a list of commands. Each command may be automatically
  tested for communication errors or unexpected return values and stores
  a help string. To support experimental reproducibility, commands that
  access a configuration state are specified so that a complete archive
  of the instrument configuration may be automatically read and logged.
  Instrument addresses and other environment properties may be stored in
  a YAML system configuration file so that the user may name each
  instrument and simply open instruments by name.
  <italic>instrbuilder</italic> prompts the user through the steps to
  generate the YAML system configuration file.</p>
  <p>Documentation is online
  https://lucask07.github.io/instrbuilder/build/html/ and
  <ext-link ext-link-type="uri" xlink:href="https://github.com/lucask07/instrbuilder/tree/master/instrbuilder/examples">examples</ext-link>
  are available in the
  <ext-link ext-link-type="uri" xlink:href="https://github.com/lucask07/instrbuilder">GitHub
  repository</ext-link>. These minimal working examples (MWEs) include
  control of a function generator, power supply, oscilloscope, lock-in
  amplifier, and an integrated circuit (IC) interfaced with an Aardvark
  I2C/SPI controller (Total Phase, Santa Clara, CA).</p>
  <p><italic>instrbuilder</italic> supports a Register class that
  targets registers of an IC. The IC class objects include a dictionary
  of the registers and have methods for reading and writing these
  registers via SPI or I2C.</p>
  <p><italic>instrbuilder</italic> is part of a Python software suite
  that uses Bluesky
  (<xref alt="Arkilic et al., 2017" rid="ref-Arkilic2017" ref-type="bibr">Arkilic
  et al., 2017</xref>) and associated modules created for x-ray science
  by a team at the NSLS-II (see https://nsls-ii.github.io/). This
  combination generates an instrument and experiment control environment
  that facilitates reproducible experiments. The use of
  <italic>instrbuilder</italic> and <italic>Bluesky</italic> is
  <ext-link ext-link-type="uri" xlink:href="https://lucask07.github.io/instrbuilder/build/html/bluesky_demo.html">documented
  online</ext-link> and a
  <ext-link ext-link-type="uri" xlink:href="https://github.com/lucask07/instrbuilder/blob/master/instrbuilder/bluesky_demo/fg_oscilloscope_basics.py">MWE
  is available</ext-link>. <italic>instrbuilder</italic> is available at
  (https://pypi.org/project/instrbuilder/) and can be installed with
  pip.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>L. Koerner acknowledges laboratory start-up funds from the
  University of St. Thomas School of Engineering.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-scpi1999standard">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>SCPI Consortium</string-name>
        </person-group>
        <source>Standard commands for programmable instruments (SCPI), volume 1: Syntax and style</source>
        <year iso-8601-date="1999">1999</year>
      </element-citation>
    </ref>
    <ref id="ref-pyserial">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Liechti</surname><given-names>Chris</given-names></name>
        </person-group>
        <article-title>PySerial documentation</article-title>
        <year iso-8601-date="2017">2017</year>
        <uri>http://pyserial.readthedocs.io</uri>
      </element-citation>
    </ref>
    <ref id="ref-pyvisa">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>PyVISA Authors</string-name>
        </person-group>
        <article-title>PyVISA documentation</article-title>
        <year iso-8601-date="2018">2018</year>
        <uri>https://pyvisa.readthedocs.io</uri>
      </element-citation>
    </ref>
    <ref id="ref-Arkilic2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Arkilic</surname><given-names>A.</given-names></name>
          <name><surname>Allan</surname><given-names>D. B.</given-names></name>
          <name><surname>Caswell</surname><given-names>T. A.</given-names></name>
          <name><surname>Li</surname><given-names>L.</given-names></name>
          <name><surname>Lauer</surname><given-names>K.</given-names></name>
          <name><surname>Abeykoon</surname><given-names>S.</given-names></name>
        </person-group>
        <article-title>Towards integrated facility-wide data acquisition and analysis at NSLS-II</article-title>
        <source>Synchrotron Radiation News</source>
        <publisher-name>Informa UK Limited</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>30</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1080/08940886.2017.1289810</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
