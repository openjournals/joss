<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">458</article-id>
<article-id pub-id-type="doi">10.21105/joss.00458</article-id>
<title-group>
<article-title>DynamicalBilliards.jl: An easy-to-use, modular and
extendable Julia package for Dynamical Billiard systems in two
dimensions.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6427-2385</contrib-id>
<string-name>George Datseris</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Max Planck Institute for Dynamics and
Self-Organization</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2017-10-26">
<day>26</day>
<month>10</month>
<year>2017</year>
</pub-date>
<volume>2</volume>
<issue>19</issue>
<fpage>458</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>billiards</kwd>
<kwd>physics</kwd>
<kwd>chaos</kwd>
<kwd>escape</kwd>
<kwd>obstacle</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><ext-link ext-link-type="uri" xlink:href="http://orcid.org/0000-0002-6427-2385">DynamicalBilliards.jl</ext-link>
  is a package about two-dimensional (dynamical) billiard systems
  written in its entirety in Julia. It is easy to use, and easy to be
  extended. It is accompanied by a
  <ext-link ext-link-type="uri" xlink:href="https://juliadynamics.github.io/DynamicalBilliards.jl/stable/">detailed
  documentation archive</ext-link> with a lot of tutorials, example code
  as well as information about the physical algorithms at play.</p>
  <p>The package is mainly used to simulate any kind of two-dimensional
  system where particle motion is interrupted by collisions, e.g., a gas
  infused with big molecules.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>The features of the DynamicalBilliards.jl, as of version v1.6.1,
  are:</p>
  <list list-type="bullet">
    <list-item>
      <p>Modular creation of a billiard table by putting together
      well-defined obstacles.</p>
    </list-item>
    <list-item>
      <p>Creation of random initial conditions in any user-created
      billiard table.</p>
    </list-item>
    <list-item>
      <p>Propagation of point particles in such billiard tables.</p>
    </list-item>
    <list-item>
      <p>Propagation of point particles in such billiard tables in
      magnetic fields.</p>
    </list-item>
    <list-item>
      <p>Exact calculation of the collision times, collision positions,
      velocities etc..</p>
    </list-item>
    <list-item>
      <p>Calculation of escape times of particles.</p>
    </list-item>
    <list-item>
      <p>Rich implementation of Ray-splitting billiards: A particle may
      propagate through an obstacle, given some arbitrary transmission
      probability.</p>
    </list-item>
    <list-item>
      <p>Calculation of Lyapunov exponents of trajectories (currently
      available only for propagation without magnetic fields).</p>
    </list-item>
    <list-item>
      <p>Flexible speed; users can trade between accuracy and speed.</p>
    </list-item>
    <list-item>
      <p>Extensive visualization library for plotting and animating
      particles and billiards.</p>
    </list-item>
  </list>
</sec>
<sec id="description">
  <title>Description</title>
  <p>Billiard systems have been used extensively in scientific research
  and played a crucial role in the development of Chaos theory. A famous
  example is the Sinai billiard (easily simulated with our package)
  which was one of the first low-dimensional systems proven to be
  ergodic
  (<xref alt="Sinai, 1970" rid="ref-Sinai1970" ref-type="bibr">Sinai,
  1970</xref>).</p>
  <p>Even though the study of billiard systems started decades ago,
  there are still new surprises and plenty of research to be done with
  them. Bunimovich and Vela-Arevalo (two pioneers in the field)
  summarized new insights in the field of dynamical billiards
  (<xref alt="Bunimovich &amp; Vela-Arevalo, 2015" rid="ref-Bunimovich2015" ref-type="bibr">Bunimovich
  &amp; Vela-Arevalo, 2015</xref>).</p>
  <p>Our package has plenty of applications, due to the large amount of
  features. In
  (<xref alt="Datseris et al., 2017" rid="ref-Datseris" ref-type="bibr">Datseris
  et al., 2017</xref>) we have used it to approximate the movement of
  electrons in graphene, a two-dimensional semiconductor. Another
  application would be the motion of a particle in a gas composed of
  molecules much bigger than the particle, such that the collisions
  leave the molecules stationary. In addition, DynamicalBilliards.jl
  offers the first time possibility of implementing ray-splitting
  billiards, since, to the best of our knowledge, there is no other open
  sourced project that offers this. Ray-splitting is powerful as it
  allows one to simulate particles that tunnel through obstacles, much
  like a quantum particle. At the end of this paper we provide an
  example application in a periodic gas-like system. Finally, one more
  example application would be calculating the escape time of a particle
  in a maze of obstacles.</p>
  <p>The package is written in pure Julia
  (<xref alt="Bezanson et al., 2017" rid="ref-Julia" ref-type="bibr">Bezanson
  et al., 2017</xref>) a new programming language with many advantages.
  Because Julia is dynamic, it allows users to experiment with billiards
  flexibly and interactively and have access to a very easy-to-use high
  level interface. On the other hand, because Julia is as fast as C,
  there is no worry about the speed of the algorithms.</p>
  <p>Another advantage of using Julia is that the source code is clear,
  concise and very easy to understand even for beginners. This allows
  our package to be extendable in an almost trivial manner. In fact, in
  one of our
  <ext-link ext-link-type="uri" xlink:href="https://juliadynamics.github.io/DynamicalBilliards.jl/latest/tutorials/own_obstacle/">tutorial
  pages</ext-link> we show users that all they need to do to define a
  completely new type of <monospace>Obstacle</monospace> (the things
  particles collide with) is only four functions, with an average of
  just 50 lines of code in total. Everything else is taken care of with
  the modular approach of our package and the power of abstraction that
  Julia provides.</p>
  <p>DynamicalBilliards.jl calculates exactly all collisions between
  particles and obstacles, by solving 1st and 2nd order polynomial
  equations, which results in accuracies of the order of
  <monospace>1e-14</monospace> (for 64-bit floating point numbers). For
  this to work, particles are considered point particles. This advantage
  of exact solutions however also comes with a drawback: our package
  currently does not support (a) interactions between particles and (b)
  external electrostatic potentials.</p>
  <p>We would like to bring into attention another new billiard package,
  called “Bill2D”
  (<xref alt="Solanpää et al., 2016" rid="ref-Solanpaa2016" ref-type="bibr">Solanpää
  et al., 2016</xref>), which is written in C instead, and supports
  interactions between particles. There is a some amount of overlap
  between DynamicalBilliards.jl and Bill2D, however both packages offer
  a lot of unique features not included in each other.</p>
</sec>
<sec id="example">
  <title>Example</title>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="periodic_billiard.png" />
  In the figure we show an example application of our package. A tiny
  particle (blue color) is propagating in a gas of periodically located
  large molecules (green color). Because the mass and size of the
  molecules is much bigger than that of the particle, we can accept that
  the collisions leave the molecules unmoved.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This package is mainly developed by George Datseris. However, this
  development would not have been possible without significant help from
  other people:</p>
  <list list-type="order">
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/dapias">Diego
      Tapias</ext-link> (<monospace>@dapias</monospace>) Contributed the
      lyapunov spectrum calculation methods.</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/dpsanders">David.
      P. Sanders</ext-link> (<monospace>@dpsanders</monospace>) and
      <ext-link ext-link-type="uri" xlink:href="https://www.ds.mpg.de/person/20199/118124">Ragnar
      Fleischmann</ext-link> contributed in fruitful discussions about
      the programming and physics of Billiard systems all-around.</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/ChrisRackauckas">Christopher
      Rackauckas</ext-link> (<monospace>@ChrisRackauckas</monospace>)
      helped set-up the continuous integration, testing, documentation
      publishing and all around package development-related
      concepts.</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/tkelman">Tony
      Kelman</ext-link> (<monospace>@tkelman</monospace>) helped
      significantly in the package publication process, especially in
      making it work correctly without destroying METADATA.jl.</p>
    </list-item>
  </list>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Sinai1970">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sinai</surname><given-names>Yakov G</given-names></name>
        </person-group>
        <article-title>Dynamical systems with elastic reflections</article-title>
        <source>Russian Mathematical Surveys</source>
        <year iso-8601-date="1970">1970</year>
        <volume>25</volume>
        <issue>2</issue>
        <issn>0036-0279</issn>
        <uri>http://stacks.iop.org/0036-0279/25/i=2/a=R05</uri>
        <pub-id pub-id-type="doi">10.1070/RM1970v025n02ABEH003794</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Bunimovich2015">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bunimovich</surname><given-names>Leonid A.</given-names></name>
          <name><surname>Vela-Arevalo</surname><given-names>Luz V.</given-names></name>
        </person-group>
        <article-title>Some new surprises in chaos (billiards)</article-title>
        <source>Chaos</source>
        <year iso-8601-date="2015">2015</year>
        <volume>25</volume>
        <issue>9</issue>
        <issn>10541500</issn>
        <pub-id pub-id-type="doi">10.1063/1.4916330</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Julia">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bezanson</surname><given-names>Jeff</given-names></name>
          <name><surname>Edelman</surname><given-names>Alan</given-names></name>
          <name><surname>Karpinski</surname><given-names>Stefan</given-names></name>
          <name><surname>Shah</surname><given-names>Viral B.</given-names></name>
        </person-group>
        <article-title>Julia: A fresh approach to numerical computing</article-title>
        <source>SIAM Review</source>
        <year iso-8601-date="2017">2017</year>
        <volume>59</volume>
        <issue>1</issue>
        <uri>
                https://doi.org/10.1137/141000671

        </uri>
        <pub-id pub-id-type="doi">10.1137/141000671</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Solanpaa2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Solanpää</surname><given-names>J.</given-names></name>
          <name><surname>Luukko</surname><given-names>P. J. J.</given-names></name>
          <name><surname>Räsänen</surname><given-names>E.</given-names></name>
        </person-group>
        <article-title>Bill2d - A software package for classical two-dimensional Hamiltonian systems</article-title>
        <source>Computer Physics Communications</source>
        <publisher-name>Elsevier B.V.</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <volume>199</volume>
        <issn>00104655</issn>
        <uri>http://dx.doi.org/10.1016/j.cpc.2015.10.006</uri>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2015.10.006</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Datseris">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Datseris</surname><given-names>G.</given-names></name>
          <name><surname>Geisel</surname><given-names>T.</given-names></name>
          <name><surname>Fleischmann</surname><given-names>R.</given-names></name>
        </person-group>
        <article-title>Robustness of ballistic transport features in antidot superlattices</article-title>
        <source>ArXiv e-prints</source>
        <year iso-8601-date="2017-11">2017</year><month>11</month>
        <uri>https://arxiv.org/abs/1711.05833</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
