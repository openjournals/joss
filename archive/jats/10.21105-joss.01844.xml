<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1844</article-id>
<article-id pub-id-type="doi">10.21105/joss.01844</article-id>
<title-group>
<article-title>MyQueue: Task and workflow scheduling
system</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5090-6706</contrib-id>
<string-name>Jens Jørgen Mortensen</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5256-660X</contrib-id>
<string-name>Morten Gjerding</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5197-214X</contrib-id>
<string-name>Kristian Sommer Thygesen</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>CAMD, Department of Physics, Technical University of
Denmark, 2800 Kgs. Lyngby, Denmark</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-11-11">
<day>11</day>
<month>11</month>
<year>2019</year>
</pub-date>
<volume>5</volume>
<issue>45</issue>
<fpage>1844</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>...</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Task scheduling and workload management on high-performance
  computing environments is usually done with tools such as
  <monospace>SLURM</monospace>
  (<xref alt="Jette et al., 2002" rid="ref-slurm" ref-type="bibr">Jette
  et al., 2002</xref>).
  <ext-link ext-link-type="uri" xlink:href="https://myqueue.readthedocs.io/">MyQueue</ext-link>
  is a front-end for schedulers that makes handling of tasks easy. It
  has a command-line interface called <italic>mq</italic> with a number
  of sub-commands and a Python interface for managing workflows.
  Currently, the following schedulers are supported:
  <ext-link ext-link-type="uri" xlink:href="https://en.m.wikipedia.org/wiki/Slurm_Workload_Manager">SLURM</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://en.m.wikipedia.org/wiki/Portable_Batch_System">PBS</ext-link>,
  and
  <ext-link ext-link-type="uri" xlink:href="https://en.m.wikipedia.org/wiki/Platform_LSF">LSF</ext-link>.</p>
  <p>The idea behind <monospace>MyQueue</monospace> is to define a
  personal queue that the user can interact with in an easy and
  efficient way while <monospace>MyQueue</monospace> handles the
  interaction with the scheduler. Finished tasks will stay in the
  personal queue until they are explicitly removed so they can be listed
  with their status (done, failed, timed-out, or out-of-memory). This
  makes it easy to keep track of your tasks: If a task is listed as
  “done”, it reminds you that some action should be taken, e.g., the
  result of the task should be checked. If a task failed then you need
  to fix something and resubmit the task. In this sense,
  <monospace>MyQueue</monospace> works as a to-do list.</p>
  <p><monospace>MyQueue</monospace> has a convenient
  <italic>list</italic> sub-command. It will by default only show tasks
  belonging to the current folder and its sub-folders, making it easy to
  manage several projects by putting them in separate folders. Failed
  tasks will show a short error message read from the relevant line in
  the error file. You can select the tasks you want to list by status,
  task-id, name, or error message. A task can be marked with a
  <italic>restarts</italic> number <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>,
  indicating that <monospace>MyQueue</monospace> should restart the task
  up to <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
  times (with increased resources) if the task runs out of time or
  memory. Increased resources means longer time or more cores for the
  timed-out and out-of-memory cases, respectively.</p>
  <p>The <monospace>MyQueue</monospace> <italic>submit</italic>
  sub-command makes it easy to submit thousands of tasks in a single
  command. As input <italic>submit</italic> takes a shell script, Python
  script, or Python module and executes the script/module in a number of
  folders. This makes it easy to submit a large number of tasks quickly.
  The <italic>list</italic> sub-command can then be used to monitor the
  execution of the tasks. Together with the <italic>resubmit</italic>
  sub-command it becomes easy to resubmit any tasks that might have
  failed. This example show how the sub-commands of
  <monospace>MyQueue</monospace> synergize and increase the efficiency
  of the user.</p>
  <p><monospace>MyQueue</monospace> has a simple Python interface that
  can be used to define workflows. A Python script defines a dependency
  tree of tasks that <monospace>MyQueue</monospace> can use to submit
  tasks without user involvement. The dependencies take the form “if
  task X is done then submit task Y”. <monospace>MyQueue</monospace>
  works directly with folders and files, which makes it simple to use
  and easy to get started.</p>
  <p>Compared to the current state of the field
  <monospace>MyQueue</monospace> distinguishes itself by focusing
  <italic>not</italic> on automatic handling of crashes but
  <italic>only</italic> on the single problem of submitting and managing
  thousands of tasks. In the scientific field of the authors,
  atomic-scale simulations, commonly used workflow managers are
  <ext-link ext-link-type="uri" xlink:href="http://www.aiida.net">AiiDA</ext-link>
  (<xref alt="Pizzi et al., 2016" rid="ref-aiida" ref-type="bibr">Pizzi
  et al., 2016</xref>) and
  <ext-link ext-link-type="uri" xlink:href="https://materialsproject.github.io/fireworks">Fireworks</ext-link>
  (<xref alt="Jain et al., 2015" rid="ref-fireworks" ref-type="bibr">Jain
  et al., 2015</xref>). Fireworks’ centralized server model is
  advantageous when coordinating tasks distributed between multiple
  users. In constrast to Fireworks, <monospace>MyQueue</monospace> is
  installed per user, is completely decentralized, and cannot coordinate
  tasks between multiple users. AiiDA is a fully automatic workflow tool
  designed to ensure data provenance. In contrast to AiiDA,
  <monospace>MyQueue</monospace> does not handle data provenance and
  does not focus on the automization of the workflow process. These
  design decisions can be seen both as a drawback and an advantage
  depending on the use case, but in any case makes
  <monospace>MyQueue</monospace> easier to learn. To summarize,
  <monospace>MyQueue</monospace> is a personal, decentralized, and
  lightweight front-end for schedulers with support for submitting
  workflows. It requires no system administrator and no database
  server.</p>
  <p><monospace>MyQueue</monospace> is useful for high-throughput
  computations, which require automatic submission of thousands of
  interdependent jobs. For example, <monospace>MyQueue</monospace> has
  been used to drive high-throughput screening studies coordinating on
  the order of 100,000 individual tasks
  (<xref alt="Haastrup et al., 2018" rid="ref-c2db" ref-type="bibr">Haastrup
  et al., 2018</xref>),
  (<xref alt="Bölle et al., 2019" rid="ref-felix" ref-type="bibr">Bölle
  et al., 2019</xref>). <monospace>MyQueue</monospace> is also used by
  the
  <ext-link ext-link-type="uri" xlink:href="https://asr.readthedocs.io/">Atomic
  Simulation Recipes</ext-link> project, which is a library of tasks for
  atomic simulations.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>K. S. T. acknowledges funding from the European Research Council
  (ERC) under the European Union’s Horizon 2020 research and innovation
  program (Grant Agreement No. 773122, LIMA).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-c2db">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Haastrup</surname><given-names>Sten</given-names></name>
          <name><surname>Strange</surname><given-names>Mikkel</given-names></name>
          <name><surname>Pandey</surname><given-names>Mohnish</given-names></name>
          <name><surname>Deilmann</surname><given-names>Thorsten</given-names></name>
          <name><surname>Schmidt</surname><given-names>Per S</given-names></name>
          <name><surname>Hinsche</surname><given-names>Nicki F</given-names></name>
          <name><surname>Gjerding</surname><given-names>Morten N</given-names></name>
          <name><surname>Torelli</surname><given-names>Daniele</given-names></name>
          <name><surname>Larsen</surname><given-names>Peter M</given-names></name>
          <name><surname>Riis-Jensen</surname><given-names>Anders C</given-names></name>
          <name><surname>Gath</surname><given-names>Jakob</given-names></name>
          <name><surname>Jacobsen</surname><given-names>Karsten W</given-names></name>
          <name><surname>Mortensen</surname><given-names>Jens Jørgen</given-names></name>
          <name><surname>Olsen</surname><given-names>Thomas</given-names></name>
          <name><surname>Thygesen</surname><given-names>Kristian S</given-names></name>
        </person-group>
        <article-title>The computational 2D materials database: High-throughput modeling and discovery of atomically thin crystals</article-title>
        <source>2D Materials</source>
        <publisher-name>IOP Publishing</publisher-name>
        <year iso-8601-date="2018-09">2018</year><month>09</month>
        <volume>5</volume>
        <issue>4</issue>
        <uri>https://doi.org/10.1088%2F2053-1583%2Faacfc1</uri>
        <pub-id pub-id-type="doi">10.1088/2053-1583/aacfc1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-slurm">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Jette</surname><given-names>Morris A.</given-names></name>
          <name><surname>Yoo</surname><given-names>Andy B.</given-names></name>
          <name><surname>Grondona</surname><given-names>Mark</given-names></name>
        </person-group>
        <article-title>SLURM: Simple linux utility for resource management</article-title>
        <source>In lecture notes in computer science: Proceedings of job scheduling strategies for parallel processing (JSSPP) 2003</source>
        <publisher-name>Springer-Verlag</publisher-name>
        <year iso-8601-date="2002">2002</year>
        <pub-id pub-id-type="doi">10.1007/10968987_3</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-felix">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bölle</surname><given-names>Felix Tim</given-names></name>
          <name><surname>Mathiesen</surname><given-names>Nicolai Rask</given-names></name>
          <name><surname>Nielsen</surname><given-names>Alexander Juul</given-names></name>
          <name><surname>Vegge</surname><given-names>Tejs</given-names></name>
          <name><surname>Lastra</surname><given-names>Juan Maria García</given-names></name>
          <name><surname>Castelli</surname><given-names>Ivano E.</given-names></name>
        </person-group>
        <article-title>Autonomous Discovery of Materials for Intercalation Electrodes</article-title>
        <year iso-8601-date="2019-10">2019</year><month>10</month>
        <uri>https://chemrxiv.org/articles/Autonomous_Discovery_of_Materials_for_Intercalation_Electrodes/9971054</uri>
        <pub-id pub-id-type="doi">10.26434/chemrxiv.9971054.v1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-fireworks">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Jain</surname><given-names>Anubhav</given-names></name>
          <name><surname>Ong</surname><given-names>Shyue Ping</given-names></name>
          <name><surname>Chen</surname><given-names>Wei</given-names></name>
          <name><surname>Medasani</surname><given-names>Bharat</given-names></name>
          <name><surname>Qu</surname><given-names>Xiaohui</given-names></name>
          <name><surname>Kocher</surname><given-names>Michael</given-names></name>
          <name><surname>Brafman</surname><given-names>Miriam</given-names></name>
          <name><surname>Petretto</surname><given-names>Guido</given-names></name>
          <name><surname>Rignanese</surname><given-names>Gian-Marco</given-names></name>
          <name><surname>Hautier</surname><given-names>Geoffroy</given-names></name>
          <name><surname>Gunter</surname><given-names>Daniel</given-names></name>
          <name><surname>Persson</surname><given-names>Kristin A.</given-names></name>
        </person-group>
        <article-title>FireWorks: A dynamic workflow system designed for high-throughput applications</article-title>
        <source>Concurrency and Computation: Practice and Experience</source>
        <year iso-8601-date="2015">2015</year>
        <volume>27</volume>
        <issue>17</issue>
        <issn>1532-0634</issn>
        <uri>http://dx.doi.org/10.1002/cpe.3505</uri>
        <pub-id pub-id-type="doi">10.1002/cpe.3505</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-aiida">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Pizzi</surname><given-names>Giovanni</given-names></name>
          <name><surname>Cepellotti</surname><given-names>Andrea</given-names></name>
          <name><surname>Sabatini</surname><given-names>Riccardo</given-names></name>
          <name><surname>Marzari</surname><given-names>Nicola</given-names></name>
          <name><surname>Kozinsky</surname><given-names>Boris</given-names></name>
        </person-group>
        <article-title>AiiDA: Automated interactive infrastructure and database for computational science</article-title>
        <source>Computational Materials Science</source>
        <year iso-8601-date="2016">2016</year>
        <volume>111</volume>
        <issn>0927-0256</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S0927025615005820</uri>
        <pub-id pub-id-type="doi">https://doi.org/10.1016/j.commatsci.2015.09.013</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
