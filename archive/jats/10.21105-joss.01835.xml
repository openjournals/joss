<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1835</article-id>
<article-id pub-id-type="doi">10.21105/joss.01835</article-id>
<title-group>
<article-title>RepnDecomp: A GAP package for decomposing linear
representations of finite groups</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-8581-5804</contrib-id>
<string-name>Kaashif Hymabaccus</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-7557-6886</contrib-id>
<string-name>Dmitrii Pasechnik</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of Oxford</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-08-31">
<day>31</day>
<month>8</month>
<year>2019</year>
</pub-date>
<volume>5</volume>
<issue>50</issue>
<fpage>1835</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>mathematics</kwd>
<kwd>groups</kwd>
<kwd>representations</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>A linear representation of a finite group is a homomorphism from a
  finite group G to the group of linear automorphisms of a vector space
  V. When studying problems in algebra and combinatorics, it is often
  useful to also study associated representations to better understand
  the structure of the problem. This is also useful for computation,
  since representations allow us to use tools from linear algebra to
  solve problems in group theory. A key property of complex
  representations of finite groups is that all such representations are
  completely reducible, meaning we can decompose them into direct sums
  of irreducible representations. When working with matrices, this
  corresponds to finding a basis which produces an optimal block
  diagonal form of the representation, with the smallest possible
  blocks. In cases where there are many small blocks, this can greatly
  improve the efficiency of computations done with the matrices.</p>
  <p>Currently, while methods for doing these decompositions are known
  (and are described in Serre
  (<xref alt="1977" rid="ref-serreU003A1977" ref-type="bibr">1977</xref>)),
  there are no open-source computer programs that implement these
  methods, nor are details on how to achieve good performance of such an
  implementation published.</p>
  <p>Using the GAP system
  (<xref alt="GAP – Groups, Algorithms, and Programming, Version 4.11.0, 2020" rid="ref-gapU003A2020" ref-type="bibr"><italic><named-content content-type="nocase">GAP
  – Groups, Algorithms, and Programming, Version
  4.11.0</named-content></italic>, 2020</xref>), we have produced a
  package
  <ext-link ext-link-type="uri" xlink:href="https://github.com/gap-packages/RepnDecomp">RepnDecomp</ext-link>
  that provides the following functions:</p>
  <list list-type="bullet">
    <list-item>
      <p>Decompose a representation into a direct sum of irreducible
      representations</p>
    </list-item>
    <list-item>
      <p>Compute the associated basis that gives an optimal block
      diagonalisation</p>
    </list-item>
    <list-item>
      <p>Determine whether two representations are isomorphic and
      compute the isomorphism</p>
    </list-item>
    <list-item>
      <p>Compute a unitary representation isomorphic to a given
      representation</p>
    </list-item>
    <list-item>
      <p>Compute the centraliser of the representation (the vector space
      of matrices that commute with the matrices of the
      representation)</p>
    </list-item>
  </list>
  <p>Our package deals exclusively with the case where V is a
  finite-dimensional <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbb{C}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="double-struck"><mml:mi>ℂ</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>-vector
  space with linear automorphisms represented as square matrices. In
  fact, we only consider cases where the matrix coefficients are
  cyclotomic numbers - complex numbers in the
  <inline-formula><alternatives>
  <tex-math><![CDATA[\mathbb{Q}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="double-struck"><mml:mi>ℚ</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>-vector
  space spanned by all powers of all roots of unity. Our methods are not
  specific to cyclotomic numbers, but the GAP system only has facilities
  to compute with cyclotomics and not general complex numbers.</p>
  <p>This package has been applied to improve the block diagonalisation
  of matrices involved in a semidefinite program for computing bounds on
  the crossing number of complete graphs
  (<xref alt="Klerk et al., 2007" rid="ref-deklerkU003A2007" ref-type="bibr">Klerk
  et al., 2007</xref>). Our package can also be applied to other
  problems mentioned by Klerk et al.
  (<xref alt="2007" rid="ref-deklerkU003A2007" ref-type="bibr">2007</xref>),
  including the computation of bounds for the Lovász
  <inline-formula><alternatives>
  <tex-math><![CDATA[\vartheta]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>ϑ</mml:mi></mml:math></alternatives></inline-formula>
  (and related <inline-formula><alternatives>
  <tex-math><![CDATA[\vartheta']]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>ϑ</mml:mi><mml:mi>′</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>)
  numbers for graphs, and the truss topology design problem described in
  Kanno et al.
  (<xref alt="1970" rid="ref-kannoU003A1970" ref-type="bibr">1970</xref>)
  for trusses with suitable symmetries.</p>
  <p>The algorithms used to implement this package are not all original.
  One algorithm for decomposing representations is original work. The
  other is based on formulas described in Serre
  (<xref alt="1977" rid="ref-serreU003A1977" ref-type="bibr">1977</xref>)
  — however, we implement apparently novel speedups to make it feasible
  for groups of large order. Our method for unitarising a representation
  is based on Dixon
  (<xref alt="1970" rid="ref-dixonU003A1970" ref-type="bibr">1970</xref>),
  again, with apparently novel speedups.</p>
  <p>The development of the package was part of Kaashif Hymabaccus’
  Master’s thesis
  (<xref alt="Hymabaccus, 2019" rid="ref-hymabaccusU003A2019" ref-type="bibr">Hymabaccus,
  2019</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Kaashif Hymabaccus thanks the Collaborative Computational Project
  (CCP) in the area of Computational Discrete Mathematics, supported by
  the EPSRC (EP/M022641/1) for supporting his participation in a GAP
  workshop.</p>
  <p>Dmitrii Pasechnik was partially funded by the OpenDreamKit Horizon
  2020 European Research Infrastructures project (#676541).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-deklerkU003A2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Klerk</surname><given-names>Etienne de</given-names></name>
          <name><surname>Pasechnik</surname><given-names>Dmitrii V.</given-names></name>
          <name><surname>Schrijver</surname><given-names>Alexander</given-names></name>
        </person-group>
        <article-title>Reduction of symmetric semidefinite programs using the regular \ast-representation</article-title>
        <source>Mathematical Programming</source>
        <year iso-8601-date="2007-03-01">2007</year><month>03</month><day>01</day>
        <volume>109</volume>
        <issue>2</issue>
        <issn>1436-4646</issn>
        <uri>https://doi.org/10.1007/s10107-006-0039-7</uri>
        <pub-id pub-id-type="doi">10.1007/s10107-006-0039-7</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-kannoU003A1970">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kanno</surname><given-names>Y.</given-names></name>
          <name><surname>Ohsaki</surname><given-names>M.</given-names></name>
          <name><surname>Murota</surname><given-names>K.</given-names></name>
          <name><surname>Katoh</surname><given-names>N.</given-names></name>
        </person-group>
        <article-title>Group symmetry in interior-point methods for semidefinite programming</article-title>
        <source>Optimization and Engineering</source>
        <year iso-8601-date="1970">1970</year>
        <pub-id pub-id-type="doi">10.1023/A:1015366416311</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-hymabaccusU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hymabaccus</surname><given-names>Kaashif</given-names></name>
        </person-group>
        <article-title>Decomposing linear representations of finite groups</article-title>
        <source>Unpublished master’s thesis</source>
        <publisher-name>University of Oxford; University of Oxford</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-serreU003A1977">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Serre</surname><given-names>Jean-Pierre</given-names></name>
        </person-group>
        <source>Linear representations of finite groups</source>
        <publisher-name>Springer-Verlag, New York-Heidelberg</publisher-name>
        <year iso-8601-date="1977">1977</year>
        <isbn>0-387-90190-6</isbn>
      </element-citation>
    </ref>
    <ref id="ref-dixonU003A1970">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Dixon</surname><given-names>John D.</given-names></name>
        </person-group>
        <article-title>Computing irreducible representations of groups</article-title>
        <source>Mathematics of Computation</source>
        <publisher-name>American Mathematical Society</publisher-name>
        <year iso-8601-date="1970">1970</year>
        <volume>24</volume>
        <issue>111</issue>
        <issn>00255718, 10886842</issn>
        <pub-id pub-id-type="doi">10.2307/2004848</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gapU003A2020">
      <element-citation publication-type="book">
        <source>GAP – Groups, Algorithms, and Programming, Version 4.11.0</source>
        <publisher-name>The GAP Group</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.gap-system.org</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
