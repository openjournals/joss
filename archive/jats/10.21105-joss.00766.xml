<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">766</article-id>
<article-id pub-id-type="doi">10.21105/joss.00766</article-id>
<title-group>
<article-title>General binary file parser.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<string-name>Jeroen F.J. Laros</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Leiden University Medical Center,</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-06-05">
<day>5</day>
<month>6</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>26</issue>
<fpage>766</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>binary</kwd>
<kwd>parser</kwd>
<kwd>yaml</kwd>
<kwd>json</kwd>
<kwd>read write</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>To enable interoperability for (proprietary) binary file formats
  while maintaining compatibility with the original software, a lot of
  effort needs to be put in reverse engineering of the file format and
  the subsequent programming of a dedicated parser and writer. Here we
  introduce a library that aims to keep this effort to a minimum by
  providing a framework that enables a programmer to record the
  knowledge gained in the reverse engineering process in a structured
  way for it to be used directly in a parser, a writer and as
  documentation.</p>
  <p>General binary file parsing and writing is implemented by
  interpretation of human readable documentation of the file structure
  and data types. Basic types like variable length strings, maps and bit
  fields (flags), as well as elementary data types provided by the
  struct library Gindi
  (<xref alt="2013" rid="ref-structJs" ref-type="bibr">2013</xref>) are
  supported and other data types are easily added. Apart from basic
  types, nested structures and various kinds of iterators are supported
  to accommodate for complicated file formats. Numerous character
  encodings are supported via the iconv library
  (<xref alt="Shtuchkin, 2011" rid="ref-iconvJs" ref-type="bibr">Shtuchkin,
  2011</xref>).</p>
  <p>Since all operations needed for parsing a binary file can be
  reversed, fully functional binary editing is possible using this
  library. A binary file can be converted to a serialised dictionary
  representation, edited and be converted back to its binary form.</p>
  <p>We have made two implementations of this library: one in Python and
  one in JavaScript. We chose YAML Puzrin
  (<xref alt="2011-2015" rid="ref-yamlJs" ref-type="bibr">2011-2015</xref>)
  as our preferred serialised dictionary format, but other serialisation
  formats (JSON for example) can be used too.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-structPython">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Python Software Foundation</string-name>
        </person-group>
        <article-title>Struct — interpret strings as packed binary data.</article-title>
        <uri>https://docs.python.org/2/library/struct.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-structJs">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Gindi</surname><given-names>Daniel Cohen</given-names></name>
        </person-group>
        <article-title>Python-struct - packs/unpacks/measures structs according to Python’s struct format.</article-title>
        <year iso-8601-date="2013">2013</year>
        <uri>https://github.com/danielgindi/node-python-struct</uri>
      </element-citation>
    </ref>
    <ref id="ref-yamlPython">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Simonov</surname><given-names>Kirill</given-names></name>
        </person-group>
        <article-title>PyYAML - the next generation YAML parser and emitter for Python.</article-title>
        <uri>https://github.com/yaml/pyyaml</uri>
      </element-citation>
    </ref>
    <ref id="ref-yamlJs">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Puzrin</surname><given-names>Vitaly</given-names></name>
        </person-group>
        <article-title>JS-YAML - YAML 1.2 parser / writer for JavaScript.</article-title>
        <uri>https://github.com/nodeca/js-yaml</uri>
      </element-citation>
    </ref>
    <ref id="ref-iconvJs">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Shtuchkin</surname><given-names>Alexander</given-names></name>
        </person-group>
        <article-title>Iconv-lite - pure JS character encoding conversion.</article-title>
        <year iso-8601-date="2011">2011</year>
        <uri>https://github.com/ashtuchkin/iconv-lite</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
