<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1249</article-id>
<article-id pub-id-type="doi">10.21105/joss.01249</article-id>
<title-group>
<article-title>dfitspy: a dfits\|fitsort implementation in
python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-8385-3276</contrib-id>
<string-name>Romain Thomas</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>European Southern Observatory, Av. Alonso de CÃ³rdoa 3107,
7630355 Vitacura, Santiago, Chile</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-01-28">
<day>28</day>
<month>1</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>35</issue>
<fpage>1249</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>fits files</kwd>
<kwd>Astronomy</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The FITS format (Flexible Image Transport System)
  (<xref alt="Hanisch et al., 2001" rid="ref-HanischU003A2001" ref-type="bibr">Hanisch
  et al., 2001</xref>) is a widely used format to store astronomical
  data. It is used to store a lot of different types of data such as 1D
  or 2D spectra, 3D data cubes. It has been developed in the late 1970
  to reach its final form almost two decades ago. FITS files are built
  with two components. The data themselves are stored as tables and
  contains any types of data. A header is built containing set of
  keywords-value pairs aiming at describing the data themselves.</p>
  <p>Accessing and displaying metadata inside FITS files is important in
  order to get an overview of their content properties without having to
  read the data themselves. It is particularly useful when dealing with
  large amount of files at once. Tools have been already publicly
  available for years with the dfits and fitsort algorithms (the
  documentation is available here
  https://www.eso.org/sci/software/eclipse/eug/eug/node8.html). The main
  limitation is that they are stand-alone programs useable only in a
  terminal. They can not be used natively inside another program.</p>
  <p>The python module presented in this paper,
  <monospace>dfitspy</monospace>, is a project that migrates the main
  dfits and fitsort capabilities to python. It is a metadata
  searcher/displayer for FITS files. As dfits and fitsort,
  <monospace>dfitspy</monospace> is able to display in the terminal the
  result of a metadata search and is able to grep certain values of
  keywords inside large samples of files. Therefore it can be used
  directly with the command line interface. Nevertheless,
  <monospace>dfitspy</monospace> can be, and it is its strength,
  imported as a python module and the user can use these
  functionnalities inside another python code or the python
  interpretor.</p>
</sec>
<sec id="dfitspy-as-a-terminal-command">
  <title>dfitspy as a terminal command</title>
  <p>A command line interface has been included in
  <monospace>dfitspy</monospace> so it can be used as a Terminal
  command. A typical command is:
  </p>
  <p><monospace>dfitspy -f Test_data/* -k author,number,type --grep 2dspec</monospace>
  </p>
  <p>This command will search in all the FITS file present in the
  <italic>Test_data</italic> directory. <monospace>dfitspy</monospace>
  will search for three keywords in the header: author, time and type.
  Finally, the terminal will display only the file where
  <monospace>2dspec</monospace> is in the requested keyword values. The
  terminal output is similar to the dfits|fitsort combination. It
  displays, in a column fashion, each file with the requested keyword
  its corresponding values:</p>
  <p><monospace>filename     author            number          type</monospace>
  <monospace>----------   ------------      --------        ------</monospace>
  <monospace>file1.fits   R. Thomas         49098.26        2dspec</monospace>
  <monospace>file2.fits   R. Thomas         79098.26        2dspec</monospace>
  <monospace>file3.fits   R. Thomas         69198.26        2dspec</monospace>
  <monospace>file4.fits   R. Thomas         79498.26        2dspec</monospace>
  <monospace>file5.fits   R. Thomas         89098.26        2dspec</monospace>
  <monospace>file6.fits   R. Thomas         79498.26        2dspec</monospace></p>
</sec>
<sec id="dfitspy-as-a-python-module">
  <title>dfitspy as a Python module</title>
  <p>To be used as a Python module, <monospace>dfitspy</monospace> must
  be imported. Then a set of command have to be used in order to produce
  the final list of filenames/keywords/values. In short, three main
  commands must be used:</p>
  <p>First of all, import the module:
  <monospace>import dfitspy</monospace></p>
  <p>Then, the files must be gathered:
  <monospace>listfiles = dfitspy.get_files(['all'],'Test_data/')</monospace></p>
  <p>And the list of keywords must be prepared, and eventually the
  grepping values:
  <monospace>listkeys = ['author', 'number', 'type']</monospace>
  <monospace>grepping = ['2dspec']</monospace></p>
  <p>Finally, we can fitsort the files and eventually grep.
  <monospace>fitsortgrep = dfitspy.dfitsort(listfiles, listkeys, grepping)</monospace></p>
  <p>The final output is stored as a dictionnary of files for which each
  keywords/values is given. It can also be displayed in the same way as
  for the terminal output (see above).</p>
</sec>
<sec id="availability">
  <title>Availability</title>
  <p><monospace>dfitspy</monospace> is a GPL licensed software and the
  source code is available at https://github.com/astrom-tom/dfitspy. The
  full documentation is available at
  https://astrom-tom.github.io/dfitspy/build/html/index.html .</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The author would like to thank the Journal of Open Source Software
  to give the opportunity to researchers to publish their softwares and
  to the referee of this paper for helpful comments.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-HanischU003A2001">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hanisch</surname><given-names>R. J.</given-names></name>
          <name><surname>Farris</surname><given-names>A.</given-names></name>
          <name><surname>Greisen</surname><given-names>E. W.</given-names></name>
          <name><surname>Pence</surname><given-names>W. D.</given-names></name>
          <name><surname>Schlesinger</surname><given-names>B. M.</given-names></name>
          <name><surname>Teuben</surname><given-names>P. J.</given-names></name>
          <name><surname>Thompson</surname><given-names>R. W.</given-names></name>
          <name><surname>Warnock</surname><given-names>III</given-names><suffix>A.</suffix></name>
        </person-group>
        <article-title>Definition of the Flexible Image Transport System (FITS)</article-title>
        <source></source>
        <year iso-8601-date="2001-09">2001</year><month>09</month>
        <volume>376</volume>
        <pub-id pub-id-type="doi">10.1051/0004-6361:20010923</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
