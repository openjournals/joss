<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1392</article-id>
<article-id pub-id-type="doi">10.21105/joss.01392</article-id>
<title-group>
<article-title>Optimising Light Source Positioning for Even and
Flux-Efficient Illumination</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-8459-9994</contrib-id>
<string-name>Niamh Mac Fhionnlaoich</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6494-8309</contrib-id>
<string-name>Alaric Taylor</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4413-5527</contrib-id>
<string-name>Stefan Guldin</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Chemical Engineering, University College
London, Torrington Place, London WC1E 7JE, U.K.</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-09-26">
<day>26</day>
<month>9</month>
<year>2018</year>
</pub-date>
<volume>4</volume>
<issue>37</issue>
<fpage>1392</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Even Illumination</kwd>
<kwd>Modelling Illumination</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Designing imaging systems is a challenge faced by researchers in
  many fields including fluorescent imaging in life sciences and optical
  set-ups for automated capture of experimental data.</p>
  <p>The position of light sources within an imaging system has
  significant consequences for the downstream usability of the data it
  generates. Non-uniform illumination can contribute to low quality (or
  in some cases unusable) images, particularly so when illumination
  variation approaches or exceeds the sensitivity range of the capture
  device/camera. Similarly, low flux efficiency (i.e. ratio of flux
  through the imaging plane divided by the total flux from the source)
  will negatively affect the image acquisition and subsequent analysis.
  Often flux efficiency is sacrificed for illumination uniformity
  i.e. choosing to deliver less light to the target in order to keep the
  variation of light intensity across the target remains low.
  Furthermore, the large number of possible positional configurations of
  a light source within an imaging system precludes manual
  optimisation.</p>
  <p>To tackle this issue, we offer a software for modelling the
  illumination profile for a given light source. The code can be easily
  adjusted to model a variety of positional configurations and rapidly
  calculates results for many thousands of variable combinations. We
  envisage the exploitation of this software by researchers as well as
  those in the early stages of prototyping. For example, in the
  university environment where resources and time are limited.</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="https://raw.githubusercontent.com/adrena-lab/Optimising-Light-Source-Positioning/Code/Figures/Figure1.png" />
  <bold>Figure 1:</bold> Light source position and illumination profile.
  <bold>a)</bold> Schematic illustrating the placement of the light
  source relative to the illuminated area with all relevant variables.
  <bold>b)</bold> Illumination profile for a single light source denoted
  by the circle on the bottom left of the plot. <bold>c)</bold>
  Illumination profile for a system with four active light sources
  denoted by the black circles on the plot. The details of the variable
  values for these light sources are summarized in a legend on the
  bottom left of the plot.</p>
  <p>Furthermore, we demonstrate an approach by which a user can reduce
  the amount of possible multi-variable combinations down to the most
  viable options. This is performed using a modified convex hull
  approach in two-dimensions (optimising for two figures of merit,
  i.e. the total flux and the illumination variation). In principle,
  this method can be extended to n-dimensional space to include
  additional figures of merit for optimisation.</p>
  <p>Our model describes positions of a light source in Cartesian
  coordinates (x, y and z) relative to the centre of the illuminated
  area. The spatial region available for light source placement must be
  chosen by the user. In addition, the user defines a range of allowed
  angles of illumination in Polar coordinates (theta and phi) relative
  to the surface normal (see Figure 1a). Based on these user inputs, the
  software creates a set of illumination configurations. These are then
  tested for feasibility with regard to the requirements and limitations
  of the imaging device. This pre-filtering process can also be
  augmented by the user to suit the needs of their particular system.
  The illumination profile as observed by the camera is calculated for
  each of the positional configurations defined above. In order to
  perform this calculation, the model requires the user to specify a far
  field profile for their specific light source (we provide the
  characteristics of a 5 mm diameter hemispherical LED in our example
  code). Our code accounts for the drop in relative intensity due to
  distance from the light source and angle from the principal axis of
  the light source. It then utilises a cosine flux correction to
  identify the projected area difference between the light path and
  surface normal. Following this, Lambert’s cosine emission law (and a
  secondary target-to-lens distance factor) is applied in order to
  determine the radiant intensity as observed by the imaging objective
  (<xref alt="Pedrotti et al., 2018" rid="ref-Pedrotti2018" ref-type="bibr">Pedrotti
  et al., 2018</xref>). The code exploits positional symmetry so that
  illumination from multiple light sources can be computed
  efficiently.</p>
  <p>Solving these equations across a matrix of points representing the
  imaging plane allows one to predict the general illumination pattern.
  From this data, numerical metrics are calculated that can be used to
  optimise the system i.e. total radiant flux (efficiency of light
  delivered to the target area) and the standard deviation of the flux
  as a percentage of the mean flux (illumination uniformity). A user can
  filter the positional configurations dataset using these defined
  metrics or their own in order to select an optimised illumination
  configuration for their system.</p>
  <p>We provide a method for filtering these configurations to select
  settings with the lowest standard deviation for a given total radiant
  flux. A convex hull determines the set of points required to enclose
  all other points in the dataset
  (<xref alt="Convhull - MATLAB &amp; Simulink - MathWorks, United Kingdom, n.d." rid="ref-Convhull" ref-type="bibr"><italic>Convhull
  - MATLAB &amp; Simulink - MathWorks, United Kingdom</italic>,
  n.d.</xref>). As this operation seeks to fully enclose the dataset, a
  subset of these points will represent regions of low radiant flux,
  which are then removed. The remaining points represent the best
  trade-off between total radiant flux and standard deviation (i.e. for
  a given flux, the positional configuration that achieves the lowest
  possible standard deviation). As standard deviation is not necessarily
  a perfect descriptor for uniformity, additional data points may be of
  interest. Therefore, the user can provide tolerance values for both
  total radiant flux and standard deviation to broaden the domain of
  selected configurations. This process is detailed in Figure 2.</p>
  <p><inline-graphic mimetype="image" mime-subtype="png" xlink:href="https://raw.githubusercontent.com/adrena-lab/Optimising-Light-Source-Positioning/Code/Figures/Figure2-2.png" />
  <bold>Figure 2:</bold> Demonstration of convex hull based data
  filtering. <bold>a)</bold> The figures of merit, total flux and
  illumination variation (standard deviation), define the axes against
  which every parameter-combination is mapped (forming a cloud). The
  modified convex hull (boundary) of the candidate population is shown
  in blue. <bold>b)</bold> A zoomed-in view of a. <bold>c)</bold>
  Tolerance values of 0.05 for total flux and 10-6 were applied; this
  allowed for additional points that lay within these tolerances to be
  selected by the modified convex hull.</p>
  <p>Finally, our supplied plotting function enables the user to
  visually check the illumination profile and the relative positions of
  the light sources to ensure the results are acceptable (see Figure
  1b&amp;c). In summary, this software can screen large numbers of
  possible variable values for the positioning of the light sources with
  respect to total flux and uniformity. This will allow a user to design
  an optimised light array for their imaging system without requiring
  numerous, time-consuming experimental measurements.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>N.M.F. is grateful for the EPSRC for support under a Doctoral
  Training Partnership (EP/M507970/1).</p>
</sec>
<sec id="citations">
  <title>Citations</title>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Pedrotti2018">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Pedrotti</surname><given-names>Frank L</given-names></name>
          <name><surname>Pedrotti</surname><given-names>Leno M</given-names></name>
          <name><surname>Pedrotti</surname><given-names>Leno S</given-names></name>
        </person-group>
        <article-title>Nature of Light</article-title>
        <source>Introduction to optics</source>
        <publisher-name>Cambridge University Press</publisher-name>
        <publisher-loc>Cambridge</publisher-loc>
        <year iso-8601-date="2018">2018</year>
        <pub-id pub-id-type="doi">10.1017/9781108552493</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Convhull">
      <element-citation>
        <article-title>Convhull - MATLAB &amp; Simulink - MathWorks, United Kingdom</article-title>
        <publisher-name>https://uk.mathworks.com/help/matlab/ref/convhull.html (accessed Feb 25, 2019)</publisher-name>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
