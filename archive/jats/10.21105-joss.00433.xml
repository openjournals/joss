<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">433</article-id>
<article-id pub-id-type="doi">10.21105/joss.00433</article-id>
<title-group>
<article-title>PySwarms: a research toolkit for Particle Swarm
Optimization in Python</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-7872-6464</contrib-id>
<string-name>Lester James V. Miranda</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Waseda University</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2017-10-07">
<day>7</day>
<month>10</month>
<year>2017</year>
</pub-date>
<volume>3</volume>
<issue>21</issue>
<fpage>433</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>particle swarm optimization</kwd>
<kwd>swarm intelligence</kwd>
<kwd>optimization algorithms</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Particle swarm optimization (PSO) is a heuristic search technique
  that iteratively improves a set of candidate solutions given an
  objective measure of fitness
  (<xref alt="Kennedy &amp; Eberhart, 1995a" rid="ref-kennedyIJCNN1995" ref-type="bibr">Kennedy
  &amp; Eberhart, 1995a</xref>). Although vanilla implementations of PSO
  can be found in some Python evolutionary algorithm toolboxes
  (<xref alt="Biscani et al., 2017" rid="ref-pagmo2017" ref-type="bibr">Biscani
  et al., 2017</xref>;
  <xref alt="Fortin et al., 2012" rid="ref-deapJMLR2012" ref-type="bibr">Fortin
  et al., 2012</xref>), a PSO-specific library that focuses on the said
  technique is still an open challenge.</p>
  <p>PySwarms is a research toolkit for Particle Swarm Optimization
  (PSO) that provides a set of class primitives useful for solving
  continuous and combinatorial optimization problems. It follows a
  black-box approach, solving optimization tasks with few lines of code,
  yet allows a white-box framework with a consistent API for rapid
  prototyping of non-standard swarm models. In addition, benchmark
  objective functions and parameter-search tools are included to
  evaluate and improve swarm performance. It is intended for swarm
  intelligence researchers, practitioners, and students who would like a
  high-level declarative interface for implementing PSO in their
  problems.</p>
  <p>The main design principle of the package is to balance (1)
  ease-of-use by providing a rich set of classes to solve optimization
  tasks, and (2) ease-of-experimentation by defining a consistent API to
  accommodate non-standard PSO implementations. In this context,
  PySwarms follows these core principles in its development:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Maintain a specific set of conventions that are
      manageable to understand.</bold> This enables repeatability in all
      implementations and creates a single framework where the API will
      be based. Thus, for a particular swarm
      <inline-formula><alternatives>
      <tex-math><![CDATA[\mathcal{S}]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mstyle mathvariant="script"><mml:mi>ùíÆ</mml:mi></mml:mstyle></mml:math></alternatives></inline-formula>,
      the particles are defined as an <inline-formula><alternatives>
      <tex-math><![CDATA[m \times n]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>m</mml:mi><mml:mo>√ó</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
      matrix where <inline-formula><alternatives>
      <tex-math><![CDATA[m]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>
      corresponds to the number of particles, and
      <inline-formula><alternatives>
      <tex-math><![CDATA[n]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>n</mml:mi></mml:math></alternatives></inline-formula>
      to the number of dimensions in the search-space. Its fitness is
      then expressed as an <inline-formula><alternatives>
      <tex-math><![CDATA[m]]></tex-math>
      <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>m</mml:mi></mml:math></alternatives></inline-formula>-dimensional
      array containing the value for each particle.</p>
    </list-item>
    <list-item>
      <p><bold>Define a consistent API for all swarm
      implementations.</bold> A consistent API accommodates rapid
      prototyping of non-standard PSO implementations. As long as the
      user implements according to the API, all PySwarms capabilities
      are made available. It consists of an <monospace>init</monospace>
      method to initialize the swarm, an
      <monospace>update_position</monospace> and
      <monospace>update_velocity</monospace> rule to define update
      behaviour, and an <monospace>optimize</monospace> method that
      contains the evolutionary loop.</p>
    </list-item>
    <list-item>
      <p><bold>Provide a set of primitive classes for off-the-shelf PSO
      implementations.</bold> To deliver easy-access of PSO
      implementations for common optimization tasks, wrapper classes for
      standard global-best and local-best PSO are included. These
      implementations follow the same PySwarms API, and can even be
      built upon for more advanced applications.</p>
    </list-item>
  </list>
  <p>Various features include:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Python implementation of standard PSO algorithms.</bold>
      Includes the classic global best and local best PSO
      (<xref alt="Kennedy &amp; Eberhart, 1995a" rid="ref-kennedyIJCNN1995" ref-type="bibr">Kennedy
      &amp; Eberhart, 1995a</xref>,
      <xref alt="1995b" rid="ref-kennedyMHS1995" ref-type="bibr">1995b</xref>),
      and binary PSO for discrete optimization
      (<xref alt="Kennedy &amp; Eberhart, 1997" rid="ref-kennedySMC1997" ref-type="bibr">Kennedy
      &amp; Eberhart, 1997</xref>). These implementations are built
      natively in <monospace>numpy</monospace>
      (<xref alt="Jones et al., 2001--" rid="ref-scipyweb" ref-type="bibr">Jones
      et al., 2001--</xref>;
      <xref alt="Walt et al., 2011" rid="ref-numpycse" ref-type="bibr">Walt
      et al., 2011</xref>).</p>
    </list-item>
    <list-item>
      <p><bold>Built-in single objective functions for testing.</bold>
      Provides an array of single-objective functions to test
      optimizers. Includes simple variants such as the sphere function,
      up to complicated ones such as Beale and Rastrigin functions.</p>
    </list-item>
    <list-item>
      <p><bold>Plotting environment for cost and swarm animation.</bold>
      A wrapper built on top of <monospace>matplotlib</monospace>
      (<xref alt="Hunter, 2007" rid="ref-matplotlibcse" ref-type="bibr">Hunter,
      2007</xref>) to conveniently plot costs and animate swarms (both
      in 2D and 3D) to assess performance and behavior.</p>
    </list-item>
    <list-item>
      <p><bold>Hyperparameter search tools.</bold> Implements both
      random and grid search to find optimal hyperparameters for
      controlling swarm behavior.</p>
    </list-item>
    <list-item>
      <p><bold>Base classes for implementing your own optimizer.</bold>
      Provides single-objective base classes for researchers to rapidly
      prototype and implement their own optimizers.</p>
    </list-item>
  </list>
  <p>Example use-cases involve: optimization of continuous and discrete
  functions, neural network training, feature selection, forward
  kinematics, and the like. Some of these use-cases are explained, with
  accompanying code, in the
  <ext-link ext-link-type="uri" xlink:href="https://pyswarms.readthedocs.io/en/latest/">Documentation</ext-link>.
  This package is actively maintained and developed by the author with
  the help of various contributors.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-kennedyIJCNN1995">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Kennedy</surname><given-names>James</given-names></name>
          <name><surname>Eberhart</surname><given-names>Russell</given-names></name>
        </person-group>
        <article-title>Particle swarm optimization</article-title>
        <source>Proceedings of the IEEE international joint conference on neural networks</source>
        <year iso-8601-date="1995-11">1995</year><month>11</month>
      </element-citation>
    </ref>
    <ref id="ref-kennedyMHS1995">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Kennedy</surname><given-names>James</given-names></name>
          <name><surname>Eberhart</surname><given-names>Russell</given-names></name>
        </person-group>
        <article-title>A new optimizer for particle swarm theory</article-title>
        <source>Proceedings of the sixth international symposium on micromachine and human science</source>
        <year iso-8601-date="1995">1995</year>
      </element-citation>
    </ref>
    <ref id="ref-kennedySMC1997">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Kennedy</surname><given-names>James</given-names></name>
          <name><surname>Eberhart</surname><given-names>Russell</given-names></name>
        </person-group>
        <article-title>A discrete binary particle swarm optimization algorithm</article-title>
        <source>Proceedings of the IEEE international conference on systems, man, and cybernetics</source>
        <year iso-8601-date="1997">1997</year>
      </element-citation>
    </ref>
    <ref id="ref-deapJMLR2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Fortin</surname><given-names>F√©lix-Antoine</given-names></name>
          <name><surname>De Rainville</surname><given-names>Fran√ßois-Michel</given-names></name>
          <name><surname>Gardner</surname><given-names>Marc-Andr√©</given-names></name>
          <name><surname>Parizeau</surname><given-names>Marc</given-names></name>
          <name><surname>Gagn√©</surname><given-names>Christian</given-names></name>
        </person-group>
        <article-title>DEAP: Evolutionary algorithms made easy</article-title>
        <source>Journal of Machine Learning Research</source>
        <year iso-8601-date="2012-07">2012</year><month>07</month>
        <volume>13</volume>
      </element-citation>
    </ref>
    <ref id="ref-pagmo2017">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Biscani</surname><given-names>Francesco</given-names></name>
          <name><surname>Izzo</surname><given-names>Dario</given-names></name>
          <name><surname>M√§rtens</surname><given-names>Marcus</given-names></name>
        </person-group>
        <article-title>Esa/pagmo2: Pagmo 2.6</article-title>
        <year iso-8601-date="2017-11">2017</year><month>11</month>
        <uri>https://doi.org/10.5281/zenodo.1054110</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.1054110</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-numpycse">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Walt</surname><given-names>Stefan van der</given-names></name>
          <name><surname>Colbert</surname><given-names>S. Chris</given-names></name>
          <name><surname>Varoquaux</surname><given-names>Gael</given-names></name>
        </person-group>
        <article-title>The NumPy array: A structure for efficient numerical computation</article-title>
        <source>Computing in Science &amp; Engineering</source>
        <year iso-8601-date="2011-03">2011</year><month>03</month>
        <volume>13</volume>
        <pub-id pub-id-type="doi">10.1109/MCSE.2011.37</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-scipyweb">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jones</surname><given-names>Eric</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>SciPy: Open source scientific tools for Python</article-title>
        <uri>http://www.scipy.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-matplotlibcse">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hunter</surname><given-names>J. D.</given-names></name>
        </person-group>
        <article-title>Matplotlib: A 2D graphics environment</article-title>
        <source>Computing in Science &amp; Engineering</source>
        <year iso-8601-date="2007-05">2007</year><month>05</month>
        <volume>9</volume>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
