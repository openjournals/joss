<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2689</article-id>
<article-id pub-id-type="doi">10.21105/joss.02689</article-id>
<title-group>
<article-title>SIAL: A simple image analysis library for wet-lab
scientists</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-2281-6129</contrib-id>
<string-name>David R. Tyrpak</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Yaocun Li</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Siqi Lei</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>J. Andrew MacKay</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Pharmacology and Pharmaceutical Sciences,
School of Pharmacy of the University of Southern
California</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Keck School of Medicine of the University of Southern
California, Department of Ophthalmology, Roski Eye
Institute</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>University of Southern California Viterbi School of
Engineering, Biomedical Engineering</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-09-16">
<day>16</day>
<month>9</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>56</issue>
<fpage>2689</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Image Analysis</kwd>
<kwd>FIJI</kwd>
<kwd>ImageJ</kwd>
<kwd>reproducbile science</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>In many biomedical research labs, image analysis tasks are
  relatively simple but labor intensive. For example, a typical workflow
  may require human intervention to outline regions of interest or score
  phenotypes from a collection of images. Such tasks could potentially
  be partially automated with a script or machine learning, but in our
  experience, many biomedical researchers do not obtain programming
  skills. Furthermore, image analysis is typically just one of the many
  experiments that a busy researcher will employ during the course of a
  project, and so devoting time to learning programming or bespoke image
  analysis is not prioritized. These factors create an unfortunate
  situation where, in addition to being labor intensive, image analysis
  workflows may become biased and exhibit limited reproducibility.</p>
  <p>As primarily “wet-lab” scientists, we wanted to develop user
  friendly programs focused on some of the most common tasks that fellow
  wet-lab researchers encounter during image analysis. Because
  FIJI/ImageJ
  (<xref alt="Schindelin et al., 2012" rid="ref-SchindelinU003A2012" ref-type="bibr">Schindelin
  et al., 2012</xref>) is routinely used by biomedical researchers the
  world over, we developed our programs in Java and packaged them
  together as a FIJI plugin. We name this plugin SIAL: A simple image
  analysis library. SIAL aids users in human-assisted image analysis by
  providing programs for image pseudonymization, phenotype scoring, and
  ROI harvesting. Each of the three programs inside SIAL is briefly
  summarized below:</p>
  <p><bold><italic>File Randomizer</italic></bold>: This program
  provides a convenient way for researchers to pseudonymize their
  imaging data, which is a critical step in any analysis involving
  phenotype scoring or ROI selection. The program copies images in a
  specified input directory to a specified output directory, and then
  randomly renames the copied images with a three-digit number. It also
  outputs a key matching the original filenames to the renamed images
  and a details file which records time of analysis, as well as the
  specified input and output directory.</p>
  <p><bold><italic>PhenoScoreKeeper</italic></bold>: This program helps
  speed up manual phenotype scoring of images by partially automating
  score collection. Users specify an input directory and output
  directory, and the program automatically opens up each image in the
  input directory and prompts the user to enter an integer score for the
  image. It saves the scores in a csv file located in the specified
  output directory.</p>
  <p><bold><italic>ROI Recorder</italic></bold>: This program uses
  ImageJ’s built-in ROI manager to quickly harvest ROIsets and
  measurements from images in a specified input directory. The program
  opens up the input images one at a time and prompts the user to
  harvest ROIs. It then automatically saves the ROIsets and ROI
  measurements for each image to the specified output directory.</p>
  <p>Both the PhenoScoreeKeeper and ROI Recorder programs track which
  images have already been analyzed so that users can stop and start
  their analyses without losing progress. Links to videos detailing the
  use of these programs are provided in the Installation and Tutorials
  section.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Many biomedical researchers perform relatively simple image
  analysis tasks that often require human intervention. Notable examples
  include scoring phenotypes or harvesting ROIs from a directory of
  images. FIJI already provides many of the tools to carry out these
  analyses, but workflows are often compromised by user bias and limited
  reproducibility, as users may analyze data without proper blinding or
  neglect to save useful metadata. In addition, even these simple
  analyses can become labor intensive in the absence of a script which
  automates repetitive tasks while saving relevant output.</p>
  <p>SIAL’s goal is to provide simple GUI programs to help wet-lab
  researchers blind and pseudonymize their data, score phenotypes, and
  harvest ROIs. In addition, because wet-lab scientists are typically
  interrupted by multiple experiments, the PhenoScoreKeeper and ROI
  Recorder programs keep track of which images in a directory have
  already been analyzed so that researchers can easily start and stop
  their workflows without hassle.</p>
  <p>SIAL is easily installed via the ImageJ update website service,
  utilizes simple user interfaces, requires no programming experience,
  and requires no dependencies except FIJI. The individual programs
  inside SIAL can be easily integrated with workflows involving other
  FIJI plugins or with workflows employing another open source software,
  like Cell Profiler
  (<xref alt="McQuin et al., 2018" rid="ref-McQuinU003A2018" ref-type="bibr">McQuin
  et al., 2018</xref>) or QuPath
  (<xref alt="Bankhead et al., 2017" rid="ref-BankheadU003A2017" ref-type="bibr">Bankhead
  et al., 2017</xref>). For example, users may employ the File
  Randomizer to blind their data before downstream analyses with these
  programs. Alternatively, within FIJI users may harvest ROIs using the
  ROI Recorder program and then analyze the ROIs using another plugin or
  import the ROIsets into QuPath for complementary analysis.</p>
  <p>Because of its ease of use and focus on some the most common
  wet-lab image analysis tasks, SIAL is routinely used by our group and
  our close collaborators to improve the efficiency and reproducibility
  of our image analysis workflows.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The development of SIAL was supported by grants RO1 GM114839 to JAM
  and F31DK118881 to DRT. We thank Anh Truong for valuable suggestions
  in improving the plugin. In addition, we also thank the image.sc
  community for technical assistance and advice.</p>
</sec>
<sec id="installation-and-tutorials">
  <title>Installation and Tutorials</title>
  <p>First ensure you have FIJI installed on your computer:
  https://fiji.sc</p>
  <p>To download SIAL, open FIJI, go to “Help &gt; Update…” and then
  update FIJI. After FIJI is finished downloading all updates, a window
  named “ImageJ Updater” will open. Select “Manage Update Sites &gt; Add
  update site” and add this url: https://sites.imagej.net/D-tear/</p>
  <p>Be sure to check the box next to this update site to ensure the
  FIJI adds SIAL to your FIJI Plugins folder. Select “Close &gt; Apply
  changes”. FIJI will download SIAL.jar and associated dependencies.
  After successfully updating, FIJI will then ask to be closed and
  restarted. After doing this, SIAL can be accessed via the Plugins tab
  in FIJI. Note that SIAL will usually be installed towards the bottom
  of the available FIJI plugins.</p>
  <p>Links to YouTube tutorials covering the installation and use of
  SIAL:</p>
  <p>Installing SIAL: https://youtu.be/RU4B3GhVwaM</p>
  <p>How to use the File Randomizer program inside of SIAL:
  https://youtu.be/_oQLJ5gC7ls</p>
  <p>How to use the PhenoScoreKeeper inside of SIAL:
  https://youtu.be/FiaNubIDvSw</p>
  <p>How to use the ROI Recorder program inside of SIAL:
  https://youtu.be/9mTHGVeWJA0</p>
  <p>How to import FIJI ROIsets into QuPath:
  https://youtu.be/hCFrk9NJ4gk</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-SchindelinU003A2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Schindelin</surname><given-names>J.</given-names></name>
          <name><surname>Arganda-Carreras</surname><given-names>I.</given-names></name>
          <name><surname>Frise</surname><given-names>E.</given-names></name>
          <name><surname>Kaynig</surname><given-names>V.</given-names></name>
          <name><surname>Longair</surname><given-names>M.</given-names></name>
          <name><surname>Pietzsch</surname><given-names>T.</given-names></name>
          <name><surname>Preibisch</surname><given-names>S.</given-names></name>
          <name><surname>Reuden</surname><given-names>C.</given-names></name>
          <name><surname>Saalfeld</surname><given-names>S.</given-names></name>
          <name><surname>Schmid</surname><given-names>B.</given-names></name>
          <name><surname>Tinevez</surname><given-names>JY.</given-names></name>
          <name><surname>White</surname><given-names>D. J.</given-names></name>
          <name><surname>Hartenstein</surname><given-names>V.</given-names></name>
          <name><surname>Eliceir</surname><given-names>K.</given-names></name>
          <name><surname>Tomancak</surname><given-names>P.</given-names></name>
          <name><surname>Cardona</surname><given-names>A.</given-names></name>
        </person-group>
        <article-title>Fiji: an open-source platform for biological-image analysis</article-title>
        <source>Nature Methods</source>
        <year iso-8601-date="2012">2012</year>
        <volume>9</volume>
        <pub-id pub-id-type="doi">10.1038/nmeth.2019</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-BankheadU003A2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bankhead</surname><given-names>P.</given-names></name>
          <name><surname>Loughrey</surname><given-names>M. B.</given-names></name>
          <name><surname>Fernández</surname><given-names>J. A.</given-names></name>
          <name><surname>Dombrowski</surname><given-names>Y.</given-names></name>
          <name><surname>McArt</surname><given-names>D. G.</given-names></name>
          <name><surname>Dunne</surname><given-names>P. D.</given-names></name>
          <name><surname>McQuaid</surname><given-names>S.</given-names></name>
          <name><surname>Gray</surname><given-names>R. T.</given-names></name>
          <name><surname>Murray</surname><given-names>L. J.</given-names></name>
          <name><surname>Coleman</surname><given-names>H. G.</given-names></name>
          <name><surname>James</surname><given-names>J. A.</given-names></name>
          <name><surname>Salto-Tellez</surname><given-names>M.</given-names></name>
          <name><surname>Hamilton</surname><given-names>P. .W.</given-names></name>
        </person-group>
        <article-title>QuPath: Open source software for digital pathology image analysis</article-title>
        <source>Scientific Reports</source>
        <year iso-8601-date="2017">2017</year>
        <volume>7</volume>
        <pub-id pub-id-type="doi">10.1038/s41598-017-17204-5</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-McQuinU003A2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>McQuin</surname><given-names>C.</given-names></name>
          <name><surname>Goodman</surname><given-names>A.</given-names></name>
          <name><surname>Chernyshev</surname><given-names>V.</given-names></name>
          <name><surname>Kamentsky</surname><given-names>L.</given-names></name>
          <name><surname>Cimini</surname><given-names>B. A.</given-names></name>
          <name><surname>Karhohs</surname><given-names>K. W.</given-names></name>
          <name><surname>Doan</surname><given-names>M.</given-names></name>
          <name><surname>Ding</surname><given-names>L.</given-names></name>
          <name><surname>Rafelski</surname><given-names>S. M.</given-names></name>
          <name><surname>Thirstrup</surname><given-names>D.</given-names></name>
          <name><surname>Wiegraebe</surname><given-names>W.</given-names></name>
          <name><surname>Singh</surname><given-names>S.</given-names></name>
          <name><surname>Becker</surname><given-names>T.</given-names></name>
          <name><surname>Caicedo</surname><given-names>J. C.</given-names></name>
          <name><surname>Carpenter</surname><given-names>A. E.</given-names></name>
        </person-group>
        <article-title>CellProfiler 3.0: Next-generation image processing for biology</article-title>
        <source>PLOS Biology</source>
        <year iso-8601-date="2018">2018</year>
        <volume>16</volume>
        <pub-id pub-id-type="doi">10.1371/journal.pbio.2005970</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
