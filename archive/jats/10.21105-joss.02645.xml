<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2645</article-id>
<article-id pub-id-type="doi">10.21105/joss.02645</article-id>
<title-group>
<article-title>BioGears: A C++ library for whole body physiology
simulations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4711-3016</contrib-id>
<string-name>Austin Baird</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<string-name>Matthew McDaniel</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Steven A. White</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Nathan Tatum</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Lucas Marin</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Applied Research Associates, Inc. Advanced Modeling and
Simulation Systems Directorate, Raleigh, NC, USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-08-27">
<day>27</day>
<month>8</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>56</issue>
<fpage>2645</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>physiology</kwd>
<kwd>medicine</kwd>
<kwd>biology</kwd>
<kwd>pharmacology</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>BioGears is an open source, extensible human physiology
  computational engine that is designed to enhance medical education,
  research, and training technologies. BioGears is primarily written in
  C++ and uses an electric circuit analog to characterize the fluid
  dynamics of the cardiopulmonary system. As medical training
  requirements become more complex, there is a need to supplement
  traditional simulators with physiology simulations. To this end,
  BioGears provides an extensive number of validated injury models and
  related interventions that may be applied to the simulated patient. In
  addition, BioGears compiled libraries may be used for computational
  medical research to construct <italic>in-silico</italic> clinical
  trials related to patient treatment and outcomes. Variable patient
  inputs support diversity and specification in a given application. The
  engine can be used standalone or integrated with simulators, sensor
  interfaces, and models of all fidelities. The Library, and all
  associated projects, are published under the Apache 2.0 license and
  are made available through the public GitHub repository. BioGears aims
  to lower the barrier to create complex physiological simulations for a
  variety of uses and requirements.</p>
  <p>Physiological models have been used for healthcare simulation for
  many years but generally, complex models of the human physiology are
  not implemented and the patient state is preprogrammed by the
  instructor. The most prominent commercial implementation of similar
  software is Maestro, developed by Canadian Aviation Electronics,
  Inc. This product is proprietary and it is not clear to the authors
  how models are developed, implemented, and validated. Other similar
  open source projects include:
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Open-Systems-Pharmacology/PK-Sim">pk-sim</ext-link>
  the pharmacological modeling framework
  (<xref alt="Willmann et al., 2003" rid="ref-willmann2003pk" ref-type="bibr">Willmann
  et al., 2003</xref>), CellML a generic biological modeling markup
  language with applications spanning biological applications
  (<xref alt="Lloyd et al., 2004" rid="ref-lloyd2004cellml" ref-type="bibr">Lloyd
  et al., 2004</xref>), and
  <ext-link ext-link-type="uri" xlink:href="https://gitlab.kitware.com/physiology/engine">Pulse</ext-link>
  a maintained BioGears fork lacking some of the recent models but
  instead focusing on Unity VR integration. Each of these either has
  submodels that are integrated into BioGears (like a pkpd
  pharmacological model), or is a more generic implementation of
  biological modeling, like CellML. BioGears is unique in the depth of
  integrated models, while being free and open-source for the research
  community.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The fields of Medical simulation and computational medicine are
  growing in application diversity and complexity
  (<xref alt="Sweet, 2017" rid="ref-sweet2017crest" ref-type="bibr">Sweet,
  2017</xref>). Simple CPR manikins are now being replaced with complex
  robotic systems that can simulate breathing and react to the
  performance of the trainee. As these systems use cases grow, there is
  a requirement that they be supplemented with physiology modeling.
  BioGears fills this need by providing a free computational framework
  to use as a backbone to many of these robotic training manikins and
  may support other computational medicine research applications. The
  BioGears project aims to better democratize the construction of
  high-fidelity medical training by providing a sophisticated, complex
  physiology engine to developers that is easy to integrate and free to
  use.</p>
  <p>BioGears uses a lumped circuit model to describe the circulatory
  and respiratory systems. This approximation of the simulated
  cardiopulmonary system has been studied in the past and shown to
  accurately represent the hemodynamics of the arterial system by using
  resistance and compliance elements
  (<xref alt="Otto, 1899" rid="ref-otto1899grundform" ref-type="bibr">Otto,
  1899</xref>;
  <xref alt="Westerhof et al., 2009" rid="ref-westerhof2009arterial" ref-type="bibr">Westerhof
  et al., 2009</xref>). This approximation creates a system that can be
  solved for rapidly, decreasing the simulation run-time and
  computational requirements. In addition, BioGears implements models of
  diffusion and substance transport to properly simulate the gas/blood
  interface in the lungs. To handle more complex models of physiology,
  such as pharmacological models, BioGears constructs a set of
  hierarchal compartments built on top of the circuit analogs. Top-most
  compartments represents the system level data, such as the liver, with
  sub-compartments representing more granular biology of the patient
  such as the nephron, extravascular tissue, and even intracellular
  spaces. A generic data request framework, leveraging XML, is used to
  access various substance, fluid, thermal, and gas information for a
  specific compartment of the body.</p>
  <p>The BioGears engine has been used in numerous computational medical
  research applications including: models of sepsis
  (<xref alt="McDaniel, Keller, et al., 2019" rid="ref-mcdaniel2019whole" ref-type="bibr">McDaniel,
  Keller, et al., 2019</xref>), burn
  (<xref alt="McDaniel &amp; Baird, 2019" rid="ref-mcdaniel2019full" ref-type="bibr">McDaniel
  &amp; Baird, 2019</xref>), surgical planning
  (<xref alt="Potter et al., 2017" rid="ref-potter2017physiology" ref-type="bibr">Potter
  et al., 2017</xref>), and pharmacological kinetics and clearance
  (<xref alt="McDaniel, Carter, et al., 2019" rid="ref-mcdaniel2019open" ref-type="bibr">McDaniel,
  Carter, et al., 2019</xref>). For each application, the patient
  physiology and traditional interventions used to treat each injury are
  validated. Full documentation and validation for every action
  available to the user is provided through our
  <ext-link ext-link-type="uri" xlink:href="https://www.biogearsengine.com/">website</ext-link>.</p>
  <p>New drugs can be implemented in BioGears by filling in the
  appropriate physiochemical properties in the provided eXtensible
  Markup Language (XML) format. The BioGears engine handles computation
  of clearance, tissue diffusion, and patient responses based on this
  file and does not require additional C++ programming by the user. The
  software architecture of BioGears is implemented in three layers of
  abstraction to encourage easy integration and provide a robust
  application programming interface (API), see
  <xref alt="Figure 1" rid="figU003Aexample">Figure 1</xref>.</p>
  <fig>
    <caption><p>Overview of the BioGears engine software structure. The
    SE layer provides a generic physiology API and may be leveraged for
    other physiology engine implementations and/or integration with
    other computational biology
    applications.<styled-content id="figU003Aexample"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Fig1.png" xlink:title="" />
  </fig>
</sec>
<sec id="features">
  <title>Features</title>
  <p>The BioGears engine, once compiled, provides a set of libraries
  that may be included in any application that wishes to leverage a
  physiological simulation of a patient. In addition, BioGears provides
  build support and testing for all major user platforms (MacOS,
  Windows, Linux, and ARM). An instance of a BioGears engine models a
  single patient’s physiology and can be edited at the start of runtime
  or during the simulation, in the following ways:</p>
  <list list-type="bullet">
    <list-item>
      <p>The patient is defined by parameters, such as height, weight,
      systolic and diastolic pressure.</p>
    </list-item>
    <list-item>
      <p>Initialize the patient with specific chronic and/or disease
      states via conditions.</p>
    </list-item>
    <list-item>
      <p>Modify the patients external environmental conditions (weather,
      submerge in water, etc.)</p>
    </list-item>
    <list-item>
      <p>Apply various actions: acute insults/injuries, interventions,
      conscious breathing, exercise, etc.</p>
    </list-item>
    <list-item>
      <p>Interact with equipment models, such as an Anesthesia and/or an
      ECG Machine as well as an Inhaler via the action framework.</p>
    </list-item>
  </list>
  <p>Constructing a pointer to an engine, loading a patient, creating
  data requests (published to a given .csv file), and applying actions
  to the patient is easy and can be done in only a few lines of
  code:</p>
  <code language="c++">using namespace biogears;
void HowToFasciculation()
{
  // Create the engine and load the patient
  std::unique_ptr&lt;PhysiologyEngine&gt; bg = 
  CreateBioGearsEngine(&quot;HowToFasciculation.log&quot;);
  bg-&gt;GetLogger()-&gt;Info(&quot;HowToFasciculation&quot;);

  if (!bg-&gt;LoadState(&quot;./states/StandardMale@0s.xml&quot;)) {
    bg-&gt;GetLogger()-&gt;Error(&quot;Could not load state, check the error&quot;);
    return;
  }
  
  // Set data requests and create output file
  bg-&gt;GetEngineTrack()-&gt;GetDataRequestManager().
  CreateLiquidCompartmentDataRequest().
  Set(&quot;VenaCava&quot;, *Na, &quot;Molarity&quot;, AmountPerVolumeUnit::mmol_Per_L);
  bg-&gt;GetEngineTrack()-&gt;GetDataRequestManager().
  SetResultsFilename(&quot;HowToFasciculation.csv&quot;);

  // Advance Simulation time by 1 minute 
  bg-&gt;AdvanceModelTime(1.0, TimeUnit::min); 

  // Create an AirwayObstruction action with a severity of .6
  obstruction.GetSeverity().SetValue(0.6);
  bg-&gt;ProcessAction(obstruction);
  
  bg-&gt;GetLogger()-&gt;Info(&quot;Giving the patient an airway obstruction.&quot;);
  for( auto i = 0; i &lt; 60*60; --i){ 
     //Advance time for 1 hour and log EngineTracks to ouput
     bg-&gt;AdvanceModelTime(1.0, TimeUnit::s);  
     m_Engine.GetEngineTrack()-&gt;
     TrackData(m_Engine.GetSimulationTime(TimeUnit::s),m_append_data);
  }</code>
  <p>The Biogears project includes 36 complete howto’s which demonstrate
  various uses of the API and a versatile command line utility for
  running XML defined Scenarios using the CDM. Additional support can be
  found by going to
  <ext-link ext-link-type="uri" xlink:href="https://biogearsengine.com/">https://biogearsengine.com/</ext-link>,
  <ext-link ext-link-type="uri" xlink:href="https://www.biogears.dev/">https://www.biogears.dev/</ext-link>,
  or by joining our IRC
  <ext-link ext-link-type="uri" xlink:href="https://github.com/BioGearsEngine/core/wiki/Getting-access-to-our-IRC-development-channel">slack
  channel</ext-link>.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This work was made possible by cooperative agreements that were
  awarded and administered by the US Army Medical Research &amp;
  Materiel Command (USAMRMC) and the Telemedicine and Advanced
  Technology Research Center (TATRC), at Fort Detrick, MD, under
  Contract Number W81XWH‐13‐2‐0068 and W81XWH-17-C-0172. We’d like to
  acknowledge the support and guidance of Hugh Connacher, Harvey Magee,
  and Geoff Miller.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-sweet2017crest">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sweet</surname><given-names>Robert M</given-names></name>
        </person-group>
        <article-title>The CREST simulation development process: Training the next generation</article-title>
        <source>Journal of Endourology</source>
        <publisher-name>Mary Ann Liebert, Inc. 140 Huguenot Street, 3rd Floor New Rochelle, NY 10801 USA</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>31</volume>
        <issue>S1</issue>
        <uri>https://doi.org/10.1089/end.2016.0613</uri>
        <pub-id pub-id-type="doi">10.1089/end.2016.0613</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-otto1899grundform">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Otto</surname><given-names>Frank</given-names></name>
        </person-group>
        <article-title>Die grundform des arteriellen pulses</article-title>
        <source>Zeitung fur Biologie</source>
        <year iso-8601-date="1899">1899</year>
        <volume>37</volume>
        <uri>https://doi.org/10.1016/0022-2828(90)91460-O</uri>
        <pub-id pub-id-type="doi">10.1016/0022-2828(90)91460-o</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-westerhof2009arterial">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Westerhof</surname><given-names>Nico</given-names></name>
          <name><surname>Lankhaar</surname><given-names>Jan-Willem</given-names></name>
          <name><surname>Westerhof</surname><given-names>Berend E</given-names></name>
        </person-group>
        <article-title>The arterial windkessel</article-title>
        <source>Medical &amp; biological engineering &amp; computing</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2009">2009</year>
        <volume>47</volume>
        <issue>2</issue>
        <uri>https://doi.org/10.1007/s11517-008-0359-2</uri>
        <pub-id pub-id-type="doi">10.1007/s11517-008-0359-2</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mcdaniel2019open">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>McDaniel</surname><given-names>Matthew</given-names></name>
          <name><surname>Carter</surname><given-names>Jennifer</given-names></name>
          <name><surname>Keller</surname><given-names>Jonathan M</given-names></name>
          <name><surname>White</surname><given-names>Steven A</given-names></name>
          <name><surname>Baird</surname><given-names>Austin</given-names></name>
        </person-group>
        <article-title>Open source pharmacokinetic/pharmacodynamic framework: Tutorial on the BioGears engine</article-title>
        <source>CPT: Pharmacometrics &amp; Systems Pharmacology</source>
        <publisher-name>Wiley Online Library</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>8</volume>
        <issue>1</issue>
        <uri>https://doi.org/10.1002/psp4.12371</uri>
        <pub-id pub-id-type="doi">10.1002/psp4.12371</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-potter2017physiology">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Potter</surname><given-names>Lucas</given-names></name>
          <name><surname>Arikatla</surname><given-names>Sreekanth</given-names></name>
          <name><surname>Bray</surname><given-names>Aaron</given-names></name>
          <name><surname>Webb</surname><given-names>Jeff</given-names></name>
          <name><surname>Enquobahrie</surname><given-names>Andinet</given-names></name>
        </person-group>
        <article-title>Physiology informed virtual surgical planning: A case study with a virtual airway surgical planner and BioGears</article-title>
        <source>Medical imaging 2017: Image-guided procedures, robotic interventions, and modeling</source>
        <publisher-name>International Society for Optics; Photonics</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>10135</volume>
        <uri>https://doi.org/10.1117/12.2252510</uri>
        <pub-id pub-id-type="doi">10.1117/12.2252510</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mcdaniel2019whole">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>McDaniel</surname><given-names>Matthew</given-names></name>
          <name><surname>Keller</surname><given-names>Jonathan</given-names></name>
          <name><surname>White</surname><given-names>Steven</given-names></name>
          <name><surname>Baird</surname><given-names>Austin</given-names></name>
        </person-group>
        <article-title>A whole-body mathematical model of sepsis progression and treatment designed in the BioGears physiology engine</article-title>
        <source>Frontiers in physiology</source>
        <publisher-name>Frontiers</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>10</volume>
        <uri>https://doi.org/10.3389/fphys.2019.01321</uri>
        <pub-id pub-id-type="doi">10.3389/fphys.2019.01321</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mcdaniel2019full">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>McDaniel</surname><given-names>Matthew</given-names></name>
          <name><surname>Baird</surname><given-names>Austin</given-names></name>
        </person-group>
        <article-title>A full-body model of burn pathophysiology and treatment using the BioGears engine</article-title>
        <source>2019 41st annual international conference of the IEEE engineering in medicine and biology society (EMBC)</source>
        <publisher-name>IEEE</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <uri>https://doi.org/10.1109/EMBC.2019.8857686</uri>
        <pub-id pub-id-type="doi">10.1109/EMBC.2019.8857686</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-willmann2003pk">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Willmann</surname><given-names>Stefan</given-names></name>
          <name><surname>Lippert</surname><given-names>Jörg</given-names></name>
          <name><surname>Sevestre</surname><given-names>Michael</given-names></name>
          <name><surname>Solodenko</surname><given-names>Juri</given-names></name>
          <name><surname>Fois</surname><given-names>Franco</given-names></name>
          <name><surname>Schmitt</surname><given-names>Walter</given-names></name>
        </person-group>
        <article-title>PK-sim (r): A physiologically based pharmacokinetic’whole-body’model</article-title>
        <source>Biosilico</source>
        <year iso-8601-date="2003">2003</year>
        <volume>4</volume>
        <issue>1</issue>
      </element-citation>
    </ref>
    <ref id="ref-lloyd2004cellml">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Lloyd</surname><given-names>Catherine M</given-names></name>
          <name><surname>Halstead</surname><given-names>Matt DB</given-names></name>
          <name><surname>Nielsen</surname><given-names>Poul F</given-names></name>
        </person-group>
        <article-title>CellML: Its future, present and past</article-title>
        <source>Progress in biophysics and molecular biology</source>
        <publisher-name>Elsevier</publisher-name>
        <year iso-8601-date="2004">2004</year>
        <volume>85</volume>
        <issue>2-3</issue>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2004.01.004</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
