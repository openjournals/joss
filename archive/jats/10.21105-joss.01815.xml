<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1815</article-id>
<article-id pub-id-type="doi">10.21105/joss.01815</article-id>
<title-group>
<article-title>MDL Suite: A language, generator and compiler for
describing mazes</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-0363-2698</contrib-id>
<string-name>Akash Nag</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Dept. of Computer Science, M.U.C. Women’s
College</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-02-10">
<day>10</day>
<month>2</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>46</issue>
<fpage>1815</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>maze</kwd>
<kwd>markup language</kwd>
<kwd>maze generator</kwd>
<kwd>compiler</kwd>
<kwd>maze description language</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="background">
  <title>Background</title>
  <p>Mazes have fascinated people since ancient times, and extensive
  research has been undertaken to develop cutting-edge maze-solving
  algorithms that are faster or use lesser resources. The popular
  micromouse competitions since the late 1970s
  (<xref alt="Micromouse Online, 2010" rid="ref-MicromouseHistoryU003A2010" ref-type="bibr">Micromouse
  Online, 2010</xref>) have provided much of the push behind such
  research. With each year, the competition is fiercer as new
  cutting-edge maze solving algorithms are invented.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>A typical problem in describing a new maze-solving algorithm in a
  journal article is to actually generate the maze image. Although
  random maze generators are widely available, often a paper needs to
  describe a new algorithm that optimizes certain types of paths and
  loops in a maze. In such cases, we need to have precise control over
  how the maze looks. Moreover, the paths taken by a robot (or solver)
  also need to be marked out (e.g., see
  (<xref alt="Gupta &amp; Sehgal, 2014" rid="ref-GuptaU003A2014" ref-type="bibr">Gupta
  &amp; Sehgal, 2014</xref>)). To generate such images, the researcher
  needs to either painstakingly draw them or write a program to do so,
  both of which are time-consuming and tedious. Even if such images
  could be generated for journal articles, they can not be shared among
  researchers so that they may try their own solvers on them, because
  these images cannot be readily converted into program-readable mazes.
  To solve the aforesaid problems, we have developed a markup language
  called Maze Description Language (MDL), which is human-readable yet
  terse.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>Existing maze generators can be categorized into four classes:</p>
  <list list-type="order">
    <list-item>
      <p>Those which generate mazes as text (e.g. as 0s and 1s, see
      (<xref alt="maze-generator Project, 2018" rid="ref-OppenheimJU003A2018" ref-type="bibr">maze-generator
      Project, 2018</xref>)).</p>
    </list-item>
    <list-item>
      <p>Those which generate random mazes as images/PDF but have no
      solution paths marked out
      (<xref alt="Maze Generator, 2019" rid="ref-MazeGeneratorU003A2019" ref-type="bibr"><italic>Maze
      Generator</italic>, 2019</xref>).</p>
    </list-item>
    <list-item>
      <p>Those which generate maze images/document-format and have
      solution paths marked out
      (<xref alt="Guo, 2011" rid="ref-WolframU003A2011" ref-type="bibr">Guo,
      2011</xref>).</p>
    </list-item>
    <list-item>
      <p>Those which generate maze images/3D-models and can have partial
      paths marked out
      (<xref alt="Ayaz et al., 2008" rid="ref-MazeSuiteU003A2008" ref-type="bibr">Ayaz
      et al., 2008</xref>).</p>
    </list-item>
  </list>
  <p>The generators in the first category are only suitable as inputs to
  some maze-solving algorithms and can not be displayed/published in a
  paper. The second category generators generate only the mazes and no
  paths can be marked out, making them unsuitable for researchers trying
  to describe the maze-solving process undertaken by their own proposed
  algorithms in a step-by-step fashion. The third category generators
  can only mark out solution paths, but researchers often need to
  display how some algorithm can take detours, be stuck in dead-ends,
  etc. The final class of generators, where our proposed tool falls, is
  suitable for research purposes. However, the ones in this class that
  do exist currently (such as
  (<xref alt="Ayaz et al., 2008" rid="ref-MazeSuiteU003A2008" ref-type="bibr">Ayaz
  et al., 2008</xref>)) are not open-source. Moreover, the paths they
  depict in MazeViewer (part of MazeSuite) come from log-files generated
  by researchers. Therefore, the path-traversal data comes purely from
  physical experiments (with fine resolution) and are not suitable for
  simply depicting path-traversal by an algorithm. Although such
  path-data (as expected by MazeViewer) can be generated
  programmtically, it would require more work on the part of the
  researcher.</p>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p>With MDL-Suite, mazes can be easily described with minimal code,
  and visited paths can be marked out. Multiply visited paths can also
  be marked using separate colors. The mazes are fully customizable and
  a path-based description allows manual maze design very easily. The
  MDL suite contains two programs: a MDL compiler and a MDL
  generator.</p>
  <p>The <bold>MDL generator</bold> is a random maze generator that,
  given the maze specifications, generates a random maze in MDL
  format.</p>
  <p>The <bold>MDL compiler</bold> compiles code written in MDL, either
  manually written or generated using the MDL generator, into one of
  many output formats. The mazes can be compiled into images (jpg, png,
  tiff, bmp) or they can directly be converted into code for 2D arrays
  (int, boolean, char) for quick prototyping in Python or Java.</p>
  <p>The MDL suite is a command-line utility written in Java and hence,
  requires a JVM to be installed in order to use it.</p>
</sec>
<sec id="key-features">
  <title>Key Features</title>
  <list list-type="order">
    <list-item>
      <p>The maze design is fully customizable with a number of options
      for setting colors, grids, coordinates, and cell-sizes.</p>
    </list-item>
    <list-item>
      <p>Paths can be described minimally with a number of shorthands
      available, useful for manual maze design. Alternately, mazes can
      also be described row-wise, useful for algorithmically generated
      mazes.</p>
    </list-item>
    <list-item>
      <p>Both generation and compilation commands require no complicated
      options or arguments except the input files and are therefore,
      very easy to use. Furthermore, both tools support multiple maze
      generation/compilation with a single command.</p>
    </list-item>
    <list-item>
      <p>The MDL-format files are small text files and hence can be
      easily shared among researchers for collaboration. They can also
      be edited and/or converted to Java/Python code, or images using
      only a text-editor.</p>
    </list-item>
    <list-item>
      <p>Research articles often require resizing images for better
      fit/placement and adjusting maze sizes (and hence image
      resolution) is quick and easy.</p>
    </list-item>
    <list-item>
      <p>Multiple paths can be marked out in separate colors, and even
      sprites (images) can be used for marking those paths or the
      current position of the solver.</p>
    </list-item>
  </list>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>Below we see a manually generated maze with only 12 lines of MDL
  code (and compiled with the MDL compiler into
  <monospace>png</monospace>):</p>
  <fig>
    <caption><p>Figure-1</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figure1.png" xlink:title="" />
  </fig>
  <p>The figure shows 2 separate paths taken by the solver (shown in
  blue and green) as well as the current position of the solver (shown
  in red). The paths and markers shown above are very useful in papers
  describing the progress of a maze-solver during its course of
  exploring the maze. Below we see a typical random 20x20 maze generated
  with the MDL generator (and then compiled using the compiler):</p>
  <fig>
    <caption><p>Figure-2</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="figure2.png" xlink:title="" />
  </fig>
</sec>
<sec id="future-scope">
  <title>Future Scope</title>
  <p>The MDL suite is open source and can be easily extended to develop
  a GUI application that provides live preview. That will make the maze
  design process extremely smooth and fast.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge Susmita Guha for her contributions to this
  project.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-GuptaU003A2014">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Gupta</surname><given-names>Bhawna</given-names></name>
          <name><surname>Sehgal</surname><given-names>Smriti</given-names></name>
        </person-group>
        <article-title>Survey on techniques used in autonomous maze solving robot</article-title>
        <source>2014 5th International Conference-Confluence The Next Generation Information Technology Summit (Confluence)</source>
        <publisher-name>IEEE</publisher-name>
        <year iso-8601-date="2014">2014</year>
        <pub-id pub-id-type="doi">10.1109/CONFLUENCE.2014.6949354</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-MicromouseHistoryU003A2010">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <string-name>Micromouse Online</string-name>
        </person-group>
        <article-title>History</article-title>
        <year iso-8601-date="2010">2010</year>
        <uri>http://www.micromouseonline.com/micromouse-book/history/</uri>
      </element-citation>
    </ref>
    <ref id="ref-OppenheimJU003A2018">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <string-name>maze-generator Project</string-name>
        </person-group>
        <article-title>maze-generator</article-title>
        <year iso-8601-date="2018">2018</year>
        <uri>https://github.com/oppenheimj/maze-generator/</uri>
      </element-citation>
    </ref>
    <ref id="ref-MazeGeneratorU003A2019">
      <element-citation publication-type="webpage">
        <article-title>Maze generator</article-title>
        <year iso-8601-date="2019">2019</year>
        <uri>http://www.mazegenerator.net/</uri>
      </element-citation>
    </ref>
    <ref id="ref-WolframU003A2011">
      <element-citation publication-type="webpage">
        <person-group person-group-type="author">
          <name><surname>Guo</surname><given-names>Cong</given-names></name>
        </person-group>
        <article-title>Maze Generator and Solver - Wolfram Demonstrations Project</article-title>
        <year iso-8601-date="2011">2011</year>
        <uri>https://demonstrations.wolfram.com/MazeGeneratorAndSolver/</uri>
      </element-citation>
    </ref>
    <ref id="ref-MazeSuiteU003A2008">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Ayaz</surname><given-names>Hasan</given-names></name>
          <name><surname>Allen</surname><given-names>Sarah L</given-names></name>
          <name><surname>Platek</surname><given-names>Steven M</given-names></name>
          <name><surname>Onaral</surname><given-names>Banu</given-names></name>
        </person-group>
        <article-title>Maze suite 1.0: A complete set of tools to prepare, present, and analyze navigational and spatial cognitive neuroscience experiments</article-title>
        <source>Behavior Research Methods</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2008">2008</year>
        <volume>40</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.3758/BRM.40.1.353</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
