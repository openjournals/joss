<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2169</article-id>
<article-id pub-id-type="doi">10.21105/joss.02169</article-id>
<title-group>
<article-title>Matching: A Python library for solving matching
games</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-3788-7691</contrib-id>
<string-name>Henry Wilde</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4245-0638</contrib-id>
<string-name>Vincent Knight</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9166-298X</contrib-id>
<string-name>Jonathan Gillard</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>School of Mathematics, Cardiff University</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>5</volume>
<issue>48</issue>
<fpage>2169</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>mathematics</kwd>
<kwd>economics</kwd>
<kwd>computer science</kwd>
<kwd>game theory</kwd>
<kwd>stability</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Matching games allow for the allocation of resources and
  partnerships in a fair way. Typically, a matching game is defined by
  two sets of players that each have preferences over at least some of
  the elements of the other set. The objective of the game is then to
  find a mapping between the sets of players in which everyone is
  <italic>happy enough</italic> with their match.</p>
  <p>One of the most ubiquitous matching games is the Stable Marriage
  Problem (SM). In SM, there are two distinct player sets of size
  <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>:
  a set of suitors <inline-formula><alternatives>
  <tex-math><![CDATA[S]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>S</mml:mi></mml:math></alternatives></inline-formula>
  and a set of reviewers <inline-formula><alternatives>
  <tex-math><![CDATA[R]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>R</mml:mi></mml:math></alternatives></inline-formula>.
  Each suitor must strictly rank all of the reviewers, and vice versa.
  This arrangement of suitors, reviewers, and their preferences is
  called a game of size <inline-formula><alternatives>
  <tex-math><![CDATA[N]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>N</mml:mi></mml:math></alternatives></inline-formula>
  (<xref alt="Gale &amp; Shapley, 1962" rid="ref-gale1962" ref-type="bibr">Gale
  &amp; Shapley, 1962</xref>).</p>
  <p>In SM, a matching is any bijection <inline-formula><alternatives>
  <tex-math><![CDATA[M]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>M</mml:mi></mml:math></alternatives></inline-formula>
  between <inline-formula><alternatives>
  <tex-math><![CDATA[S]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>S</mml:mi></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[R]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>R</mml:mi></mml:math></alternatives></inline-formula>,
  and it is considered to be stable (i.e. no one has a reason to modify
  their current match) if it contains no blocking pairs. A blocking pair
  is defined as any pair <inline-formula><alternatives>
  <tex-math><![CDATA[(s, r) \in S \times R]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo>×</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  that would rather be matched to one another than their current match.
  This definition differs between matching games but the spirit is the
  same in that a pair blocks a matching if their envy is mutually
  rational. Irrational envy would be where one player wishes to be
  matched to another over their current match but the other player does
  not (or cannot) reciprocate.</p>
  <p>Consider the game of size three shown in Figure
  <xref alt="1" rid="figU003Asm_matching">1</xref> as an edgeless graph
  with suitors on the left and reviewers on the right. Beside each
  vertex is the name of the player and their associated ranking of the
  complementary set’s elements.</p>
  <fig>
    <caption><p>A game of size
    three.<styled-content id="figU003Asm_matching"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="img/sm_matching.pdf" xlink:title="" />
  </fig>
  <p>Gale &amp; Shapley
  (<xref alt="1962" rid="ref-gale1962" ref-type="bibr">1962</xref>)
  presented an algorithm for finding a unique, stable and suitor-optimal
  matching to any instance of SM. The matching this algorithm produces
  is shown in Figure <xref alt="2" rid="figU003Asm_stable">2</xref>.</p>
  <fig>
    <caption><p>A stable, suitor-optimal
    solution.<styled-content id="figU003Asm_stable"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="pdf" xlink:href="img/sm_stable.pdf" xlink:title="" />
  </fig>
  <p>Using Matching, this matching can be computed as follows:</p>
  <code language="python">&gt;&gt;&gt; from matching.games import StableMarriage
&gt;&gt;&gt; suitor_preferences = {
...     &quot;A&quot;: [&quot;D&quot;, &quot;E&quot;, &quot;F&quot;], &quot;B&quot;: [&quot;D&quot;, &quot;F&quot;, &quot;E&quot;], &quot;C&quot;: [&quot;F&quot;, &quot;D&quot;, &quot;E&quot;]
... }
&gt;&gt;&gt; reviewer_preferences = {
...     &quot;D&quot;: [&quot;B&quot;, &quot;C&quot;, &quot;A&quot;], &quot;E&quot;: [&quot;A&quot;, &quot;C&quot;, &quot;B&quot;], &quot;F&quot;: [&quot;C&quot;, &quot;B&quot;, &quot;A&quot;]
... }
&gt;&gt;&gt; game = StableMarriage.create_from_dictionaries(
...     suitor_preferences, reviewer_preferences
... )
&gt;&gt;&gt; game.solve()
{A: E, B: D, C: F}
  </code>
  <p>While it is relatively easy to find solutions to games like this
  with pen and paper, instances of other matching games tend to have
  more players than this and require the use of software to be solved in
  reasonable time.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Matching games have applications in many fields where relationships
  between rational agents must be managed. Some example applications
  include: being able to inform on healthcare finance policy
  (<xref alt="Agarwal, 2017" rid="ref-agar2017" ref-type="bibr">Agarwal,
  2017</xref>); helping to reduce the complexity of automated wireless
  communication networks
  (<xref alt="Bayat et al., 2016" rid="ref-baya2016" ref-type="bibr">Bayat
  et al., 2016</xref>); and education infrastructure
  (<xref alt="Chiarandini et al., 2019" rid="ref-chia2019" ref-type="bibr">Chiarandini
  et al., 2019</xref>). Thus, having access to software implementations
  of algorithms that are able to solve such games is essential.</p>
  <p>The only current adversary to Matching is MatchingR
  (<xref alt="Tilly &amp; Janetos, 2018" rid="ref-till2018" ref-type="bibr">Tilly
  &amp; Janetos, 2018</xref>). MatchingR is a package written in C++
  with an R interface and its content overlaps well with that of
  Matching. However, the lack of a Python interface makes it less
  relevant to researchers and other users as Python’s popularity grows
  both in academia and industry.</p>
  <p>Matching is a Python library that relies on one core library from
  the standard scientific Python stack – NumPy
  (<xref alt="Oliphant, 2006--" rid="ref-numpy" ref-type="bibr">Oliphant,
  2006--</xref>) – that currently implements algorithms for four types
  of matching games:</p>
  <list list-type="bullet">
    <list-item>
      <p>the stable marriage problem (SM)
      (<xref alt="Gale &amp; Shapley, 1962" rid="ref-gale1962" ref-type="bibr">Gale
      &amp; Shapley, 1962</xref>);</p>
    </list-item>
    <list-item>
      <p>the hospital-resident assignment problem (HR)
      (<xref alt="Gale &amp; Shapley, 1962" rid="ref-gale1962" ref-type="bibr">Gale
      &amp; Shapley, 1962</xref>;
      <xref alt="Roth, 1984" rid="ref-roth1984" ref-type="bibr">Roth,
      1984</xref>);</p>
    </list-item>
    <list-item>
      <p>the student-project allocation problem (SA)
      (<xref alt="Abraham et al., 2007" rid="ref-abra2007" ref-type="bibr">Abraham
      et al., 2007</xref>);</p>
    </list-item>
    <list-item>
      <p>the stable roommates problem (SR)
      (<xref alt="Irving, 1985" rid="ref-irvi1985" ref-type="bibr">Irving,
      1985</xref>).</p>
    </list-item>
  </list>
  <p>MatchingR implements all of these except SA but also implements an
  algorithm for the indivisible goods trading problem.</p>
  <p>In addition to this, Matching has been developed to a high degree
  of best practice in research software development
  (<xref alt="Jiménez et al., 2017" rid="ref-jime2017" ref-type="bibr">Jiménez
  et al., 2017</xref>), and is thoroughly documented:
  <ext-link ext-link-type="uri" xlink:href="https://matching.readthedocs.io">matching.readthedocs.io</ext-link>.
  The documentation has been written to maximise its effect as a
  resource for learning about matching games as well as for the software
  itself. Furthermore, the software is automatically tested using
  example, integration, and property-based unit tests with 100%
  coverage. The current version of Matching has also been archived on
  Zenodo
  (<xref alt="The Matching library developers, 2020" rid="ref-matching" ref-type="bibr">The
  Matching library developers, 2020</xref>); as has all of the data used
  in the documentation tutorials.</p>
  <p>Matching has been designed to be used as a research tool and to aid
  in the education of game theory. It is currently being used by a
  number of undergraduate students and postgraduate researchers in
  universities around the world, and has been used to massively
  streamline the final year project allocation process for one of the
  largest schools at Cardiff University (as an instance of SA).
  Furthermore, Matching proved to be instrumental in the practical
  implementation of a novel initialisation method for a categoric
  clustering algorithm
  (<xref alt="Wilde et al., 2020" rid="ref-wild2020" ref-type="bibr">Wilde
  et al., 2020</xref>). With Matching being written in Python, this tool
  is widely accessible by programmers and non-programmers alike as a
  readable, portable, and reproducible piece of software.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-abra2007">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Abraham</surname><given-names>David J.</given-names></name>
          <name><surname>Irving</surname><given-names>Robert W.</given-names></name>
          <name><surname>Manlove</surname><given-names>David F.</given-names></name>
        </person-group>
        <article-title>Two algorithms for the student-project allocation problem</article-title>
        <source>Journal of Discrete Algorithms</source>
        <year iso-8601-date="2007">2007</year>
        <volume>5</volume>
        <issue>1</issue>
        <issn>1570-8667</issn>
        <pub-id pub-id-type="doi">10.1016/j.jda.2006.03.006</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-agar2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Agarwal</surname><given-names>Nikhil</given-names></name>
        </person-group>
        <article-title>Policy analysis in matching markets</article-title>
        <source>American Economic Review</source>
        <year iso-8601-date="2017">2017</year>
        <volume>107</volume>
        <issue>5</issue>
        <pub-id pub-id-type="doi">10.1257/aer.p20171112</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-baya2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bayat</surname><given-names>Siavash</given-names></name>
          <name><surname>Li</surname><given-names>Yonghui</given-names></name>
          <name><surname>Song</surname><given-names>Lingyang</given-names></name>
          <name><surname>Han</surname><given-names>Zhu</given-names></name>
        </person-group>
        <article-title>Matching theory: Applications in wireless communications</article-title>
        <source>IEEE Signal Processing Magazine</source>
        <year iso-8601-date="2016-11">2016</year><month>11</month>
        <volume>33</volume>
        <pub-id pub-id-type="doi">10.1109/MSP.2016.2598848</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-chia2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Chiarandini</surname><given-names>Marco</given-names></name>
          <name><surname>Fagerberg</surname><given-names>Rolf</given-names></name>
          <name><surname>Gualandi</surname><given-names>Stefano</given-names></name>
        </person-group>
        <article-title>Handling preferences in student-project allocation</article-title>
        <source>Annals of Operations Research</source>
        <year iso-8601-date="2019-04">2019</year><month>04</month>
        <volume>275</volume>
        <issue>1</issue>
        <issn>1572-9338</issn>
        <pub-id pub-id-type="doi">10.1007/s10479-017-2710-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-irvi1985">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Irving</surname><given-names>Robert W.</given-names></name>
        </person-group>
        <article-title>An efficient algorithm for the stable roommates problem</article-title>
        <source>Journal of Algorithms</source>
        <year iso-8601-date="1985">1985</year>
        <volume>6</volume>
        <issue>4</issue>
        <issn>0196-6774</issn>
        <pub-id pub-id-type="doi">10.1016/0196-6774(85)90033-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gale1962">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Gale</surname><given-names>D.</given-names></name>
          <name><surname>Shapley</surname><given-names>L. S.</given-names></name>
        </person-group>
        <article-title>College admissions and the stability of marriage</article-title>
        <source>The American Mathematical Monthly</source>
        <publisher-name>Mathematical Association of America</publisher-name>
        <year iso-8601-date="1962">1962</year>
        <volume>69</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.2307/2312726</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-jime2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Jiménez</surname><given-names>Rafael C</given-names></name>
          <name><surname>Kuzak</surname><given-names>Mateusz</given-names></name>
          <name><surname>Alhamdoosh</surname><given-names>Monther</given-names></name>
          <name><surname>Barker</surname><given-names>Michelle</given-names></name>
          <name><surname>Batut</surname><given-names>Bérénice</given-names></name>
          <name><surname>Borg</surname><given-names>Mikael</given-names></name>
          <name><surname>Capella-Gutierrez</surname><given-names>Salvador</given-names></name>
          <name><surname>Chue Hong</surname><given-names>Neil</given-names></name>
          <name><surname>Cook</surname><given-names>Martin</given-names></name>
          <name><surname>Corpas</surname><given-names>Manuel</given-names></name>
          <name><surname>Flannery</surname><given-names>Madison</given-names></name>
          <name><surname>Garcia</surname><given-names>Leyla</given-names></name>
          <name><surname>Gelpı́</surname><given-names>Josep Ll</given-names></name>
          <name><surname>Gladman</surname><given-names>Simon</given-names></name>
          <name><surname>Goble</surname><given-names>Carole</given-names></name>
          <name><surname>González Ferreiro</surname><given-names>Montserrat</given-names></name>
          <name><surname>Gonzalez-Beltran</surname><given-names>Alejandra</given-names></name>
          <name><surname>Griffin</surname><given-names>Philippa C</given-names></name>
          <name><surname>Grüning</surname><given-names>Björn</given-names></name>
          <name><surname>Hagberg</surname><given-names>Jonas</given-names></name>
          <name><surname>Holub</surname><given-names>Petr</given-names></name>
          <name><surname>Hooft</surname><given-names>Rob</given-names></name>
          <name><surname>Ison</surname><given-names>Jon</given-names></name>
          <name><surname>Katz</surname><given-names>Daniel S</given-names></name>
          <name><surname>Leskošek</surname><given-names>Brane</given-names></name>
          <name><surname>López Gómez</surname><given-names>Federico</given-names></name>
          <name><surname>Oliveira</surname><given-names>Luis J</given-names></name>
          <name><surname>Mellor</surname><given-names>David</given-names></name>
          <name><surname>Mosbergen</surname><given-names>Rowland</given-names></name>
          <name><surname>Mulder</surname><given-names>Nicola</given-names></name>
          <name><surname>Perez-Riverol</surname><given-names>Yasset</given-names></name>
          <name><surname>Pergl</surname><given-names>Robert</given-names></name>
          <name><surname>Pichler</surname><given-names>Horst</given-names></name>
          <name><surname>Pope</surname><given-names>Bernard</given-names></name>
          <name><surname>Sanz</surname><given-names>Ferran</given-names></name>
          <name><surname>Schneider</surname><given-names>Maria V</given-names></name>
          <name><surname>Stodden</surname><given-names>Victoria</given-names></name>
          <name><surname>Suchecki</surname><given-names>Radosław</given-names></name>
          <name><surname>SvobodováVařeková</surname><given-names>Radka</given-names></name>
          <name><surname>Talvik</surname><given-names>Harry-Anton</given-names></name>
          <name><surname>Todorov</surname><given-names>Ilian</given-names></name>
          <name><surname>Treloar</surname><given-names>Andrew</given-names></name>
          <name><surname>Tyagi</surname><given-names>Sonika</given-names></name>
          <name><surname>Gompel</surname><given-names>Maarten van</given-names></name>
          <name><surname>Vaughan</surname><given-names>Daniel</given-names></name>
          <name><surname>Via</surname><given-names>Allegra</given-names></name>
          <name><surname>Wang</surname><given-names>Xiaochuan</given-names></name>
          <name><surname>Watson-Haigh</surname><given-names>Nathan S</given-names></name>
          <name><surname>Crouch</surname><given-names>Steve</given-names></name>
        </person-group>
        <article-title>Four simple recommendations to encourage best practices in research software</article-title>
        <source>F1000Research</source>
        <year iso-8601-date="2017-06">2017</year><month>06</month>
        <volume>6</volume>
        <pub-id pub-id-type="doi">10.12688/f1000research.11407.1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-matching">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>The Matching library developers</string-name>
        </person-group>
        <article-title>Matching: v1.3</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>http://doi.org/10.5281/zenodo.3751325</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.3751325</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-numpy">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Oliphant</surname><given-names>Travis</given-names></name>
        </person-group>
        <article-title>NumPy: A guide to NumPy</article-title>
        <publisher-name>USA: Trelgol Publishing</publisher-name>
        <uri>http://www.numpy.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-roth1984">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Roth</surname><given-names>Alvin</given-names></name>
        </person-group>
        <article-title>The evolution of the labor market for medical interns and residents: A case study in game theory</article-title>
        <source>Journal of Political Economy</source>
        <year iso-8601-date="1984">1984</year>
        <volume>92</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1086/261272</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-till2018">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Tilly</surname><given-names>Jan</given-names></name>
          <name><surname>Janetos</surname><given-names>Nick</given-names></name>
        </person-group>
        <article-title>MatchingR: Matching algorithms in R and C++</article-title>
        <source>GitHub repository</source>
        <publisher-name>GitHub</publisher-name>
        <year iso-8601-date="2018">2018</year>
        <uri>https://github.com/jtilly/matchingR</uri>
      </element-citation>
    </ref>
    <ref id="ref-wild2020">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Wilde</surname><given-names>Henry</given-names></name>
          <name><surname>Knight</surname><given-names>Vincent</given-names></name>
          <name><surname>Gillard</surname><given-names>Jonathan</given-names></name>
        </person-group>
        <article-title>A novel initialisation based on hospital-resident assignment for the k-modes algorithm</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://arxiv.org/abs/2002.02701</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
