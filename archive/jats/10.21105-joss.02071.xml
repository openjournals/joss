<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2071</article-id>
<article-id pub-id-type="doi">10.21105/joss.02071</article-id>
<title-group>
<article-title>osfr: An R Interface to the Open Science
Framework</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-2542-2202</contrib-id>
<string-name>Aaron R. Wolen</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1050-6809</contrib-id>
<string-name>Chris H.J. Hartgerink</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<string-name>Ryan Hafen</string-name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<string-name>Brian G. Richards</string-name>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1227-7042</contrib-id>
<string-name>Courtney K. Soderberg</string-name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-4068-4286</contrib-id>
<string-name>Timothy P. York</string-name>
<xref ref-type="aff" rid="aff-6"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Transplant Research Institute, Department of Surgery,
University of Tennessee Health Science Center</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Liberate Science GmbH</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Department of Statistics, Purdue University</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Merkle Group Inc.</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Center for Open Science</institution>
</institution-wrap>
</aff>
<aff id="aff-6">
<institution-wrap>
<institution>Data Science Lab, Department of Human and Molecular
Genetics, Virginia Commonwealth University</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-11-27">
<day>27</day>
<month>11</month>
<year>2019</year>
</pub-date>
<volume>5</volume>
<issue>46</issue>
<fpage>2071</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>open science</kwd>
<kwd>reproducible research</kwd>
<kwd>project management</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="background">
  <title>Background</title>
  <p>Reproducible research requires effective project management
  workflows that promote consistency and facilitate transparency.
  Hallmarks of effective workflows include strategies for tracking the
  provenance of results, recording intermediate changes, conveniently
  documenting procedures, and working with collaborators without
  duplicating effort
  (<xref alt="Sandve et al., 2013" rid="ref-SandveU003A2013" ref-type="bibr">Sandve
  et al., 2013</xref>). For technically skilled researchers, the
  combination of version control software (VCS) such as git and
  cloud-based project repositories (e.g., GitHub and GitLab) enable
  highly effective workflows
  (<xref alt="Ram, 2013" rid="ref-RamU003A2013de" ref-type="bibr">Ram,
  2013</xref>) that facilitate automation and computational
  reproducibility. However, these tools have a steep learning curve,
  especially for researchers whose training is far removed from software
  development. Alternatively, the Open Science Framework (OSF) offers
  much of the same functionality through an intuitive point-and-click
  web-based interface, significantly lowering the barrier to adopting
  best practices for researchers of all skill levels, or research groups
  composed of individuals with different levels of computational
  expertise
  (<xref alt="Sullivan et al., 2019" rid="ref-SullivanU003A2019" ref-type="bibr">Sullivan
  et al., 2019</xref>). Yet the increase in accessibility comes at the
  cost of limiting opportunities for automation.
  <monospace>osfr</monospace> fills this gap for R users by allowing
  them to programmatically interact with OSF through a suite of
  functions for managing their projects and files.</p>
</sec>
<sec id="functional-overview">
  <title>Functional Overview</title>
  <p>On OSF, individual repositories are referred to as
  <italic>projects</italic> and serve as the top-level unit of content
  organization. New projects can be created with osfr using
  <monospace>osf_create_project()</monospace>, which allows you to
  specify the project’s title, provide a description, and indicate
  whether it should be private (the default) or publicly accessible.
  Every OSF project includes a cloud-based storage bucket where files
  can be stored and organized into directories. You can use
  <monospace>osf_mkdir()</monospace> to add directories and
  <monospace>osf_upload()</monospace> to populate the project with
  files. osfr supports recursively uploading nested directories, making
  it possible to easily mirror the contents of a local project on OSF.
  For existing projects and project files, osfr provides functions for
  most common file operations such as copying
  (<monospace>osf_cp()</monospace>), moving
  (<monospace>osf_mv()</monospace>), deleting
  (<monospace>osf_rm()</monospace>), and downloading
  (<monospace>osf_download()</monospace>).</p>
  <p>A key organizational feature of OSF is the ability to augment a
  project’s structure with sub-projects, which are referred to as
  <italic>components</italic> on OSF, and can be added with the
  <monospace>osf_create_component()</monospace> function. Like top-level
  projects, every component is assigned a unique URL upon creation and
  contains its own cloud-based storage bucket, activity log, wiki, and
  user permissions. This allows users to create arbitrarily nested
  projects that can easily scale to meet the needs of even large,
  multi-institutional collaborations (see the
  <ext-link ext-link-type="uri" xlink:href="https://osf.io/e81xl/" xlink:title="Reproducibility Project: Cancer Biology">Cancer
  Biology Reproducibility Project</ext-link> for a great example).
  Whatever the scale of your work, adopting a consistent structure
  across projects creates predictable expectations, facilitates
  understanding for you and your collaborators
  (<xref alt="Wilson et al., 2017" rid="ref-WilsonU003A2017" ref-type="bibr">Wilson
  et al., 2017</xref>), and makes it easier to stay organized as a
  project inevitably grows in complexity over time. Maintaining a
  consistent structure can be a challenge, especially if implemented in
  an <italic>ad hoc</italic> process, but osfr enables you to codify
  your preferred organizational structure of components and directories
  in a simple script that can be run at the outset of every new
  project.</p>
  <sec id="implementation-and-design">
    <title>Implementation and Design</title>
    <p>osfr is built on the OSF public REST API, available at
    https://developer.osf.io, and uses rOpenSci’s HTTP client, crul
    (<xref alt="Chamberlain, 2019" rid="ref-crul" ref-type="bibr">Chamberlain,
    2019</xref>), for API Communication. In order to provide an
    interface that feels natural to R users, items retrieved from the
    OSF are represented as <monospace>data.frame</monospace>-like
    objects called <monospace>osf_tbl</monospace>s. The
    <monospace>osf_tbl</monospace> class is built on top of the
    <ext-link ext-link-type="uri" xlink:href="https://tibble.tidyverse.org">tibble
    package</ext-link>
    (<xref alt="Müller &amp; Wickham, 2019" rid="ref-tibble" ref-type="bibr">Müller
    &amp; Wickham, 2019</xref>) and, like
    <ext-link ext-link-type="uri" xlink:href="https://googledrive.tidyverse.org">googledrive</ext-link>’s
    dribble class
    (<xref alt="D’Agostino McGowan &amp; Bryan, 2019" rid="ref-googledrive" ref-type="bibr">D’Agostino
    McGowan &amp; Bryan, 2019</xref>), uses a list-column to encapsulate
    JSON responses from the API. These deeply nested structures are
    rarely of interest to the end user but are essential for the
    package’s internal methods. The vast majority of osfr functions
    return <monospace>osf_tbl</monospace>s as output and expect them as
    input, so that method chaining is possible using
    <ext-link ext-link-type="uri" xlink:href="https://magrittr.tidyverse.org">magrittr</ext-link>’s
    pipe operator
    (<xref alt="Bache &amp; Wickham, 2014" rid="ref-magrittr" ref-type="bibr">Bache
    &amp; Wickham, 2014</xref>).</p>
    <p>Exported osfr functions all start with the prefix,
    <monospace>osf_</monospace>, following the
    <monospace>&lt;prefix&gt;_&lt;verb&gt;</monospace> naming convention
    used in packages like
    <ext-link ext-link-type="uri" xlink:href="https://stringr.tidyverse.org">stringr</ext-link>
    (<xref alt="Wickham, 2019" rid="ref-stringr" ref-type="bibr">Wickham,
    2019</xref>), which facilitates auto-completion in supported IDEs
    (like RStudio) and avoids namespace clashes with other packages that
    perform similar file-based operations. Where possible, we adopt the
    names of common Unix utilities that perform analogous tasks (e.g.,
    <monospace>osf_cp()</monospace>,
    <monospace>osf_mkdir()</monospace>).</p>
  </sec>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p><monospace>osfr</monospace> provides an idiomatic R interface to
  OSF (Open Science Framework, https://www.osf.io), a free and open
  source web application that is part open-access repository and part
  collaborative project management tool.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-crul">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Chamberlain</surname><given-names>Scott</given-names></name>
        </person-group>
        <source>Crul: HTTP client</source>
        <year iso-8601-date="2019">2019</year>
        <uri>https://CRAN.R-project.org/package=crul</uri>
      </element-citation>
    </ref>
    <ref id="ref-googledrive">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>D’Agostino McGowan</surname><given-names>Lucy</given-names></name>
          <name><surname>Bryan</surname><given-names>Jennifer</given-names></name>
        </person-group>
        <source>Googledrive: An interface to google drive</source>
        <year iso-8601-date="2019">2019</year>
        <uri>https://cran.r-project.org/package=googledrive</uri>
      </element-citation>
    </ref>
    <ref id="ref-magrittr">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Bache</surname><given-names>Stefan Milton</given-names></name>
          <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
        </person-group>
        <source>Magrittr: A forward-pipe operator for R</source>
        <year iso-8601-date="2014">2014</year>
        <uri>https://CRAN.R-project.org/package=magrittr</uri>
      </element-citation>
    </ref>
    <ref id="ref-RamU003A2013de">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Ram</surname><given-names>Karthik</given-names></name>
        </person-group>
        <article-title>Git can facilitate greater reproducibility and increased transparency in science</article-title>
        <source>Source code for biology and medicine</source>
        <year iso-8601-date="2013-02">2013</year><month>02</month>
        <volume>8</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1186/1751-0473-8-7</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-SandveU003A2013">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sandve</surname><given-names>Geir Kjetil</given-names></name>
          <name><surname>Nekrutenko</surname><given-names>Anton</given-names></name>
          <name><surname>Taylor</surname><given-names>James</given-names></name>
          <name><surname>Hovig</surname><given-names>Eivind</given-names></name>
        </person-group>
        <article-title>Ten simple rules for reproducible computational research</article-title>
        <source>PLOS Computational Biology</source>
        <publisher-name>Public Library of Science</publisher-name>
        <year iso-8601-date="2013-10">2013</year><month>10</month>
        <volume>9</volume>
        <issue>10</issue>
        <uri>https://doi.org/10.1371/journal.pcbi.1003285</uri>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1003285</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-tibble">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Müller</surname><given-names>Kirill</given-names></name>
          <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
        </person-group>
        <source>Tibble: Simple data frames</source>
        <year iso-8601-date="2019">2019</year>
        <uri>https://CRAN.R-project.org/package=tibble</uri>
      </element-citation>
    </ref>
    <ref id="ref-stringr">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Wickham</surname><given-names>Hadley</given-names></name>
        </person-group>
        <source>Stringr: Simple, consistent wrappers for common string operations</source>
        <year iso-8601-date="2019">2019</year>
        <uri>https://cran.r-project.org/package=stringr</uri>
      </element-citation>
    </ref>
    <ref id="ref-SullivanU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sullivan</surname><given-names>Ian</given-names></name>
          <name><surname>DeHaven</surname><given-names>Alexander</given-names></name>
          <name><surname>Mellor</surname><given-names>David</given-names></name>
        </person-group>
        <article-title>Open and reproducible research on open science framework</article-title>
        <source>Current protocols</source>
        <year iso-8601-date="2019-06">2019</year><month>06</month>
        <volume>18</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1002/cpet.32</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-WilsonU003A2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Wilson</surname><given-names>Greg</given-names></name>
          <name><surname>Bryan</surname><given-names>Jennifer</given-names></name>
          <name><surname>Cranston</surname><given-names>Karen</given-names></name>
          <name><surname>Kitzes</surname><given-names>Justin</given-names></name>
          <name><surname>Nederbragt</surname><given-names>Lex</given-names></name>
          <name><surname>Teal</surname><given-names>Tracy K.</given-names></name>
        </person-group>
        <article-title>Good enough practices in scientific computing</article-title>
        <source>PLOS Computational Biology</source>
        <publisher-name>Public Library of Science</publisher-name>
        <year iso-8601-date="2017-06">2017</year><month>06</month>
        <volume>13</volume>
        <issue>6</issue>
        <uri>https://doi.org/10.1371/journal.pcbi.1005510</uri>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005510</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
