<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1606</article-id>
<article-id pub-id-type="doi">10.21105/joss.01606</article-id>
<title-group>
<article-title>X.509-Compliant Hybrid Certificates for the Post-Quantum
Transition</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6677-2474</contrib-id>
<string-name>Nina Bindel</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6491-2250</contrib-id>
<string-name>Johannes Braun</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Luca Gladiator</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Tobias Stöckert</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-5211-2544</contrib-id>
<string-name>Johannes Wirth</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Technische Universität Darmstadt, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-07-09">
<day>9</day>
<month>7</month>
<year>2019</year>
</pub-date>
<volume>4</volume>
<issue>40</issue>
<fpage>1606</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>hybrid certificates</kwd>
<kwd>X.509</kwd>
<kwd>post quantum transition</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>We provide an X.509-standard-compliant Java implementation of
  hybrid certificates, which enable the parallel usage of two
  independent cryptographic schemes within public key infrastructures
  and related applications. This enables a stepwise transition to
  post-quantum secure and hybrid algorithms without the risk of
  incompatibility problems.</p>
</sec>
<sec id="motivation-and-statement-of-need">
  <title>Motivation and statement of need</title>
  <p>Public Key Infrastructures (PKIs) support the use of public-key
  cryptography by handling keys and providing public-key certificates.
  The most common approach is the use of hierarchical PKIs, where
  certificates are issued by Certification Authorities (CAs) according
  to the X.509 standard
  (<xref alt="Cooper et al., 2008" rid="ref-rfc5280" ref-type="bibr">Cooper
  et al., 2008</xref>). These certificates bind the key owner’s identity
  (e.g., a name) to their public key and hence, enable the
  authentication of public keys. This is a basic prerequisite for the
  use of digital signatures and public key encryption in applications
  such as e-business or e-government that require secure electronic
  communication. The most prominent example is secure Internet
  communication using the Transport Layer Security (TLS) protocol.</p>
  <p>The security of current public-key systems, e.g., RSA and elliptic
  curve cryptography, depends on the computational difficulty of
  factoring large numbers into their prime factors or computing discrete
  logarithms. These schemes are called classical in the remainder of
  this paper. While the security guarantees of classical schemes are
  sufficient today, large quantum computers could break almost all
  public-key algorithms currently used by applying Shor’s algorithm
  (<xref alt="Shor, 1994" rid="ref-Shor" ref-type="bibr">Shor,
  1994</xref>), rendering anything protected by them vulnerable to
  exploitation. Therefore, post-quantum cryptography, i.e., cryptography
  that is secure even in the presence of quantum computers, is required
  and needs to be integrated into applications.</p>
  <p>To ensure uninterrupted cryptographic security, it is important to
  begin the transition to post-quantum cryptography today. Post-quantum
  secure algorithms already exist, e.g., qTESLA
  (<xref alt="Bindel et al., 2019" rid="ref-NISTPQC-R2U003AqTESLA19" ref-type="bibr">Bindel
  et al., 2019</xref>), and can be used as substitutes for classical
  schemes. However, to facilitate the transition, the cryptographic
  infrastructure also must be adapted. One approach for a secure and
  smooth transition is the use of hybrids: multiple algorithms in
  parallel that are combined such that the hybrid scheme is secure as
  long as at least one of the parallely used algorithms is secure. For
  the post-quantum transition, a classical scheme is combined with a
  post-quantum scheme. This has two clear advantages compared to a
  direct switch to post-quantum secure algorithms: “hedging our bets”
  when the security of newer algorithms is not yet certain but the
  security of older primitives is already in question; and achieving
  security and functionality in both a post-quantum-aware and a
  backwards-compatible way with not-yet-upgraded software.</p>
  <p>Our implementation has many applications in regard to evaluation
  and testing of new cryptographic schemes. It enables (post-quantum)
  cryptography researchers and IT security practitioners to extensively
  test newly designed schemes in real world environments and to
  demonstrate the practicality of their schemes. It allows insights
  regarding competitiveness and gives valuable hints in regard to
  optimization and parameter setting. For example, a prior mock-up
  implementation was used by Bindel et al.
  (<xref alt="Bindel et al., 2017" rid="ref-10.1007U002F978-3-319-59879-6_22" ref-type="bibr">Bindel
  et al., 2017</xref>) for a first evaluation of the hybrid certificate
  approach in conjunction with the qTESLA scheme. Our software allows a
  more thorough evaluation of such schemes.</p>
</sec>
<sec id="hybrid-certificates">
  <title>Hybrid certificates</title>
  <p>Hybrid certificates
  (<xref alt="Bindel et al., 2017" rid="ref-10.1007U002F978-3-319-59879-6_22" ref-type="bibr">Bindel
  et al., 2017</xref>) are the basis for the use of hybrid cryptography.
  They are signed in parallel with two different signature schemes and
  additionally bind two independent public keys—one classical and one
  post-quantum key—to one identity. Thereby, the authentication of the
  public keys contained in the certificate is protected with the
  combined security of both signature schemes. Moreover, the secure
  parallel usage of two different schemes for authentication and key
  exchange purposes is enabled.</p>
  <p>We realize these hybrid certificates fully compliant to the X.509
  standard
  (<xref alt="Cooper et al., 2008" rid="ref-rfc5280" ref-type="bibr">Cooper
  et al., 2008</xref>). The standard signature and public-key fields of
  the X.509 certificate are used for one of the signature schemes. For
  the post-quantum transition, the standard fields are used for the
  classical scheme. This allows compatibility with clients that do not
  support hybrid signatures. The second signature scheme, using qTESLA
  as an example, is integrated using two non-critical X.509 extensions.
  One of the extensions contains the public key associated with the
  second scheme, while the other contains the second signature on the
  certified data. To fully support legacy entities in a controlled
  manner, the extension containing the second public key may optionally
  be left out. This explicitly states that the certified entity does not
  support post-quantum schemes yet, while the certificate contents
  themselves are still protected in a hybrid fashion.</p>
</sec>
<sec id="implementation-and-features">
  <title>Implementation and features</title>
  <p>We provide a Java implementation for BouncyCastle
  (<xref alt="The Legion of the Bouncy Castle, 2013" rid="ref-bouncyCastle" ref-type="bibr"><italic><named-content content-type="nocase">The
  Legion of the Bouncy Castle</named-content></italic>, 2013</xref>)
  available at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/CROSSINGTUD/bc-hybrid-certificates" xlink:title="Hybrid Certificates - Java, Bouncy Castle integration">https://github.com/CROSSINGTUD/bc-hybrid-certificates</ext-link>
  (<xref alt="Hybrid Certificates - Java, Bouncy Castle integration, 2019" rid="ref-BCHybridCert" ref-type="bibr"><italic><named-content content-type="nocase">Hybrid
  Certificates - Java, Bouncy Castle
  integration</named-content></italic>, 2019</xref>) that comprises
  generation procedures required to issue standard compliant hybrid
  certificates as well as path validation procedures for certification
  chains. Note that non-upgraded software evaluates hybrid certificates
  just as classical X.509 certificates. Therefore, full
  backwards-compatibility is provided, while falling back on the
  security of the classical signature scheme in these cases. Further
  technical details on the definition of the extensions, certificate
  generation, and path validation procedures can be found in the
  technical documentation
  (<xref alt="Gladiator, 2019" rid="ref-tecDocu" ref-type="bibr">Gladiator,
  2019</xref>).</p>
  <p>The submitted Java implementation is independent, but fully
  compatible with a C implementation for the OQS OpenSSL fork
  (<xref alt="Open Quantum Safe - software for prototyping quantum-resistant cryptography, 2019" rid="ref-OpenQuantumSafe" ref-type="bibr"><italic><named-content content-type="nocase">Open
  Quantum Safe - software for prototyping quantum-resistant
  cryptography</named-content></italic>, 2019</xref>), which integrates
  LIBOQS
  (<xref alt="Open Quantum Safe - software for prototyping quantum-resistant cryptography, 2019" rid="ref-OpenQuantumSafe" ref-type="bibr"><italic><named-content content-type="nocase">Open
  Quantum Safe - software for prototyping quantum-resistant
  cryptography</named-content></italic>, 2019</xref>), a C library for
  quantum-safe cryptographic algorithms, into OpenSSL. The C version
  also implements hybrid certificates and can be accessed at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/CROSSINGTUD/openssl-hybrid-certificates" xlink:title="Hybrid Certificates - C, OpenSSL integration">https://github.com/CROSSINGTUD/openssl-hybrid-certificates</ext-link>
  (<xref alt="Hybrid Certificates - C, OpenSSL integration, 2019" rid="ref-opensslHybridCert" ref-type="bibr"><italic><named-content content-type="nocase">Hybrid
  Certificates - C, OpenSSL integration</named-content></italic>,
  2019</xref>).</p>
  <p>Our implementation enables a stepwise transition to post-quantum
  secure and hybrid algorithms in compliance with existing standards and
  software.
  Hence, our software enables first uses and experiments with such
  algorithms in (parts of) real-life applications and systems without
  the risk of incompatibility problems due to unforeseen dependencies.
  These experiments in turn allow to identify limits and potential
  obstacles requiring adaptations for a smooth and secure
  transition.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This work has been co-funded by the DFG as part of project P1
  within the CRC 1119 CROSSING.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-rfc5280">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Cooper</surname><given-names>D.</given-names></name>
          <name><surname>Santesson</surname><given-names>S.</given-names></name>
          <name><surname>Farrell</surname><given-names>S.</given-names></name>
          <name><surname>Boeyen</surname><given-names>S.</given-names></name>
          <name><surname>Housley</surname><given-names>R.</given-names></name>
          <name><surname>Polk</surname><given-names>W.</given-names></name>
        </person-group>
        <article-title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</article-title>
        <publisher-name>Internet Engineering Task Force; RFC 5280 (Proposed Standard); IETF</publisher-name>
        <year iso-8601-date="2008-05">2008</year><month>05</month>
        <uri>http://www.ietf.org/rfc/rfc5280.txt</uri>
      </element-citation>
    </ref>
    <ref id="ref-10.1007U002F978-3-319-59879-6_22">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Bindel</surname><given-names>Nina</given-names></name>
          <name><surname>Herath</surname><given-names>Udyani</given-names></name>
          <name><surname>McKague</surname><given-names>Matthew</given-names></name>
          <name><surname>Stebila</surname><given-names>Douglas</given-names></name>
        </person-group>
        <article-title>Transitioning to a quantum-resistant public key infrastructure</article-title>
        <source>Post-quantum cryptography</source>
        <person-group person-group-type="editor">
          <name><surname>Lange</surname><given-names>Tanja</given-names></name>
          <name><surname>Takagi</surname><given-names>Tsuyoshi</given-names></name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham</publisher-loc>
        <year iso-8601-date="2017">2017</year>
        <isbn>978-3-319-59879-6</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-319-59879-6_22</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-OpenQuantumSafe">
      <element-citation>
        <article-title>Open Quantum Safe - software for prototyping quantum-resistant cryptography</article-title>
        <publisher-name>https://openquantumsafe.org/</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-opensslHybridCert">
      <element-citation>
        <article-title>Hybrid Certificates - C, OpenSSL integration</article-title>
        <publisher-name>https://github.com/CROSSINGTUD/openssl-hybrid-certificates</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-BCHybridCert">
      <element-citation>
        <article-title>Hybrid Certificates - Java, Bouncy Castle integration</article-title>
        <publisher-name>https://github.com/CROSSINGTUD/bc-hybrid-certificates</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <pub-id pub-id-type="doi">10.5281/zenodo.3364471</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-bouncyCastle">
      <element-citation>
        <article-title>The Legion of the Bouncy Castle</article-title>
        <publisher-name>https://www.bouncycastle.org/</publisher-name>
        <year iso-8601-date="2013">2013</year>
      </element-citation>
    </ref>
    <ref id="ref-tecDocu">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Gladiator</surname><given-names>Luca</given-names></name>
        </person-group>
        <article-title>Hybrid Certificates for OpenSSL</article-title>
        <publisher-name>https://github.com/CROSSINGTUD/openssl-hybrid-certificates/blob/OQS-OpenSSL_1_1_1-stable/HybridCert_technical_documentation.pdf</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-Shor">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Shor</surname><given-names>P. W.</given-names></name>
        </person-group>
        <article-title>Algorithms for quantum computation: Discrete logarithms and factoring</article-title>
        <source>Proceedings 35th annual symposium on foundations of computer science</source>
        <year iso-8601-date="1994-11">1994</year><month>11</month>
        <volume></volume>
        <issn></issn>
        <pub-id pub-id-type="doi">10.1109/SFCS.1994.365700</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-NISTPQC-R2U003AqTESLA19">
      <element-citation publication-type="report">
        <person-group person-group-type="author">
          <name><surname>Bindel</surname><given-names>Nina</given-names></name>
          <name><surname>Akleylek</surname><given-names>Sedat</given-names></name>
          <name><surname>Alkim</surname><given-names>Erdem</given-names></name>
          <name><surname>Barreto</surname><given-names>Paulo S. L. M.</given-names></name>
          <name><surname>Buchmann</surname><given-names>Johannes</given-names></name>
          <name><surname>Eaton</surname><given-names>Edward</given-names></name>
          <name><surname>Gutoski</surname><given-names>Gus</given-names></name>
          <name><surname>Kramer</surname><given-names>Juliane</given-names></name>
          <name><surname>Longa</surname><given-names>Patrick</given-names></name>
          <name><surname>Polat</surname><given-names>Harun</given-names></name>
          <name><surname>Ricardini</surname><given-names>Jefferson E.</given-names></name>
          <name><surname>Zanon</surname><given-names>Gustavo</given-names></name>
        </person-group>
        <article-title>qTESLA</article-title>
        <publisher-name>National Institute of Standards; Technology; https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/round-2/submissions/qTESLA-Round2.zip</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
