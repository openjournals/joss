<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2827</article-id>
<article-id pub-id-type="doi">10.21105/joss.02827</article-id>
<title-group>
<article-title>MiTfAT: A Python-based Analysis Tool for Molecular fMRI
Experiments.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6544-7960</contrib-id>
<string-name>Vahid S. Bokharaie</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Max Planck Institute for Biological Cybernetics, Tuebingen,
Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-10-20">
<day>20</day>
<month>10</month>
<year>2020</year>
</pub-date>
<volume>6</volume>
<issue>58</issue>
<fpage>2827</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Computational Neuroscience</kwd>
<kwd>fMRI Analysis</kwd>
<kwd>Machine Learning</kwd>
<kwd>Time-Series Analysis</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Functional Magnetic Resonance Imaging, fMRI, is a technique used in
  neuroscience to measure brain activity based on any signal that can be
  measured in an MRI scanner. Normally, fMRI is used to detect changes
  associated with blood flow, but it can also be used to detect changes
  in concentrations of molecules with different magnetic properties that
  might be directly injected into the brain of a subject.</p>
  <p>Regardless of the signal that is measured in fMRI recordings, from
  a computational point of view, fMRI recordings will result in a number
  of time-series. And then those time-series should be analyzed to find
  the answers to various questions of interest. The length of the
  time-series depends on the number of time-steps in which we have
  measured the signals, and their number depends on how-many voxels we
  have measured (a voxel is a 3-dimensional pixel or the unit of volume
  in which each fMRI signal is measured). The size of each of these
  voxels depends on the magnetic flux density of the MRI scanner,
  measured in Tesla (T). The higher the magnetic flux density, the
  smaller the voxels can be, and the higher is the spatial resolution of
  the measurements. Hence, we end up with one time-series for each of
  the voxels arranged in a 3-dimensional structure. One characteristic
  of the fMRI measurements is that while they can have a high spatial
  resolution, and while they allow us to measure brain activity not only
  in the cortex but also in deeper regions of the brain, their temporal
  resolution is not normally high. And that can provide challenges for
  researchers who need to analyze the fMRI data.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><monospace>MiTfAT</monospace> is a Python library to analyze fMRI
  data, with a focus on molecular fMRI experiments. It was primarily
  developed for the study which is presented in
  (<xref alt="Savic et al., 2019" rid="ref-savicU003A2019" ref-type="bibr">Savic
  et al., 2019</xref>).</p>
  <p>There are already a few Python packages that are used by
  researchers to pre-process the fMRI time-series and then analyze them,
  for example
  (<xref alt="Esteban et al., 2019" rid="ref-estebanU003A2019" ref-type="bibr">Esteban
  et al., 2019</xref>), and
  (<xref alt="Kent &amp; Herholz, 2019" rid="ref-kentU003A2019" ref-type="bibr">Kent
  &amp; Herholz, 2019</xref>), which focus on very specific points of
  the analysis workflow. Even a more comprehensive library such as
  NiLearn
  (<xref alt="Abraham et al., 2014" rid="ref-abraham2014machine" ref-type="bibr">Abraham
  et al., 2014</xref>), which includes various visualization
  functionalities and machine learning tools to analyze fMRI data, does
  not provide a ready-made framework to contain various information and
  measurements obtained in molecular fMRI experiments. Therefore, the
  <monospace>MiTfAT</monospace> library was developed. It can be used
  for general fMRI time-series analysis, but in particular for signals
  obtained from molecular fMRI studies, i.e., the cases in which we
  measure the changes in concentration of molecules that might have been
  directly injected into the brain. The <monospace>MiTfAT</monospace>
  library incorporates all the information and data related to an
  experiment into a Python class object called
  <monospace>fmri_dataset</monospace>. And various attributes of this
  class can be used to identify, analyze and visualize the data related
  to each experiment. Such datasets can include various MRI measurements
  of the same subject, for example, T1-weighted and FISP signals
  measured almost simultaneously. In addition, the dataset can include
  many trials in which the same set of stimuli is presented or applied
  to a subject repeatedly.</p>
  <p>The basic principle behind <monospace>MiTfAT</monospace> is that it
  imports all the relevant data of an fMRI experiment into an
  object/class of type <monospace>fmri_dataset</monospace>. Each set of
  fMRI time-series is a member of this class and is stored as a NumPy
  array. When the data is loaded into the
  <monospace>fmri_dataset</monospace> object, the raw values of the
  time-series are normalized (to the maximum value of all voxels) and
  the library uses the normalized values for further analyses unless the
  user explicitly specifies that the raw values should be used. Also,
  mean and linear approximations are also saved in separate members of
  the class. If the time-span of the recording is divided into a number
  of segments (representing different experimental conditions), mean and
  linear approximations are performed over each segment
  independently.</p>
  <p>There are various functionalities available to analyze and
  visualize the data in a number of ways. They include:</p>
  <list list-type="bullet">
    <list-item>
      <p>Clustering the time-series using K-means clustering. Clustering
      can be done based on raw or normalized values in all time-steps,
      or the mean value of each time-series or slope of a
      linear-regression passing through the time-series. If the
      time-span of the recording is divided into a number of segments,
      clustering can be done on each segment or the combination of the
      values in the segments. <monospace>MiTfAT</monospace> uses
      <monospace>scikit-learn</monospace>
      (<xref alt="Pedregosa et al., 2011" rid="ref-scikitU003A2011" ref-type="bibr">Pedregosa
      et al., 2011</xref>) for machine learning functionalities. Hence,
      K-means can be easily replaced with any other clustering algorithm
      implemented in <monospace>scikit-learn</monospace>.</p>
    </list-item>
    <list-item>
      <p>Removing voxels with a low signal to noise ratio. This is done
      using a clustering algorithm in two stages. In the first stage,
      the algorithm removes the time-series corresponding to voxels in
      which signal to noise ratio is not high enough. And in the second
      stage, the time-series corresponding to the remaining voxels are
      clustered to identify the distribution pattern of the contrast
      agent.</p>
    </list-item>
    <list-item>
      <p>Detrending. We can remove the general trends in time-series to
      make the transient changes more visible. As an example, if we
      cannot wait long enough until the concentration of our agent
      reaches the steady-state level, then transient variations in the
      signal caused by changes in experimental conditions, which is what
      we are interested in, might be obscured by such trends in the
      signal. <monospace>MiTfAT</monospace> can detrend the time-series
      and give us a signal which looks like the one we might expect in a
      steady-state condition. And then, transient changes due to
      experimental design could be quantifiable.</p>
    </list-item>
    <list-item>
      <p>Interpolation of time-series under varying conditions. Assume
      we have an experiment in which the total recording time is divided
      into 3 segments. In the second segment, we record under a
      different condition than the first and third segments. This can
      be, as an example, the occlusion of an artery that changes calcium
      concentration in the brain when the contrast agent we have
      injected into the brain binds with calcium and we want to quantify
      how the signal has changed in the second segment. In order to do
      so, we should interpolate the time-series in segment 2 based on
      values of segments 1 and 3, and then compare it with the actual
      measurements during the second segment.
      <monospace>MiTfAT</monospace> provides such a functionality out of
      the box.</p>
    </list-item>
    <list-item>
      <p>Averaging over many trials. If we repeat an experiment many
      times, then it is usually of interest to average the measurements
      over all the trials. This can be useful if each measurement is
      noisy and we want to attenuate the effects of noise by averaging.
      <monospace>MiTfAT</monospace> provides such functionality.</p>
    </list-item>
    <list-item>
      <p>Visualization. The <monospace>fmri_dataset</monospace> class
      includes various visualization functions. They include functions
      that can plot the raw, normalized, averaged, or linear
      approximations of the time-series in each voxel independently or
      as part of a plot representing all voxels in each layer of the
      fMRI mask. Also, various functions to plot centroids resulting
      from clustering algorithms and also plots to show how voxels
      corresponding to each cluster are placed in the overall mask. Such
      plots can be quite informative when we want to study the diffusion
      of a contrast agent in the brain.</p>
    </list-item>
  </list>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p><monospace>MiTfAT</monospace> repository includes a manual that
  contains many examples of the various capabilities of the library. It
  can be found
  <ext-link ext-link-type="uri" xlink:href="https://github.com/vahid-sb/MiTfAT/tree/master/docs/mitfat.pdf">here</ext-link>.</p>
  <p>There are also two scripts in the <monospace>tests</monospace>
  folder of the repository that can be found
  <ext-link ext-link-type="uri" xlink:href="https://github.com/vahid-sb/MiTfAT/tree/master/tests/">here</ext-link>,
  accompanied with sample datasets, which you can run to see sample
  outputs of the library.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-savicU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Savic</surname><given-names>Tanja</given-names></name>
          <name><surname>Gambino</surname><given-names>Giuseppe</given-names></name>
          <name><surname>Bokharaie</surname><given-names>Vahid S</given-names></name>
          <name><surname>Noori</surname><given-names>Hamid R</given-names></name>
          <name><surname>Logothetis</surname><given-names>Nikos K</given-names></name>
          <name><surname>Angelovski</surname><given-names>Goran</given-names></name>
        </person-group>
        <article-title>Early detection and monitoring of cerebral ischemia using calcium-responsive MRI probes</article-title>
        <source>Proceedings of the National Academy of Sciences</source>
        <publisher-name>National Acad Sciences</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <volume>116</volume>
        <issue>41</issue>
        <pub-id pub-id-type="doi">10.1073/pnas.1908503116</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-kentU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kent</surname><given-names>James D</given-names></name>
          <name><surname>Herholz</surname><given-names>Peer</given-names></name>
        </person-group>
        <article-title>NiBetaSeries: Task related correlations in fMRI</article-title>
        <source>Journal of Open Source Software</source>
        <year iso-8601-date="2019">2019</year>
        <volume>4</volume>
        <issue>41</issue>
        <pub-id pub-id-type="doi">10.21105/joss.01295</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-estebanU003A2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Esteban</surname><given-names>Oscar</given-names></name>
          <name><surname>Wright</surname><given-names>Jessey</given-names></name>
          <name><surname>Markiewicz</surname><given-names>Christopher J</given-names></name>
          <name><surname>Thompson</surname><given-names>William Hedley</given-names></name>
          <name><surname>Goncalves</surname><given-names>Mathias</given-names></name>
          <name><surname>Ciric</surname><given-names>Rastko</given-names></name>
          <name><surname>Blair</surname><given-names>Ross W</given-names></name>
          <name><surname>Feingold</surname><given-names>Franklin</given-names></name>
          <name><surname>Rokem</surname><given-names>Ariel</given-names></name>
          <name><surname>Ghosh</surname><given-names>Satrajit</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>NiPreps: Enabling the division of labor in neuroimaging beyond fMRIPrep</article-title>
        <publisher-name>OSF Preprints</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <pub-id pub-id-type="doi">10.31219/osf.io/ujxp6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-abraham2014machine">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Abraham</surname><given-names>Alexandre</given-names></name>
          <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
          <name><surname>Eickenberg</surname><given-names>Michael</given-names></name>
          <name><surname>Gervais</surname><given-names>Philippe</given-names></name>
          <name><surname>Mueller</surname><given-names>Andreas</given-names></name>
          <name><surname>Kossaifi</surname><given-names>Jean</given-names></name>
          <name><surname>Gramfort</surname><given-names>Alexandre</given-names></name>
          <name><surname>Thirion</surname><given-names>Bertrand</given-names></name>
          <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
        </person-group>
        <article-title>Machine learning for neuroimaging with scikit-learn</article-title>
        <source>Frontiers in neuroinformatics</source>
        <publisher-name>Frontiers</publisher-name>
        <year iso-8601-date="2014">2014</year>
        <volume>8</volume>
        <pub-id pub-id-type="doi">10.3389/fninf.2014.00014</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-scikitU003A2011">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Pedregosa</surname><given-names>Fabian</given-names></name>
          <name><surname>Varoquaux</surname><given-names>Gaël</given-names></name>
          <name><surname>Gramfort</surname><given-names>Alexandre</given-names></name>
          <name><surname>Michel</surname><given-names>Vincent</given-names></name>
          <name><surname>Thirion</surname><given-names>Bertrand</given-names></name>
          <name><surname>Grisel</surname><given-names>Olivier</given-names></name>
          <name><surname>Blondel</surname><given-names>Mathieu</given-names></name>
          <name><surname>Prettenhofer</surname><given-names>Peter</given-names></name>
          <name><surname>Weiss</surname><given-names>Ron</given-names></name>
          <name><surname>Dubourg</surname><given-names>Vincent</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>Scikit-learn: Machine learning in python</article-title>
        <source>the Journal of machine Learning research</source>
        <publisher-name>JMLR. org</publisher-name>
        <year iso-8601-date="2011">2011</year>
        <volume>12</volume>
        <pub-id pub-id-type="doi">10.5555/1953048.2078195</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
