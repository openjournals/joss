<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">904</article-id>
<article-id pub-id-type="doi">10.21105/joss.00904</article-id>
<title-group>
<article-title>Nashpy: A Python library for the computation of Nash
equilibria</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4245-0638</contrib-id>
<string-name>Vincent Knight</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-1100-1765</contrib-id>
<string-name>James Campbell</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Cardiff University, School of Mathematics, UK</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-08-13">
<day>13</day>
<month>8</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>30</issue>
<fpage>904</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>mathematics</kwd>
<kwd>economics</kwd>
<kwd>computer science</kwd>
<kwd>game theory</kwd>
<kwd>equilbrium</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Game theory is the study of strategic interactions where the
  outcomes of choice depend on the choices of all participants. A key
  solution concept in the field is that of Nash Equilibrium
  (<xref alt="Nash et al., 1950" rid="ref-nash1950equilibrium" ref-type="bibr">Nash
  et al., 1950</xref>). This solution concept corresponds to a
  coordinate at which no participant has any incentive to change their
  choice.</p>
  <p>As an example, consider the game of Rock Paper Scissors, which can
  be represented mathematically using the following matrix:</p>
  <p><disp-formula><alternatives>
  <tex-math><![CDATA[
  A=
  \begin{pmatrix}
  0  & -1 & 1  \\
  1  & 0  & -1 \\
  -1 & 1  & 0  \\
  \end{pmatrix}
  ]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mo>‚àí</mml:mo><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mo>‚àí</mml:mo><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="center"><mml:mo>‚àí</mml:mo><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="center"><mml:mn>0</mml:mn></mml:mtd></mml:mtr></mml:mtable><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></disp-formula></p>
  <p>The rows and columns correspond to the actions available: Rock,
  Paper and Scissors. A value of 1 indicates that that specific row
  beats the corresponding column and similarly a value of -1 indicates a
  loss and a 0 indicates a tie. For example,
  <inline-formula><alternatives>
  <tex-math><![CDATA[A_{21}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>A</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math></alternatives></inline-formula>
  shows that Paper (the second action) beats Rock (the first action).
  Using <monospace>Nashpy</monospace>, the equilibrium behaviour can be
  computed:</p>
  <preformat>&gt;&gt;&gt; import nashpy as nash
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; A = np.array([[0, -1, 1], [1, 0, -1], [-1, 1, 0]])
&gt;&gt;&gt; game = nash.Game(A)
&gt;&gt;&gt; for eq in game.support_enumeration():
...     print(eq)
(array([ 0.33...,  0.33...,  0.33...]), array([ 0.33...,  0.33...,  0.33...]))
  </preformat>
  <p>As expected: both players should play each action randomly (each
  with probability 1/3).</p>
  <p>Computing these equilibria for large games, where individuals have
  many strategic options available to them, requires the use of software
  implementations of known algorithms. A number of algorithms exist to
  compute these Nash equilibria, for example the Lemke-Howson algorithm
  (<xref alt="Lemke &amp; Howson, 1964" rid="ref-lemke1964equilibrium" ref-type="bibr">Lemke
  &amp; Howson, 1964</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Access to these algorithms is non trival, an example is the
  modelling of healthcare decisions
  (<xref alt="Vincent Knight et al., 2017" rid="ref-knight2017measuring" ref-type="bibr">Vincent
  Knight et al., 2017</xref>) where a bespoke theoretic result was used
  to design a specific algorithm for the computation of equilibria.
  Accessible software would make that research more straightforward as
  no new algorithm would need to be implemented.</p>
  <p>The most mature piece of software available for the computation of
  equilibria is <bold>Gambit</bold>
  (<xref alt="McKelvey et al., 2006" rid="ref-mckelvey2006gambit" ref-type="bibr">McKelvey
  et al., 2006</xref>). Gambit has a Python wrapper to its core C
  functionality however is not currently portable. For example Windows
  is not supported. There does exist a web interface with a Gambit back
  end:
  <ext-link ext-link-type="uri" xlink:href="http://gte.csc.liv.ac.uk/index/index.html#document-documentation">Game
  theory explorer</ext-link> however this is not practical for
  reproducible research.</p>
  <p><monospace>Nashpy</monospace> is a Python library with all
  dependencies being part of the standard scientific Python stack‚ÄîNumPy
  and SciPy
  (<xref alt="Jones et al., 2001" rid="ref-scipy" ref-type="bibr">Jones
  et al., 2001</xref>)‚Äîthus it is portable. For example, Windows support
  is regularly tested through a Windows continuous integration service
  (Appveyor).</p>
  <p><monospace>Nashpy</monospace> currently implements 3 algorithms for
  the computation of equilibria (currently only for 2-player games) and
  is extensively documented, including theoretic reference material on
  the algorithms:
  <ext-link ext-link-type="uri" xlink:href="http://nashpy.readthedocs.io/">nashpy.readthedocs.io</ext-link>.
  Furthermore, the software is automatically tested using a combination
  of doc (this paper is also tested), unit, integration and property
  based tests with 100% coverage.</p>
  <p>Potential limitations of <monospace>Nashpy</monospace> are due to
  the complexity of the algorithms themselves. For example, support
  enumeration enumerates all potential pairs of strategies. For
  <inline-formula><alternatives>
  <tex-math><![CDATA[n\times n]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>n</mml:mi><mml:mo>√ó</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>
  square matrices it has <inline-formula><alternatives>
  <tex-math><![CDATA[\mathcal{O}\left({2^n}^2\right)]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mstyle mathvariant="script"><mml:mi>ùí™</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>n</mml:mi></mml:msup><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mrow></mml:math></alternatives></inline-formula>
  complexity. All implementations provided in
  <monospace>Nashpy</monospace> ensure these effects are reduced: NumPy
  (<xref alt="Jones et al., 2001" rid="ref-scipy" ref-type="bibr">Jones
  et al., 2001</xref>) provides C based implementations for vectorized
  performance. Furthermore, all algorithms are generators, which ensures
  that not all equilibria must be found before one is returned. For
  example, below, an 11-by-11 game is considered and timings are shown
  for relative comparison. Using the more efficient Lemke-Howson
  algorithm
  (<xref alt="Lemke &amp; Howson, 1964" rid="ref-lemke1964equilibrium" ref-type="bibr">Lemke
  &amp; Howson, 1964</xref>), an equilibrium is found approximately 3000
  times faster.</p>
  <preformat>&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; A = np.eye(11)
&gt;&gt;&gt; game = nash.Game(A, A[::-1])
&gt;&gt;&gt; pprint(next(game.support_enumeration()))  # 2.26 s ¬± 118 ms per loop
(array([ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]),
 array([ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]))
&gt;&gt;&gt; pprint(next(game.lemke_howson_enumeration()))  # 734 ¬µs ¬± 5.27 ¬µs per loop
(array([ 0.5,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.5]),
 array([ 0.5,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.5]))
  </preformat>
  <p><monospace>Nashpy</monospace> is designed to be used by researchers
  but also students in courses in the fields of mathematics, computer
  science and/or economics. It is currently being used in a final-year
  course at Cardiff University. Due to the fact that the code is written
  entirely in Python and is open source, this makes it a positive
  teaching tool as students can read and understand the implementation
  of the algorithms. <monospace>Nashpy</monospace> has been archived to
  Zenodo
  (<xref alt="Vince Knight &amp; Baldevia, 2018" rid="ref-zenodo" ref-type="bibr">Vince
  Knight &amp; Baldevia, 2018</xref>).</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge code contributions from Ria Baldevia as well as many
  helpful discussions with Nikoleta Glynatsi.</p>
  <p>We would also like to the thank the reviewers and editor for their
  comments and suggestions which helped improve this manuscript.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-nash1950equilibrium">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Nash</surname><given-names>John F</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>Equilibrium points in n-person games</article-title>
        <source>Proceedings of the national academy of sciences</source>
        <publisher-name>USA</publisher-name>
        <year iso-8601-date="1950">1950</year>
        <volume>36</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1073/pnas.36.1.48</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-knight2017measuring">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Knight</surname><given-names>Vincent</given-names></name>
          <name><surname>Komenda</surname><given-names>Izabela</given-names></name>
          <name><surname>Griffiths</surname><given-names>Jeff</given-names></name>
        </person-group>
        <article-title>Measuring the price of anarchy in critical care unit interactions</article-title>
        <source>Journal of the Operational Research Society</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <volume>68</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1057/s41274-016-0100-8</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-lemke1964equilibrium">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Lemke</surname><given-names>Carlton E</given-names></name>
          <name><surname>Howson</surname><given-names>Joseph T</given-names><suffix>Jr</suffix></name>
        </person-group>
        <article-title>Equilibrium points of bimatrix games</article-title>
        <source>Journal of the Society for Industrial and Applied Mathematics</source>
        <publisher-name>SIAM</publisher-name>
        <year iso-8601-date="1964">1964</year>
        <volume>12</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1137/0112033</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mckelvey2006gambit">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>McKelvey</surname><given-names>Richard D</given-names></name>
          <name><surname>McLennan</surname><given-names>Andrew M</given-names></name>
          <name><surname>Turocy</surname><given-names>Theodore L</given-names></name>
        </person-group>
        <article-title>Gambit: Software tools for game theory</article-title>
        <publisher-name>Version 0.2006. 01.20</publisher-name>
        <year iso-8601-date="2006">2006</year>
      </element-citation>
    </ref>
    <ref id="ref-scipy">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Jones</surname><given-names>Eric</given-names></name>
          <name><surname>Oliphant</surname><given-names>Travis</given-names></name>
          <name><surname>Peterson</surname><given-names>Pearu</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>SciPy: Open source scientific tools for Python</article-title>
        <year iso-8601-date="2001">2001</year>
        <uri>http://www.scipy.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-zenodo">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Knight</surname><given-names>Vince</given-names></name>
          <name><surname>Baldevia</surname><given-names>Ria</given-names></name>
        </person-group>
        <article-title>Drvinceknight/nashpy: v0.0.13</article-title>
        <year iso-8601-date="2018-01">2018</year><month>01</month>
        <uri>https://doi.org/10.5281/zenodo.1163694</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.1163694</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
