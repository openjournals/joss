<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">653</article-id>
<article-id pub-id-type="doi">10.21105/joss.00653</article-id>
<title-group>
<article-title>Spiral: splitters for identifiers in source code
files</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9105-5960</contrib-id>
<string-name>Michael Hucka</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Computing and Mathematical Sciences,
California Institute of Technology, Pasadena, CA 91125,
USA</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-03-28">
<day>28</day>
<month>3</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>24</issue>
<fpage>653</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>source code mining</kwd>
<kwd>text processing</kwd>
<kwd>machine learning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><italic>Spiral</italic> is a Python package that implements
  numerous algorithms for splitting identifiers. <italic>Identifier
  splitting</italic> (also known as <italic>identifier name
  tokenization</italic>) is the task of partioning program identifiers
  such as <monospace>readUTF8stream</monospace> into component tokens:
  [<monospace>read</monospace>, <monospace>UTF8</monospace>,
  <monospace>stream</monospace>]. The need for splitting identifiers
  arises in a variety of contexts, including natural language processing
  (NLP) methods applied to source code analysis and program
  comprehension.</p>
  <p>Spiral is easy to use. Here are some examples of calling the Ronin
  splitter algorithm on inputs that would challenge simpler splitters.
  The following Python code,</p>
  <code language="python">  from spiral import ronin
  for s in [ 'mStartCData', 'nonnegativedecimaltype', 'getUtf8Octets',
             'savefileas', 'nbrOfbugs']:
      print(ronin.split(s))</code>
  <p>produces the following output:</p>
  <code language="python">  ['m', 'Start', 'C', 'Data']
  ['nonnegative', 'decimal', 'type']
  ['get', 'Utf8', 'Octets']
  ['save', 'file', 'as']
  ['nbr', 'Of', 'bugs']</code>
  <p>Spiral also includes a command-line program named
  <monospace>spiral</monospace>; it will split strings provided on the
  command line or in a file, and is useful for experimenting with
  Spiral.</p>
</sec>
<sec id="the-need-for-sophisticated-splitting-algorithms">
  <title>The need for sophisticated splitting algorithms</title>
  <p>Splitting identifiers is deceptively difficult and remains a
  research problem for which no perfect solution exists today. Even in
  cases where the input consists of identifiers that strictly follow
  conventions such as camel case, ambiguities can arise. For example, to
  split <monospace>J2SEProjectTypeProfiler</monospace> into
  [<monospace>J2SE</monospace>, <monospace>Project</monospace>,
  <monospace>Type</monospace>, <monospace>Profiler</monospace>] requires
  the reader to recognize <monospace>J2SE</monospace> as a unit. The
  task of splitting identifiers is made more difficult when there are no
  case transitions or other obvious boundaries in an identifier.</p>
  <p>Spiral provides some several basic naive splitting algorithms, such
  as a straightforward camel-case splitter, as well as more elaborate
  heuristic splitters, including a novel algorithm we call
  <italic>Ronin</italic>. Ronin uses a variety of heuristic rules,
  English dictionaries constructed using NLTK
  (<xref alt="Bird &amp; Loper, 2004" rid="ref-Bird2004-ld" ref-type="bibr">Bird
  &amp; Loper, 2004</xref>;
  <xref alt="Loper &amp; Bird, 2002" rid="ref-Loper2002-su" ref-type="bibr">Loper
  &amp; Bird, 2002</xref>) and WordNet
  (<xref alt="Fellbaum, 1998" rid="ref-Fellbaum1998-pa" ref-type="bibr">Fellbaum,
  1998</xref>;
  <xref alt="Miller, 1995" rid="ref-Miller1995-yc" ref-type="bibr">Miller,
  1995</xref>), and tables of token frequencies obtained from mining
  source code repositories. It includes a default table of term
  frequencies derived from an analysis of over 46,000 randomly selected
  software projects in GitHub that contained at least one Python source
  code file.</p>
</sec>
<sec id="splitters-available-in-spiral">
  <title>Splitters available in Spiral</title>
  <p>The following table lists the splitters implemented in Spiral at
  this time:</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="29%" />
        <col width="71%" />
      </colgroup>
      <thead>
        <tr>
          <th>Splitter name</th>
          <th>Operation</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><monospace>delimiter_split</monospace></td>
          <td>split only at characters <monospace>$</monospace>
          <monospace>~</monospace> <monospace>_</monospace>
          <monospace>.</monospace> <monospace>:</monospace>
          <monospace>/</monospace> <monospace>@</monospace></td>
        </tr>
        <tr>
          <td><monospace>digit_split</monospace></td>
          <td>split only at digits</td>
        </tr>
        <tr>
          <td><monospace>pure_camelcase_split</monospace></td>
          <td>split at forward camel case transitions (lower to upper
          case)</td>
        </tr>
        <tr>
          <td><monospace>safe_simple_split</monospace></td>
          <td>split at hard delimiter characters and forward camel case
          only; won’t split strings that don’t follow strict camel
          case</td>
        </tr>
        <tr>
          <td><monospace>simple_split</monospace></td>
          <td>split at hard delimiter characters and forward camel case,
          even if a string doesn’t follow strict camel case
          conventions</td>
        </tr>
        <tr>
          <td><monospace>elementary_split</monospace></td>
          <td>split by hard delimiters, forward camel case, and
          digits</td>
        </tr>
        <tr>
          <td><monospace>heuristic_split</monospace></td>
          <td>split by hard delimiters, forward camel case, and digits,
          but recognize special cases such as
          <monospace>utf8</monospace>, <monospace>sha256</monospace>,
          etc.</td>
        </tr>
        <tr>
          <td><italic>Samurai</italic></td>
          <td>frequency-based approach published in the literature</td>
        </tr>
        <tr>
          <td><italic>Ronin</italic></td>
          <td>frequency-based approach originally based on Samurai</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>The name “Ronin” is a play on the use of the name “Samurai”
  (<xref alt="Enslen et al., 2009" rid="ref-Enslen2009-gk" ref-type="bibr">Enslen
  et al., 2009</xref>) for their identifier splitting algorithm. The
  core loop of Ronin is based on Samurai, but substantially modified and
  extended. A goal for Ronin was to produce a splitter that had good
  performance using only a global table of token frequencies, without
  the need for an additional table of frequencies mined from the source
  code currently being analyzed. This makes Ronin usable even without
  preprocessing a code base to extract token frequencies.</p>
  <p>The name <italic>Spiral</italic> is a loose acronym based on
  “<italic>SPlitters for IdentifieRs: A Library</italic>”.</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>This material is based upon work supported by the
  <ext-link ext-link-type="uri" xlink:href="https://nsf.gov">National
  Science Foundation</ext-link> under Grant Number 1533792. Any
  opinions, findings, and conclusions or recommendations expressed in
  this material are those of the author(s) and do not necessarily
  reflect the views of the National Science Foundation.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Enslen2009-gk">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Enslen</surname><given-names>Eric</given-names></name>
          <name><surname>Hill</surname><given-names>Emily</given-names></name>
          <name><surname>Pollock</surname><given-names>Lori</given-names></name>
          <name><surname>Vijay-Shanker</surname><given-names>K.</given-names></name>
        </person-group>
        <article-title>Mining source code to automatically split identifiers for software analysis</article-title>
        <source>Proceedings of the 6th IEEE international working conference on mining software repositories (MSR’09)</source>
        <publisher-name>IEEE Press</publisher-name>
        <year iso-8601-date="2009-05">2009</year><month>05</month>
        <issn>2160-1852</issn>
        <uri>http://dx.doi.org/10.1109/MSR.2009.5069482</uri>
        <pub-id pub-id-type="doi">10.1109/MSR.2009.5069482</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Miller1995-yc">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Miller</surname><given-names>George A</given-names></name>
        </person-group>
        <article-title>WordNet: A lexical database for english</article-title>
        <source>Communications of the ACM</source>
        <publisher-name>ACM</publisher-name>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <year iso-8601-date="1995-11">1995</year><month>11</month>
        <volume>38</volume>
        <issue>11</issue>
        <issn>0001-0782</issn>
        <uri>http://doi.acm.org/10.1145/219717.219748</uri>
        <pub-id pub-id-type="doi">10.1145/219717.219748</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Fellbaum1998-pa">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Fellbaum</surname><given-names>Christiane</given-names></name>
        </person-group>
        <source>WordNet: An electronic lexical database</source>
        <publisher-name>MIT Press</publisher-name>
        <year iso-8601-date="1998">1998</year>
        <isbn>9780262061971</isbn>
        <uri>https://market.android.com/details?id=book-Rehu8OOzMIMC</uri>
      </element-citation>
    </ref>
    <ref id="ref-Loper2002-su">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Loper</surname><given-names>Edward</given-names></name>
          <name><surname>Bird</surname><given-names>Steven</given-names></name>
        </person-group>
        <article-title>NLTK: The natural language toolkit</article-title>
        <source>Proceedings of the ACL-02 workshop on effective tools and methodologies for teaching natural language processing and computational linguistics - volume 1</source>
        <publisher-name>Association for Computational Linguistics</publisher-name>
        <publisher-loc>Stroudsburg, PA, USA</publisher-loc>
        <year iso-8601-date="2002">2002</year>
        <uri>https://doi.org/10.3115/1118108.1118117</uri>
        <pub-id pub-id-type="doi">10.3115/1118108.1118117</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Bird2004-ld">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Bird</surname><given-names>Steven</given-names></name>
          <name><surname>Loper</surname><given-names>Edward</given-names></name>
        </person-group>
        <article-title>NLTK: The natural language toolkit</article-title>
        <source>Proceedings of the ACL 2004 on interactive poster and demonstration sessions</source>
        <publisher-name>Association for Computational Linguistics</publisher-name>
        <publisher-loc>Stroudsburg, PA, USA</publisher-loc>
        <year iso-8601-date="2004">2004</year>
        <uri>http://dx.doi.org/10.3115/1219044.1219075</uri>
        <pub-id pub-id-type="doi">10.3115/1219044.1219075</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
