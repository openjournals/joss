<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">1555</article-id>
<article-id pub-id-type="doi">10.21105/joss.01555</article-id>
<title-group>
<article-title>FEST-3D: Finite-volume Explicit STructured 3-Dimensional
solver</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1546-3855</contrib-id>
<string-name>Jatinder Pal Singh Sandhu</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Anant Girdhar</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Rakesh Ramakrishnan</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>R. D. Teja</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Santanu Ghosh</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Aerospace engineering, IIT Madras,
Chennai</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2019-06-14">
<day>14</day>
<month>6</month>
<year>2019</year>
</pub-date>
<volume>5</volume>
<issue>46</issue>
<fpage>1555</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>CFD</kwd>
<kwd>Turbulence/Transition modeling</kwd>
<kwd>Structured grid</kwd>
<kwd>RANS modeling</kwd>
<kwd>Higher-order method</kwd>
<kwd>FORTRAN 90</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Academic research in the mechanical- and aerospace-engineering
  communities has been aided in the last couple of decades by the
  development of open-source software packagess like OpenFoam
  (<xref alt="Weller et al., 1998" rid="ref-weller1998" ref-type="bibr">Weller
  et al., 1998</xref>) and SU2
  (<xref alt="Economon et al., 2016" rid="ref-2013stanford" ref-type="bibr">Economon
  et al., 2016</xref>).</p>
  <p><monospace>FEST-3D</monospace> is a modular CFD solver written in
  FORTRAN 90, developed with a similar motivation: to help solve
  problems of academic and engineering interest. This software is
  designed to solve the
  <ext-link ext-link-type="uri" xlink:href="https://turbmodels.larc.nasa.gov/implementrans.html">compressible
  Favre-averaged Navier-Stokes equations</ext-link> using the
  finite-volume method on block-structured grids using MPI-based
  parallelization. The modularity of the code makes it easy to implement
  a new method for flux reconstruction, or a turbulence model. It
  provides a large number of options for higher-order spatial and
  temporal discretization, along with the latest turbulence and
  transition models, which are not all available in other open-source
  CFD software. To illustrate, FEST-3D provides the latest one-equation
  <inline-formula><alternatives>
  <tex-math><![CDATA[\gamma]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>γ</mml:mi></mml:math></alternatives></inline-formula>
  transition model
  (<xref alt="Menter et al., 2015" rid="ref-2015Menter" ref-type="bibr">Menter
  et al., 2015</xref>) and zero-equation BC transition model
  (<xref alt="Cakmakcioglu et al., 2018" rid="ref-2017Caka" ref-type="bibr">Cakmakcioglu
  et al., 2018</xref>). It also provides standard turbulence models: SA
  (<xref alt="Spalart &amp; Allmaras, 1992" rid="ref-SAmodel" ref-type="bibr">Spalart
  &amp; Allmaras, 1992</xref>) and SST
  (<xref alt="Menter, 1994" rid="ref-menter1994" ref-type="bibr">Menter,
  1994</xref>), and the k-kL
  (<xref alt="Abdol-Hamid et al., 2016" rid="ref-kkl2015" ref-type="bibr">Abdol-Hamid
  et al., 2016</xref>) turbulence model. As
  <monospace>FEST-3D</monospace> uses structured grids to solve fluid
  flow problems, higher-order methods of 3rd
  (<xref alt="Van Leer, 1979" rid="ref-muscl" ref-type="bibr">Van Leer,
  1979</xref>), 4th
  (<xref alt="Colella &amp; Woodward, 1984" rid="ref-ppm" ref-type="bibr">Colella
  &amp; Woodward, 1984</xref>), and 5th
  (<xref alt="Shu, 2003" rid="ref-weno" ref-type="bibr">Shu,
  2003</xref>) order accuracy in space –– for uniform grids –– can be
  employed; this is difficult to achieve with solvers designed for
  unstructured grids and data-structures.</p>
  <p>A Python script is provided to simplify the user interface with the
  main FEST-3D code. Most of the user inputs can easily be specified in
  the first few lines of the <monospace>edit-automaton.py</monospace>
  script, as listed in the table below.</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="20%" />
        <col width="34%" />
        <col width="46%" />
      </colgroup>
      <thead>
        <tr>
          <th align="left">Variable</th>
          <th align="left">Expected Input</th>
          <th align="left">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="left">RunDir</td>
          <td align="left">String</td>
          <td align="left">Name of the run directory</td>
        </tr>
        <tr>
          <td align="left">GridDir</td>
          <td align="left">String (path)</td>
          <td align="left">Directory name having only grid files</td>
        </tr>
        <tr>
          <td align="left">NumberOfBlocks</td>
          <td align="left">Integer</td>
          <td align="left">Total number of blocks</td>
        </tr>
        <tr>
          <td align="left">CFL</td>
          <td align="left">Real Number greater than zero</td>
          <td align="left">Courant–Friedrichs–Lewy number</td>
        </tr>
        <tr>
          <td align="left">LoadLevel</td>
          <td align="left">Integer</td>
          <td align="left">Restart folder number in the
          time_directories/ directory</td>
        </tr>
        <tr>
          <td align="left">MaxIterations</td>
          <td align="left">Integer greater than zero</td>
          <td align="left">Maximum number of iteration</td>
        </tr>
        <tr>
          <td align="left">SaveIterations</td>
          <td align="left">Integer lesser than MaxIterations</td>
          <td align="left">Solution is written after every these many
          iterations</td>
        </tr>
        <tr>
          <td align="left">OutputFileFormat</td>
          <td align="left">‘vtk’ or ‘tecplot’</td>
          <td align="left">Format of the solution output file</td>
        </tr>
        <tr>
          <td align="left">OutputDataFormat</td>
          <td align="left">‘ASCII’</td>
          <td align="left">Type of the data in the output files. Only
          ASCII is supported for now</td>
        </tr>
        <tr>
          <td align="left">InputFileFormat</td>
          <td align="left">‘vtk’ or ‘tecplot’</td>
          <td align="left">Format of the solution file from which
          solution will be restarted</td>
        </tr>
        <tr>
          <td align="left">InputDataFormat</td>
          <td align="left">‘ASCII’</td>
          <td align="left">Type of the data in the restart file. Only
          ASCII is supported for now</td>
        </tr>
        <tr>
          <td align="left">Precision</td>
          <td align="left">Integer, lesser than 14 and greater than
          1</td>
          <td align="left">Data precision for residual output; not used
          for solution output</td>
        </tr>
        <tr>
          <td align="left">Purge</td>
          <td align="left">Integer</td>
          <td align="left">Number of recent solution folders to keep and
          delete others. <bold>0</bold> input will keep all the
          folders</td>
        </tr>
        <tr>
          <td align="left">ResidualWriteInterval</td>
          <td align="left">Integer greater than zero</td>
          <td align="left">Residual is written after every these many
          iterations</td>
        </tr>
        <tr>
          <td align="left">Tolerance</td>
          <td align="left">Real number and [“Mass_abs”,
          “Continuity_abs”, “Viscous_abs”, “Resnorm_abs”, “TKE_abs”,
          “Tv_abs”, “Dissipation_abs”, “Omega_abs”, “Kl_abs”,
          “Turbulent_abs”, “Resnorm_rel”, “Viscous_rel”,
          “Turublent_rel”]</td>
          <td align="left">Tolerance value and variable. The solver will
          stop once this value is achieved. List of tolerance variables
          that can be used is given in the expected input column. You
          can specify only one tolerance variable. The variable with
          <italic>rel</italic> suffix is normalized with first iteration
          residual</td>
        </tr>
        <tr>
          <td align="left">DebugLevel</td>
          <td align="left">1, 2, 3, 4, or 5</td>
          <td align="left">5-Only important information is logged, 1-All
          the information is logged, which helps in debugging. Will be
          removed in later release</td>
        </tr>
        <tr>
          <td align="left">InviscidFlux</td>
          <td align="left">‘ausm’, ‘slau’, ‘ausmUP’, or ‘ldfss0’</td>
          <td align="left">Scheme to calculate inviscid fluxes through
          cell faces</td>
        </tr>
        <tr>
          <td align="left">FaceState</td>
          <td align="left">‘none’, ‘muscl’, ‘ppm’, ‘weno’, or
          ‘wenoNM’</td>
          <td align="left">Scheme for higher-order face-state
          reconstruction</td>
        </tr>
        <tr>
          <td align="left">Limiter</td>
          <td align="left">‘1 1 1 0 0 0’ or ‘0 0 0 0 0 0’</td>
          <td align="left">Switch for limiters and pressure based
          switching when using higher order face-state reconstruction.
          Three values for I,J, and K directions; 1-&gt;on and 0-&gt;
          off</td>
        </tr>
        <tr>
          <td align="left">TurbulenceLimiter</td>
          <td align="left">‘1 1 1’ or ‘0 0 0’</td>
          <td align="left">Switch for limiters when used for
          higher-order face-state reconstruction of turbulent variables;
          1-&gt;on and 0-&gt; off</td>
        </tr>
        <tr>
          <td align="left">TurbulenceModel</td>
          <td align="left">‘none’, ‘sa’, ‘sst’, or ‘sst2003’</td>
          <td align="left">Turbulence model</td>
        </tr>
        <tr>
          <td align="left">TransitionModel</td>
          <td align="left">‘none’, ‘bc’, ‘lctm2015’</td>
          <td align="left">Transition model</td>
        </tr>
        <tr>
          <td align="left">TimeStep</td>
          <td align="left">‘l’ or ‘g ’</td>
          <td align="left">Time-step for time-integration. ‘l’ for local
          and ‘g’ for global. In case of using a global method, you can
          provide the exact value of time step here</td>
        </tr>
        <tr>
          <td align="left">TimeIntegration</td>
          <td align="left">‘none’, ‘RK2’, ‘RK4’, ‘TVDRK2’, ‘TVDRK3’,
          ‘implicit’, or ‘plusgs’</td>
          <td align="left">Method for time-integration</td>
        </tr>
        <tr>
          <td align="left">HigherOrderBC</td>
          <td align="left">0 or 1</td>
          <td align="left">Higher-order symmetry boundary condition.
          1-&gt;on and 0-&gt; off</td>
        </tr>
        <tr>
          <td align="left">NumberOfVariables</td>
          <td align="left">5</td>
          <td align="left">Total number of variables to solve. This
          number is not used in current version of solver</td>
        </tr>
        <tr>
          <td align="left">DensityInf</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream density</td>
        </tr>
        <tr>
          <td align="left">UInf</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream x-component of velocity</td>
        </tr>
        <tr>
          <td align="left">VInf</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream y-component of velocity</td>
        </tr>
        <tr>
          <td align="left">WInf</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream z-component of velocity</td>
        </tr>
        <tr>
          <td align="left">PressureInf</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream pressure</td>
        </tr>
        <tr>
          <td align="left">TurbulenceIntensity</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream turbulence intensity in
          percentage</td>
        </tr>
        <tr>
          <td align="left">ViscosityRatio</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream turbulent viscosity to laminar
          viscosity ratio</td>
        </tr>
        <tr>
          <td align="left">Intermitency</td>
          <td align="left">Real Number</td>
          <td align="left">Free-stream turbulence intermittency</td>
        </tr>
        <tr>
          <td align="left">ReferenceViscosity</td>
          <td align="left">Real Number</td>
          <td align="left">Reference laminar viscosity</td>
        </tr>
        <tr>
          <td align="left">ViscosityLaw</td>
          <td align="left">‘sutherland_law’ or ‘constant’</td>
          <td align="left">Method used for viscosity calculation</td>
        </tr>
        <tr>
          <td align="left">ReferenceTemp</td>
          <td align="left">Real Number</td>
          <td align="left">Reference temperature for viscosity
          calculation usiing Sutherland’s law</td>
        </tr>
        <tr>
          <td align="left">SutherlandTemp</td>
          <td align="left">Real Number</td>
          <td align="left">Sutherland temperature</td>
        </tr>
        <tr>
          <td align="left">PrandtlNumbers</td>
          <td align="left">Two real numbers</td>
          <td align="left">Prandtl number and turbulent Prandtl
          number</td>
        </tr>
        <tr>
          <td align="left">SpecificHeatRatio</td>
          <td align="left">Real number</td>
          <td align="left">Specific heat ratio</td>
        </tr>
        <tr>
          <td align="left">GasConstant</td>
          <td align="left">Real</td>
          <td align="left">Specific gas Constant</td>
        </tr>
        <tr>
          <td align="left">OutputControl[‘Out’]</td>
          <td align="left">[ “Velocity” , “Density” , “Pressure” , “Mu”
          , “Mu_t” , “TKE” , “Omega” , “kL” , “tv” , “Wall_distance” ,
          “Resnorm”]</td>
          <td align="left">Variables to write in the output file.
          Specify the only the ones required. You do not need to specify
          the entire list</td>
        </tr>
        <tr>
          <td align="left">OutputControl[‘In’]</td>
          <td align="left">[“Velocity” ,“Density” ,“Pressure”
          ,“viscosity” ,“TKE” ,“Omega” ,“kL” ,“tv”]</td>
          <td align="left">Variables to read in case of restrart.
          Specify all the variable in the restart file</td>
        </tr>
        <tr>
          <td align="left">ResidualControl[‘Out’]</td>
          <td align="left">Expected inputs are from the list of
          “Tolerance” variables</td>
          <td align="left">Residual to write in the resnorm file.
          Specify only the ones you want to write and you do not need to
          specify the entire list</td>
        </tr>
        <tr>
          <td align="left">BoundaryConditions</td>
          <td align="left">[-3, -4, -5, -8, -6, -6] where
          &lt;-1:‘SUPERSONIC INFLOW (DIRICHLET)’, -2:‘SUPERSONIC OUTFLOW
          (EXTRAPOLATION)’, -3:‘SUBSONIC INFLOW (MASS-FLOW RATE FIXED)’,
          -4:‘SUBSONIC OUTFLOW (PRESSURE FIXED)’, -5:‘WALL (NO SLIP)’,
          -6:‘SYMMETRY’, -7:‘POLE’, -8:‘FAR-FIELD’, -11:‘TOTAL
          INLET’&gt;</td>
          <td align="left">Boundary conditions used for the six face of
          a block</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</sec>
<sec id="higher-order-methods">
  <title>Higher-order methods</title>
  <p>Most modern CFD software is based on unstructured-grid data
  structures and are limited to a maximum of 3rd order of accuracy in
  space
  <ext-link ext-link-type="uri" xlink:href="https://cfd.direct/openfoam/user-guide/v6-fvschemes/">(Check
  OpenFoam v6 User Guide: 4.4)</ext-link>, as it is computationally
  expensive and difficult to implement higher-order methods in this
  case. <monospace>FEST-3D</monospace> uses structured-grid data
  structures and provides higher than second-order methods like MUSCL
  (3rd-order accurate in space), PPM (4th-order accurate in space) and
  WENO (5th-order accurate in space), at least for uniform grid spacing.
  Such higher-order methods can especially be useful in academic
  research.</p>
</sec>
<sec id="past-and-current-applications">
  <title>Past and current applications</title>
  <p><monospace>FEST-3D</monospace> is suitable for academic research
  and can also be used in industrial research. It has been used for
  obtaining simulations to investigate the effect of slope limiters on
  the convergence of the solution of smooth turbulent flows while using
  higher-order
  methods(<xref alt="Singh Sandhu et al., 2018" rid="ref-2018jatinder" ref-type="bibr">Singh
  Sandhu et al., 2018</xref>). Currently, <monospace>FEST-3D</monospace>
  is being used for the development of a new local-correlation-based
  transition model and a 3D immersed-boundary method for compressible
  flows. FEST-3D is also being used for teaching in the department of
  Aerospace Engineering, IIT Madras.</p>
</sec>
<sec id="acknowledgement">
  <title>Acknowledgement</title>
  <p>We acknowledge the open source projects which we have used in the
  FEST-3D code.
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SethMMorton">Seth
  Mortron’s</ext-link> template project, available on GitHub as
  <ext-link ext-link-type="uri" xlink:href="https://github.com/SethMMorton/cmake_fortran_template">cmake_fortran_template</ext-link>,
  has been used to build the code. To automatically generate
  documentation,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Fortran-FOSS-Programmers">Fortran
  FOSS Programmers Group’s</ext-link> document generator,
  <ext-link ext-link-type="uri" xlink:href="https://github.com/Fortran-FOSS-Programmers/ford">FORD</ext-link>,
  has been used.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-2018jatinder">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Singh Sandhu</surname><given-names>Jatinder Pal</given-names></name>
          <name><surname>Girdhar</surname><given-names>Anant</given-names></name>
          <name><surname>Ramakrishnan</surname><given-names>Rakesh</given-names></name>
          <name><surname>Teja</surname><given-names>RD</given-names></name>
          <name><surname>Ghosh</surname><given-names>Santanu</given-names></name>
        </person-group>
        <article-title>A convergence study of solutions using two two-equation RANS turbulence models on a finite volume solver for structured grids</article-title>
        <source>2018 AIAA Fluid Dynamics Conference</source>
        <year iso-8601-date="2018">2018</year>
        <pub-id pub-id-type="doi">10.2514/6.2018-3859</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-menter1994">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Menter</surname><given-names>Florian R</given-names></name>
        </person-group>
        <article-title>Two-equation eddy-viscosity turbulence models for engineering applications</article-title>
        <source>AIAA Journal</source>
        <year iso-8601-date="1994">1994</year>
        <volume>32</volume>
        <issue>8</issue>
        <pub-id pub-id-type="doi">10.2514/3.12149</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-kkl2015">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Abdol-Hamid</surname><given-names>Khaled S.</given-names></name>
          <name><surname>Carlson</surname><given-names>Jan-Renee</given-names></name>
          <name><surname>Rumsey</surname><given-names>Christopher L.</given-names></name>
        </person-group>
        <article-title>Verification and Validation of the k-kL Turbulence Model in FUN3D and CFL3D Codes</article-title>
        <source>46th AIAA Fluid Dynamics Conference</source>
        <year iso-8601-date="2016">2016</year>
        <pub-id pub-id-type="doi">10.2514/6.2016-3941</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-SAmodel">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Spalart</surname><given-names>P.</given-names></name>
          <name><surname>Allmaras</surname><given-names>S.</given-names></name>
        </person-group>
        <article-title>A one-equation turbulence model for aerodynamic flows</article-title>
        <source>30th Aerospace Sciences Meeting and Exhibit</source>
        <year iso-8601-date="1992">1992</year>
        <pub-id pub-id-type="doi">10.2514/6.1992-439</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-weno">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Shu</surname><given-names>Chi-Wang</given-names></name>
        </person-group>
        <article-title>High-order Finite Difference and Finite Volume WENO Schemes and Discontinuous Galerkin Methods for CFD</article-title>
        <source>International Journal of Computational Fluid Dynamics</source>
        <year iso-8601-date="2003">2003</year>
        <volume>17</volume>
        <issue>2</issue>
        <pub-id pub-id-type="doi">10.1080/1061856031000104851</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ppm">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Colella</surname><given-names>Phillip</given-names></name>
          <name><surname>Woodward</surname><given-names>Paul R</given-names></name>
        </person-group>
        <article-title>The piecewise parabolic method (PPM) for gas-dynamical simulations</article-title>
        <source>Journal of Computational Physics</source>
        <year iso-8601-date="1984">1984</year>
        <volume>54</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1016/0021-9991(84)90143-8</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-muscl">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Van Leer</surname><given-names>Bram</given-names></name>
        </person-group>
        <article-title>Towards the ultimate conservative difference scheme. V. A second-order sequel to godunov’s method</article-title>
        <source>Journal of Computational Physics</source>
        <year iso-8601-date="1979">1979</year>
        <volume>32</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1016/0021-9991(79)90145-1</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2015Menter">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Menter</surname><given-names>Florian R</given-names></name>
          <name><surname>Smirnov</surname><given-names>Pavel E</given-names></name>
          <name><surname>Liu</surname><given-names>Tao</given-names></name>
          <name><surname>Avancha</surname><given-names>Ravikanth</given-names></name>
        </person-group>
        <article-title>A one-equation local correlation-based transition model</article-title>
        <source>Flow, Turbulence and Combustion</source>
        <year iso-8601-date="2015">2015</year>
        <volume>95</volume>
        <issue>4</issue>
        <pub-id pub-id-type="doi">10.1007/s10494-015-9622-4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2017Caka">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Cakmakcioglu</surname><given-names>Samet Caka</given-names></name>
          <name><surname>Bas</surname><given-names>Onur</given-names></name>
          <name><surname>Kaynak</surname><given-names>Unver</given-names></name>
        </person-group>
        <article-title>A correlation-based algebraic transition model</article-title>
        <source>Proceedings of the Institution of Mechanical Engineers, Part C: Journal of Mechanical Engineering Science</source>
        <year iso-8601-date="2018">2018</year>
        <volume>232</volume>
        <issue>21</issue>
        <pub-id pub-id-type="doi">10.1177/0954406217743537</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-weller1998">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Weller</surname><given-names>Henry G</given-names></name>
          <name><surname>Tabor</surname><given-names>Gavin</given-names></name>
          <name><surname>Jasak</surname><given-names>Hrvoje</given-names></name>
          <name><surname>Fureby</surname><given-names>Christer</given-names></name>
        </person-group>
        <article-title>A tensorial approach to computational continuum mechanics using object-oriented techniques</article-title>
        <source>Computers in Physics</source>
        <year iso-8601-date="1998">1998</year>
        <volume>12</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1063/1.168744</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2013stanford">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Economon</surname><given-names>Thomas D</given-names></name>
          <name><surname>Palacios</surname><given-names>Francisco</given-names></name>
          <name><surname>Copeland</surname><given-names>Sean R</given-names></name>
          <name><surname>Lukaczyk</surname><given-names>Trent W</given-names></name>
          <name><surname>Alonso</surname><given-names>Juan J</given-names></name>
        </person-group>
        <article-title>SU2: An open-source suite for multiphysics simulation and design</article-title>
        <source>AIAA Journal</source>
        <year iso-8601-date="2016">2016</year>
        <volume>54</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.2514/1.J053813</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
