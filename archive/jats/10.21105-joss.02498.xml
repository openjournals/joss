<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2498</article-id>
<article-id pub-id-type="doi">10.21105/joss.02498</article-id>
<title-group>
<article-title>gym-electric-motor (GEM): A Python toolbox for the
simulation of electric drive systems</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<string-name>Praneeth Balakrishna</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Gerrit Book</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9490-1843</contrib-id>
<string-name>Wilhelm Kirchgässner</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-5427-9527</contrib-id>
<string-name>Maximilian Schenke</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Arne Traue</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-9362-8777</contrib-id>
<string-name>Oliver Wallscheid</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Power Electronics and Electrical Drives,
Paderborn University, Germany</institution>
</institution-wrap>
</aff>
</contrib-group>
<volume>6</volume>
<issue>58</issue>
<fpage>2498</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>electric drive control</kwd>
<kwd>electric motors</kwd>
<kwd>OpenAI Gym</kwd>
<kwd>power electronics</kwd>
<kwd>reinforcement learning</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>The <monospace>gym-electric-motor</monospace>
  (<monospace>GEM</monospace>) library provides simulation environments
  for electrical drive systems and, therefore, allows to easily design
  and analyze drive control solutions in Python. Since
  <monospace>GEM</monospace> is strongly inspired by OpenAI’s
  <monospace>gym</monospace>
  (<xref alt="Brockman et al., 2016" rid="ref-gym-whitepaper" ref-type="bibr">Brockman
  et al., 2016</xref>), it is particularly well-equipped for (but not
  limited to) applications in the field of reinforcement-learning-based
  control algorithms. In addition, the interface allows to plug in any
  expert-driven control approach, such as model predictive control, to
  be tested and to perform benchmark comparisons. The
  <monospace>GEM</monospace> package includes a wide variety of motors,
  power electronic converters and mechanical load models that can be
  flexibly selected and parameterized via the API. A modular structure
  allows additional system components to be included in the simulation
  framework.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Electric drive systems and their control are an important topic in
  both academic and industrial research due to their worldwide usage and
  deployment. Control algorithms for these systems have usually been
  designed, parameterized and tested within
  <monospace>MATLAB - Simulink</monospace>
  (<xref alt="The MathWorks, Inc., 2020" rid="ref-MathWorks" ref-type="bibr">The
  MathWorks, Inc., 2020</xref>), which is developed and promoted
  specifically for such engineering tasks. In the more recent past,
  however, commercial software like <monospace>MATLAB</monospace> has
  difficulties to stay on par with state-of-the-art concepts for
  scientific modeling and the flexibility offered by open-source
  libraries that are available for more accessible programming languages
  like Python. Consequently, a Python-based drive simulation framework
  like <monospace>GEM</monospace> is an evident step in order to
  accelerate corresponding control research and development.
  Specifically, the latest efforts concerning industrial application of
  reinforcement-learning control algorithms heavily depend on Python
  packages like <monospace>Keras</monospace>
  (<xref alt="Chollet et al., 2015" rid="ref-Chollet2015" ref-type="bibr">Chollet
  et al., 2015</xref>), <monospace>Tensorflow</monospace>
  (<xref alt="Abadi et al., 2015" rid="ref-tensorflow2015-whitepaper" ref-type="bibr">Abadi
  et al., 2015</xref>) or
  <monospace>PyTorch</monospace>(<xref alt="Paszke et al., 2019" rid="ref-NEURIPS2019_9015" ref-type="bibr">Paszke
  et al., 2019</xref>). Hence, the built-in OpenAI
  <monospace>gym</monospace> interface allows to easily couple
  <monospace>GEM</monospace> to other open-source reinforcement learning
  toolboxes such as <monospace>Stable Baselines3</monospace>
  (<xref alt="Raffin et al., 2019" rid="ref-stable-baselines3" ref-type="bibr">Raffin
  et al., 2019</xref>), <monospace>TF-Agents</monospace>
  (<xref alt="Guadarrama et al., 2018" rid="ref-TFAgents" ref-type="bibr">Guadarrama
  et al., 2018</xref>) or <monospace>keras-rl</monospace>
  (<xref alt="Plappert, 2016" rid="ref-plappert2016kerasrl" ref-type="bibr">Plappert,
  2016</xref>).</p>
  <p>Providing easy access to the non-commercial, open-source
  <monospace>GEM</monospace> library allows users from any engineering
  domain to include accurate drive models into their simulations, also
  beyond the topic of control applications. Considering the prevalence
  of commercial software like <monospace>MATLAB</monospace> for
  educational purposes, a free-of-charge simulation alternative that
  does not force students or institutions to pay for licenses, has great
  potential to support and encourage training of new talents in the
  field of electrical drives and neighbouring domains (e.g. power
  electronics or energy systems). <monospace>GEM</monospace> has already
  been used in graduate courses on reinforcement learning
  (<xref alt="Kirchgässner et al., 2020" rid="ref-rl-lecture" ref-type="bibr">Kirchgässner
  et al., 2020</xref>).</p>
</sec>
<sec id="related-software">
  <title>Related software</title>
  <p>Due to the strong dependence of downstream industrial development
  on simulated environments there is a comprehensive variety of
  commercial software that enables numerical analysis of every facet of
  electric drives. To name just a few,
  <monospace>MATLAB - Simulink</monospace> is probably the most popular
  software environment for numerical analysis in engineering. Herein,
  <monospace>MATLAB</monospace> is providing for a scientific
  calculation framework and <monospace>Simulink</monospace> for a
  model-driven graphical interface with a very large field of
  applications. Examples that are designed for real-time capability
  (e.g., for hardware-in-the-loop prototyping) can be found in
  <monospace>VEOS</monospace>
  (<xref alt="dSPACE GmbH, 2019" rid="ref-dSPACE" ref-type="bibr">dSPACE
  GmbH, 2019</xref>) or <monospace>HYPERSIM</monospace>
  (<xref alt="OPAL-RT TECHNOLOGIES, Inc., 2020" rid="ref-OPAL-RT" ref-type="bibr">OPAL-RT
  TECHNOLOGIES, Inc., 2020</xref>). Non-commercial simulation libraries
  exist, but they rarely come with predefined system models. An
  exemplary package from this category is <monospace>SimuPy</monospace>
  (<xref alt="Margolis, 2017" rid="ref-Margolis" ref-type="bibr">Margolis,
  2017</xref>), which provides lots of flexibility for the synthesis of
  generic simulation models, but also requires the user to possess the
  necessary expert knowledge in order to implement a desired system
  model. Likewise, general purpose component-oriented simulation
  frameworks like <monospace>OpenModelica</monospace>
  (<xref alt="Open Source Modelica Consortium, 2020" rid="ref-OSMC2020" ref-type="bibr">Open
  Source Modelica Consortium, 2020</xref>) or
  <monospace>XCos</monospace>
  (<xref alt="Scilab, 2020" rid="ref-Scilab2020" ref-type="bibr">Scilab,
  2020</xref>) can be used for setting up electrical drive models, too,
  but this requires expert domain knowledge and out-of-the-box Python
  interfaces (e.g., for reinforcement learning) are not available.</p>
  <p>In the domain of motor construction it is furthermore interesting
  to observe the behavior of magnetic and electric fields within a motor
  (simulation of partial differential equations). Corresponding
  commercial simulation environments, like
  <monospace>ANSYS Maxwell</monospace>
  (<xref alt="ANSYS, Inc., 2020" rid="ref-ANSYS" ref-type="bibr">ANSYS,
  Inc., 2020</xref>), <monospace>Motor-CAD</monospace>
  (<xref alt="Motor Design Ltd., 2020" rid="ref-MotorDesignLtd" ref-type="bibr">Motor
  Design Ltd., 2020</xref>) or <monospace>MotorWizard</monospace>
  (<xref alt="ElectroMagneticWorks, Inc., 2020" rid="ref-ElectroMagneticWorks" ref-type="bibr">ElectroMagneticWorks,
  Inc., 2020</xref>) and the exemplary non-commercial alternative
  <monospace>FEMM</monospace>
  (<xref alt="Meeker, 2020" rid="ref-Meeker" ref-type="bibr">Meeker,
  2020</xref>) are very resource and time consuming because they depend
  on the finite element method, which is a spatial discretization and
  numerical integration procedure. Hence, these software packages are
  usually not considered in control development, and complement
  <monospace>GEM</monospace> at most. This particularly applies in the
  early control design phase when researching new, innovative control
  approaches (rapid control prototyping) or when students want to
  receive quasi-instantaneous simulation feedbacks.</p>
</sec>
<sec id="package-architecture">
  <title>Package Architecture</title>
  <p>The <monospace>GEM</monospace> library models an electric drive
  system by its four main components: voltage supply, power converter,
  electric motor and mechanical load. The general structure of such a
  system is depicted in
  <xref alt="Figure 1" rid="figU003ASCML_system">Figure 1</xref>.</p>
  <fig>
    <caption><p>Simplified structure diagram of an electric drive
    system<styled-content id="figU003ASCML_system"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="eps" xlink:href="../plots/SCML_Setting.eps" xlink:title="" />
  </fig>
  <p>The <bold>voltage supply</bold> provides the necessary power that
  is used by the motor. It is modeled by a fixed supply voltage
  <inline-formula><alternatives>
  <tex-math><![CDATA[u_\mathrm{sup}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>u</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>p</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>,
  which allows to monitor the supply current into the converter. A
  <bold>power electronic converter</bold> is needed to supply the motor
  with electric power of proper frequency and magnitude, which commonly
  includes the conversion of the supply’s direct current to alternating
  current. Typical drive converters exhibit switching behavior: there is
  a finite set of different voltages that can be applied to the motor,
  depending on which switches are open and which are closed. Besides
  this physically accurate view, a popular modeling approach for
  switched mode converters is based on dynamic averaging of the applied
  voltage <inline-formula><alternatives>
  <tex-math><![CDATA[u_\mathrm{in}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>u</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>,
  rendering the voltage a continuous variable. Both of these modeling
  approaches are implemented and can be chosen freely, allowing usage of
  control algorithms that operate on a finite set of switching states or
  on continuous input voltages. The <bold>electric motor</bold> is the
  centerpiece of every drive system. It is described by a system of
  ordinary differential equations (ODEs), which represents the motor’s
  electrical behavior. In particular, the domain of three-phase drives
  makes use of coordinate transformations to view these ODEs in the more
  interpretable frame of field-oriented coordinates. In
  <monospace>GEM</monospace>, both, the physically accurate three-phase
  system (<inline-formula><alternatives>
  <tex-math><![CDATA[abc]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>-coordinates)
  and the simplified, two-dimensional, field-oriented system
  (<inline-formula><alternatives>
  <tex-math><![CDATA[dq]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>d</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>-coordinates)
  are available to be used as the frame of input and output variables,
  allowing for easy and quick controller analysis and diagnose within
  the most convenient coordinate system. Finally, the torque
  <inline-formula><alternatives>
  <tex-math><![CDATA[T]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>T</mml:mi></mml:math></alternatives></inline-formula>
  resulting from the motor is applied to the <bold>mechanical
  load</bold>. The load is characterized by a moment of inertia and by a
  load torque <inline-formula><alternatives>
  <tex-math><![CDATA[T_\mathrm{L}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>T</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>L</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  that is directed against the motor torque. Load torque behavior can be
  parameterized with respect to the angular velocity
  <inline-formula><alternatives>
  <tex-math><![CDATA[\omega_\mathrm{me}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ω</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>
  in the form of constant, linear and quadratic dependency (and
  arbitrary combinations thereof). Speed changes that result from the
  difference between motor and load torque are modeled with another ODE
  which completely covers the mechanical system behavior. Alternatively,
  the motor speed can be set to a fixed value, which can be useful for
  the investigation of control algorithms concerning generator
  operation, or it can be set to follow a specified trajectory, which is
  convenient when inspecting scenarios with defined speed demands like
  in traction applications.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>A large number of different motor systems is already implemented.
  These include DC drives as well as synchronous and induction
  three-phase drives. A complete list can be viewed in the
  <monospace>GEM</monospace> documentation
  (<xref alt="Balakrishna et al., 2020" rid="ref-GEM-docu" ref-type="bibr">Balakrishna
  et al., 2020</xref>). The corresponding power converters allow to
  control the motor either directly via applied voltage
  (continuous-control-set) or by defining the converter’s switching
  state (finite-control-set). Specifically for the use within
  reinforcement-learning applications and for testing state-of-the-art
  expert-driven control designs, the toolbox comes with a built-in
  reference generator, which can be used to create arbitrary reference
  trajectories (e.g., for the motor current, velocity or torque). These
  generated references are furthermore used to calculate a reward. In
  the domain of reinforcement learning, reward is the optimization
  variable that is to be maximized. For the control system scenario,
  reward is usually defined by the negative distance between the
  momentary and desired operation point, such that expedient controller
  behavior can be monitored easily. The reward mechanism also allows to
  take physical limitations of the drive system into account, e.g., in
  the way of a notably low reward if limit values are surpassed.
  Optionally, the environment can be setup such that a reset of the
  system is induced in case of a limit violation. In addition, built-in
  visualization and plotting routines allow to monitor the training
  process of reinforcement learning agents or the performance of
  expert-driven control approaches.</p>
</sec>
<sec id="examples">
  <title>Examples</title>
  <p>A minimal example of <monospace>GEM's</monospace> simulation
  capability is presented in
  <xref alt="Figure 2" rid="figU003ASCIM_example">Figure 2</xref>. The
  plot shows the start-up behavior of a squirrel cage induction motor
  connected to an idealized three-phase electric grid depicting the
  angular velocity <inline-formula><alternatives>
  <tex-math><![CDATA[\omega_\mathrm{me}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>ω</mml:mi><mml:mstyle mathvariant="normal"><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mstyle></mml:msub></mml:math></alternatives></inline-formula>,
  the torque <inline-formula><alternatives>
  <tex-math><![CDATA[T]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi>T</mml:mi></mml:math></alternatives></inline-formula>,
  the voltage <inline-formula><alternatives>
  <tex-math><![CDATA[u_{a,b,c}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>
  and the current <inline-formula><alternatives>
  <tex-math><![CDATA[i_{d,q}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:math></alternatives></inline-formula>.
  Here, the voltage is depicted within the physical
  <inline-formula><alternatives>
  <tex-math><![CDATA[abc]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mi>c</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>-frame
  while the current is viewed within the simplified
  <inline-formula><alternatives>
  <tex-math><![CDATA[dq]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>d</mml:mi><mml:mi>q</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>-frame.</p>
  <fig>
    <caption><p>Simulation of a squirrel cage induction motor connected
    to a rigid network at <inline-formula><alternatives>
    <tex-math><![CDATA[50 \, \mathrm{Hz}]]></tex-math>
    <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mn>50</mml:mn><mml:mspace width="0.167em"></mml:mspace><mml:mstyle mathvariant="normal"><mml:mi>H</mml:mi><mml:mi>z</mml:mi></mml:mstyle></mml:mrow></mml:math></alternatives></inline-formula><styled-content id="figU003ASCIM_example"></styled-content></p></caption>
    <graphic mimetype="application" mime-subtype="eps" xlink:href="../plots/SCIM_Example.eps" xlink:title="" />
  </fig>
  <p>Exemplary code snippets that demonstrate the usage of
  <monospace>GEM</monospace> within both, the classical control and the
  reinforcement learning context are included within the project’s
  <ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/gym-electric-motor/tree/master/examples">examples
  folder</ext-link>. Featured examples:</p>
  <list list-type="bullet">
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://colab.research.google.com/github/upb-lea/gym-electric-motor/blob/master/examples/environment_features/GEM_cookbook.ipynb"><monospace>GEM_cookbook.ipynb</monospace></ext-link>:
      a basic tutorial-style notebook that presents the basic interface
      and usage of GEM</p>
    </list-item>
    <list-item>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/upb-lea/gym-electric-motor/blob/master/examples/environment_features/scim_ideal_grid_simulation.py"><monospace>scim_ideal_grid_simulation.py</monospace></ext-link>:
      a simple motor simulation showcase of the squirrel cage induction
      motor that was used to create
      <xref alt="Figure 2" rid="figU003ASCIM_example">Figure 2</xref></p>
    </list-item>
  </list>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Chollet2015">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Chollet</surname><given-names>François</given-names></name>
          <string-name>others</string-name>
        </person-group>
        <article-title>Keras</article-title>
        <year iso-8601-date="2015">2015</year>
        <uri>https://keras.io</uri>
      </element-citation>
    </ref>
    <ref id="ref-tensorflow2015-whitepaper">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Abadi</surname><given-names>Martı́n</given-names></name>
          <name><surname>Agarwal</surname><given-names>Ashish</given-names></name>
          <name><surname>Barham</surname><given-names>Paul</given-names></name>
          <name><surname>Brevdo</surname><given-names>Eugene</given-names></name>
          <name><surname>Chen</surname><given-names>Zhifeng</given-names></name>
          <name><surname>Citro</surname><given-names>Craig</given-names></name>
          <name><surname>Corrado</surname><given-names>Greg S.</given-names></name>
          <name><surname>Davis</surname><given-names>Andy</given-names></name>
          <name><surname>Dean</surname><given-names>Jeffrey</given-names></name>
          <name><surname>Devin</surname><given-names>Matthieu</given-names></name>
          <name><surname>Ghemawat</surname><given-names>Sanjay</given-names></name>
          <name><surname>Goodfellow</surname><given-names>Ian</given-names></name>
          <name><surname>Harp</surname><given-names>Andrew</given-names></name>
          <name><surname>Irving</surname><given-names>Geoffrey</given-names></name>
          <name><surname>Isard</surname><given-names>Michael</given-names></name>
          <name><surname>Jia</surname><given-names>Yangqing</given-names></name>
          <name><surname>Jozefowicz</surname><given-names>Rafal</given-names></name>
          <name><surname>Kaiser</surname><given-names>Lukasz</given-names></name>
          <name><surname>Kudlur</surname><given-names>Manjunath</given-names></name>
          <name><surname>Levenberg</surname><given-names>Josh</given-names></name>
          <name><surname>Mané</surname><given-names>Dandelion</given-names></name>
          <name><surname>Monga</surname><given-names>Rajat</given-names></name>
          <name><surname>Moore</surname><given-names>Sherry</given-names></name>
          <name><surname>Murray</surname><given-names>Derek</given-names></name>
          <name><surname>Olah</surname><given-names>Chris</given-names></name>
          <name><surname>Schuster</surname><given-names>Mike</given-names></name>
          <name><surname>Shlens</surname><given-names>Jonathon</given-names></name>
          <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
          <name><surname>Sutskever</surname><given-names>Ilya</given-names></name>
          <name><surname>Talwar</surname><given-names>Kunal</given-names></name>
          <name><surname>Tucker</surname><given-names>Paul</given-names></name>
          <name><surname>Vanhoucke</surname><given-names>Vincent</given-names></name>
          <name><surname>Vasudevan</surname><given-names>Vijay</given-names></name>
          <name><surname>Viégas</surname><given-names>Fernanda</given-names></name>
          <name><surname>Vinyals</surname><given-names>Oriol</given-names></name>
          <name><surname>Warden</surname><given-names>Pete</given-names></name>
          <name><surname>Wattenberg</surname><given-names>Martin</given-names></name>
          <name><surname>Wicke</surname><given-names>Martin</given-names></name>
          <name><surname>Yu</surname><given-names>Yuan</given-names></name>
          <name><surname>Zheng</surname><given-names>Xiaoqiang</given-names></name>
        </person-group>
        <article-title>TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems</article-title>
        <year iso-8601-date="2015">2015</year>
        <uri>https://www.tensorflow.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-GEM-docu">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Balakrishna</surname><given-names>Praneeth</given-names></name>
          <name><surname>Book</surname><given-names>Gerrit</given-names></name>
          <name><surname>Kirchgässner</surname><given-names>Wilhelm</given-names></name>
          <name><surname>Schenke</surname><given-names>Maximilian</given-names></name>
          <name><surname>Traue</surname><given-names>Arne</given-names></name>
          <name><surname>Wallscheid</surname><given-names>Oliver</given-names></name>
        </person-group>
        <article-title>Gym-electric-motor documentation</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://upb-lea.github.io/gym-electric-motor/</uri>
      </element-citation>
    </ref>
    <ref id="ref-rl-lecture">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Kirchgässner</surname><given-names>Wilhelm</given-names></name>
          <name><surname>Schenke</surname><given-names>Maximilian</given-names></name>
          <name><surname>Wallscheid</surname><given-names>Oliver</given-names></name>
          <name><surname>Weber</surname><given-names>Daniel</given-names></name>
        </person-group>
        <article-title>Paderborn university: Reinforcement learning course materials</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://github.com/upb-lea/reinforcement_learning_course_materials</uri>
      </element-citation>
    </ref>
    <ref id="ref-gym-whitepaper">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Brockman</surname><given-names>Greg</given-names></name>
          <name><surname>Cheung</surname><given-names>Vicki</given-names></name>
          <name><surname>Pettersson</surname><given-names>Ludwig</given-names></name>
          <name><surname>Schneider</surname><given-names>Jonas</given-names></name>
          <name><surname>Schulman</surname><given-names>John</given-names></name>
          <name><surname>Tang</surname><given-names>Jie</given-names></name>
          <name><surname>Zaremba</surname><given-names>Wojciech</given-names></name>
        </person-group>
        <article-title>OpenAI Gym</article-title>
        <year iso-8601-date="2016">2016</year>
        <uri>https://github.com/openai/gym</uri>
      </element-citation>
    </ref>
    <ref id="ref-MathWorks">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>The MathWorks, Inc.</string-name>
        </person-group>
        <article-title>MATLAB - simulink R2020a</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.mathworks.com/products/matlab.html</uri>
      </element-citation>
    </ref>
    <ref id="ref-dSPACE">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>dSPACE GmbH</string-name>
        </person-group>
        <article-title>VEOS 4.5</article-title>
        <year iso-8601-date="2019">2019</year>
        <uri>https://www.dspace.com/en/inc/home/products/sw/simulation_software/veos.cfm</uri>
      </element-citation>
    </ref>
    <ref id="ref-OPAL-RT">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>OPAL-RT TECHNOLOGIES, Inc.</string-name>
        </person-group>
        <article-title>HYPERSIM 2020.1</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.opal-rt.com/systems-hypersim/</uri>
      </element-citation>
    </ref>
    <ref id="ref-Margolis">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Margolis</surname><given-names>Benjamin W. L.</given-names></name>
        </person-group>
        <article-title>SimuPy 1.0.0</article-title>
        <source>GitHub repository</source>
        <year iso-8601-date="2017">2017</year>
        <uri>https://github.com/simupy/simupy</uri>
      </element-citation>
    </ref>
    <ref id="ref-ANSYS">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>ANSYS, Inc.</string-name>
        </person-group>
        <article-title>ANSYS Maxwell 2020 R1</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.ansys.com/products/electronics/ansys-maxwell</uri>
      </element-citation>
    </ref>
    <ref id="ref-MotorDesignLtd">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Motor Design Ltd.</string-name>
        </person-group>
        <article-title>Motor-CAD v12</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.motor-design.com/motor-cad-software/</uri>
      </element-citation>
    </ref>
    <ref id="ref-ElectroMagneticWorks">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>ElectroMagneticWorks, Inc.</string-name>
        </person-group>
        <article-title>MotorWizard</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.emworks.com/product/MotorWizard</uri>
      </element-citation>
    </ref>
    <ref id="ref-Meeker">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Meeker</surname><given-names>David</given-names></name>
        </person-group>
        <article-title>FEMM 4.2</article-title>
        <year iso-8601-date="2020">2020</year>
        <uri>http://www.femm.info/wiki/HomePage</uri>
      </element-citation>
    </ref>
    <ref id="ref-NEURIPS2019_9015">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Paszke</surname><given-names>Adam</given-names></name>
          <name><surname>Gross</surname><given-names>Sam</given-names></name>
          <name><surname>Massa</surname><given-names>Francisco</given-names></name>
          <name><surname>Lerer</surname><given-names>Adam</given-names></name>
          <name><surname>Bradbury</surname><given-names>James</given-names></name>
          <name><surname>Chanan</surname><given-names>Gregory</given-names></name>
          <name><surname>Killeen</surname><given-names>Trevor</given-names></name>
          <name><surname>Lin</surname><given-names>Zeming</given-names></name>
          <name><surname>Gimelshein</surname><given-names>Natalia</given-names></name>
          <name><surname>Antiga</surname><given-names>Luca</given-names></name>
          <name><surname>Desmaison</surname><given-names>Alban</given-names></name>
          <name><surname>Kopf</surname><given-names>Andreas</given-names></name>
          <name><surname>Yang</surname><given-names>Edward</given-names></name>
          <name><surname>DeVito</surname><given-names>Zachary</given-names></name>
          <name><surname>Raison</surname><given-names>Martin</given-names></name>
          <name><surname>Tejani</surname><given-names>Alykhan</given-names></name>
          <name><surname>Chilamkurthy</surname><given-names>Sasank</given-names></name>
          <name><surname>Steiner</surname><given-names>Benoit</given-names></name>
          <name><surname>Fang</surname><given-names>Lu</given-names></name>
          <name><surname>Bai</surname><given-names>Junjie</given-names></name>
          <name><surname>Chintala</surname><given-names>Soumith</given-names></name>
        </person-group>
        <article-title>PyTorch: An imperative style, high-performance deep learning library</article-title>
        <source>Advances in neural information processing systems 32</source>
        <person-group person-group-type="editor">
          <name><surname>Wallach</surname><given-names>H.</given-names></name>
          <name><surname>Larochelle</surname><given-names>H.</given-names></name>
          <name><surname>Beygelzimer</surname><given-names>A.</given-names></name>
          <name><surname>dAlché-Buc</surname><given-names>F.</given-names></name>
          <name><surname>Fox</surname><given-names>E.</given-names></name>
          <name><surname>Garnett</surname><given-names>R.</given-names></name>
        </person-group>
        <publisher-name>Curran Associates, Inc.</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <uri>http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf</uri>
      </element-citation>
    </ref>
    <ref id="ref-stable-baselines3">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Raffin</surname><given-names>Antonin</given-names></name>
          <name><surname>Hill</surname><given-names>Ashley</given-names></name>
          <name><surname>Ernestus</surname><given-names>Maximilian</given-names></name>
          <name><surname>Gleave</surname><given-names>Adam</given-names></name>
          <name><surname>Kanervisto</surname><given-names>Anssi</given-names></name>
          <name><surname>Dormann</surname><given-names>Noah</given-names></name>
        </person-group>
        <article-title>Stable Baselines3</article-title>
        <source>GitHub repository</source>
        <publisher-name>https://github.com/DLR-RM/stable-baselines3; GitHub</publisher-name>
        <year iso-8601-date="2019">2019</year>
      </element-citation>
    </ref>
    <ref id="ref-TFAgents">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Guadarrama</surname><given-names>Sergio</given-names></name>
          <name><surname>Korattikara</surname><given-names>Anoop</given-names></name>
          <name><surname>Ramirez</surname><given-names>Oscar</given-names></name>
          <name><surname>Castro</surname><given-names>Pablo</given-names></name>
          <name><surname>Holly</surname><given-names>Ethan</given-names></name>
          <name><surname>Fishman</surname><given-names>Sam</given-names></name>
          <name><surname>Wang</surname><given-names>Ke</given-names></name>
          <name><surname>Gonina</surname><given-names>Ekaterina</given-names></name>
          <name><surname>Wu</surname><given-names>Neal</given-names></name>
          <name><surname>Kokiopoulou</surname><given-names>Efi</given-names></name>
          <name><surname>Sbaiz</surname><given-names>Luciano</given-names></name>
          <name><surname>Smith</surname><given-names>Jamie</given-names></name>
          <name><surname>Bartók</surname><given-names>Gábor</given-names></name>
          <name><surname>Berent</surname><given-names>Jesse</given-names></name>
          <name><surname>Harris</surname><given-names>Chris</given-names></name>
          <name><surname>Vanhoucke</surname><given-names>Vincent</given-names></name>
          <name><surname>Brevdo</surname><given-names>Eugene</given-names></name>
        </person-group>
        <article-title>TF-Agents: A library for reinforcement learning in TensorFlow</article-title>
        <source>GitHub repository</source>
        <publisher-name>https://github.com/tensorflow/agents</publisher-name>
        <year iso-8601-date="2018">2018</year>
        <uri>https://github.com/tensorflow/agents</uri>
      </element-citation>
    </ref>
    <ref id="ref-plappert2016kerasrl">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Plappert</surname><given-names>Matthias</given-names></name>
        </person-group>
        <article-title>Keras-rl</article-title>
        <source>GitHub repository</source>
        <publisher-name>https://github.com/keras-rl/keras-rl; GitHub</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <uri>https://github.com/keras-rl/keras-rl</uri>
      </element-citation>
    </ref>
    <ref id="ref-OSMC2020">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Open Source Modelica Consortium</string-name>
        </person-group>
        <article-title>OpenModelica</article-title>
        <publisher-name>https://openmodelica.org/</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://openmodelica.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-Scilab2020">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>Scilab</string-name>
        </person-group>
        <article-title>Xcos (scilab 6.1.0)</article-title>
        <publisher-name>https://www.scilab.org/software/xcos</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <uri>https://www.scilab.org/software/xcos</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
