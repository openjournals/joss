<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">710</article-id>
<article-id pub-id-type="doi">10.21105/joss.00710</article-id>
<title-group>
<article-title>MCycle: A Python package for 1D sizing and analysis of
thermodynamic power cycles</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-6928-2187</contrib-id>
<string-name>Momar G-O Hughes</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>University of New South Wales, Sydney,
Australia</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-07-31">
<day>31</day>
<month>7</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>28</issue>
<fpage>710</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>thermodynamics</kwd>
<kwd>power cycle</kwd>
<kwd>component sizing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="introduction">
  <title>Introduction</title>
  <p>MCycle allows users to analyse thermodynamic power cycles and their
  individual components, as well as size cycle components to defined
  cycle design parameters. It was developed due to a need for an open
  source tool with easy scripting for sizing heat exchangers that would
  allow control over individual component parameters. Users may now
  analyse a growing collection of thermodynamic power cycles and cycle
  components, including heat exchangers, expanders, compressors, heaters
  and coolers. Each type of component has models of varying complexity,
  allowing MCycle to be equally applicable to simplistic cycle analyses
  as to detailed sizing optimisations. The project source code is found
  at
  <ext-link ext-link-type="uri" xlink:href="https://github.com/momargoh/MCycle">https://github.com/momargoh/MCycle</ext-link>
  and the documentation is hosted at
  <ext-link ext-link-type="uri" xlink:href="https://mcycle.readthedocs.io">https://mcycle.readthedocs.io</ext-link>.</p>
</sec>
<sec id="summary">
  <title>Summary</title>
  <p>To evaluate a cycleâ€™s fluid properties, MCycle uses the Python
  wrapper of the open-source thermodynamic properties library
  <ext-link ext-link-type="uri" xlink:href="http://www.coolprop.org">CoolProp</ext-link>
  (<xref alt="Bell et al., 2014" rid="ref-bell2014coolprop" ref-type="bibr">Bell
  et al., 2014</xref>). A library of heat transfer and component
  analysis methods is provided , containing theoretical relations and
  semi-empirical correlations sourced from published research articles
  (refer to the
  <ext-link ext-link-type="uri" xlink:href="https://mcycle.readthedocs.io">documentation</ext-link>
  for specific references). These methods are simply functions that take
  key-word arguments and return a dictionary of computed variables.
  Thus, users also have the freedom of creating and using custom
  correlations that adhere to these conventions. As previously
  mentioned, component models vary in complexity; for example, a plate
  heat exchanger could be modelled with a
  <monospace>HxBasicPlanar</monospace> or a
  <monospace>HxPlate</monospace> object. A
  <monospace>HxBasicPlanar</monospace> object requires the heat transfer
  coefficient of the working and secondary fluid flows to be defined by
  the user, whereas a <monospace>HxPlate</monospace> object requires the
  user to define plate geometries and subsequently uses a user-selected
  heat transfer method to evaluate the heat transfer coefficient of each
  fluid flow. MCycle components have two primary analysis functions:
  <monospace>size</monospace> and <monospace>run</monospace>.
  <monospace>size</monospace> calculates the required value of a desired
  attribute for each component in order to satisfy the user-defined
  incoming and outgoing flow-states. <monospace>run</monospace>
  calculates the outgoing working fluid flow-state of a fully defined
  component. Hence, <monospace>size</monospace> is used for sizing a
  component or cycle to design conditions whereas
  <monospace>run</monospace> is moreso used for analysing components and
  cycles at off-design conditions. Cycles are initiated by selecting the
  components (either user-created designs or from the included library
  based on commercial component designs) and optionally defining the
  cycle design parameters. MCycle also provides functions for producing
  customisable cycle plots and outputting formatted text summaries of
  components or cycles.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>Development of this package was supported by an Australian
  Government Research Training Program (RTP) Scholarship.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-bell2014coolprop">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Bell</surname><given-names>Ian H.</given-names></name>
          <name><surname>Wronski</surname><given-names>Jorrit</given-names></name>
          <name><surname>Quoilin</surname><given-names>Sylvain</given-names></name>
          <name><surname>Lemort</surname><given-names>Vincent</given-names></name>
        </person-group>
        <article-title>Pure and pseudo-pure fluid thermophysical property evaluation and the open-source thermophysical property library CoolProp</article-title>
        <source>Industrial &amp; Engineering Chemistry Research</source>
        <publisher-name>American Chemical Society (ACS)</publisher-name>
        <year iso-8601-date="2014-01">2014</year><month>01</month>
        <volume>53</volume>
        <issue>6</issue>
        <pub-id pub-id-type="doi">10.1021/ie4033999</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
