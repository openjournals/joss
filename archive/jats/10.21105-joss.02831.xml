<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2831</article-id>
<article-id pub-id-type="doi">10.21105/joss.02831</article-id>
<title-group>
<article-title>BVPy: A FEniCS-based Python package to ease the
expression and study of boundary value problems in
Biology.</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1873-5246</contrib-id>
<string-name>Florian Gacon</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1202-8460</contrib-id>
<string-name>Christophe Godin</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7671-7225</contrib-id>
<string-name>Olivier Ali</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Laboratoire Reproduction et Développement des Plantes,
Université de Lyon, Ecole Normale Supérieure de Lyon, UCB Lyon 1, CNRS,
INRAE, INRIA; 46, allée d’Italie, 69364 LYON Cedex 07,
France.</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-10-22">
<day>22</day>
<month>10</month>
<year>2020</year>
</pub-date>
<volume>6</volume>
<issue>59</issue>
<fpage>2831</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Biomechanics</kwd>
<kwd>Finite Element Method</kwd>
<kwd>Boundary Value Problem</kwd>
<kwd>FEniCS</kwd>
<kwd>Conda</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>BVPy is a python library to easily implement and study numerically
  Boundary Value Problems (<italic>BVPs</italic>) and Initial Boundary
  Value Problems (<italic>IBVPs</italic>) through the Finite Element
  Method (<italic>FEM</italic>). BVPy proposes an intuitive Application
  Programming Interface (<italic>API</italic>) to harness and combine
  the core functionalities of three powerful libraries: FEniCS
  (<xref alt="Logg et al., 2012" rid="ref-LoggU003A2012" ref-type="bibr">Logg
  et al., 2012</xref>) provides the core data structures and solving
  algorithms; Gmsh
  (<xref alt="Geuzaine &amp; Remacle, 2009" rid="ref-GeuzaineU003A2009" ref-type="bibr">Geuzaine
  &amp; Remacle, 2009</xref>) defines the domains and their meshing; and
  Meshio
  (<xref alt="Schlömer et al., 2020" rid="ref-SchlomerU003A2020" ref-type="bibr">Schlömer
  et al., 2020</xref>) handles data reading and writing. Initially built
  in the context of developmental biology and morphomechanics, its
  purpose is to enable all users, even with little to none experience in
  <italic>FEM</italic>, to quickly and efficiently estimate the behavior
  of a wide variety of fields (scalars, vectors, tensors) on
  biologically relevant structures, inspired by biophysical and
  biochemical processes (morphogene patterning, active matter mechanics,
  active transports…). Despite this biological motivation, the BVPy
  library has been implemented in an <italic>agnostic</italic> manner
  that makes it suitable for many other scientific context.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p><italic>FEMs</italic> are becoming an ubiquitous tool in many
  research areas and the need for a platform accessible to a large
  audience of non-specialists is growing. Such platforms should:
  <italic>(i)</italic> provide an easy access to top-tier, open source,
  existing libraries, usually restricted to expert users;
  <italic>(ii)</italic> serve as a means for experienced researchers to
  communicate with and educate novices. BVPy aims to fulfil these needs
  through a twofold strategy:</p>
  <list list-type="bullet">
    <list-item>
      <p>Provide a high-level <italic>API</italic> to soften the
      learning curve of <italic>FEMs</italic>. So users with little to
      none knowledge can parametrize, run and monitor simulations based
      on built-in templates.</p>
    </list-item>
    <list-item>
      <p>Enable users experienced in <italic>FEM</italic>-based modeling
      to develop and fully customize <italic>de novo</italic> templates
      that could, in turn, be used by non-specialists.</p>
    </list-item>
  </list>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>Although an exhaustive inventory of the existing
  <italic>FEM</italic> solutions is far beyond the reach of this paper,
  it is worth mentioning a few existing alternatives; especially in the
  context of computational morphomechanics, in which BVPy has been
  developed.</p>
  <p>Some <italic>FEM</italic>-frameworks provide <italic>GUI</italic>
  such as Sofa
  (<xref alt="Faure et al., 2012" rid="ref-faureU003Ahal-00681539" ref-type="bibr">Faure
  et al., 2012</xref>), FEBio
  (<xref alt="Maas et al., 2012" rid="ref-Maas_2012" ref-type="bibr">Maas
  et al., 2012</xref>) or MorphoMechanX (see
  (<xref alt="Sapala et al., 2018" rid="ref-SapalaU003A2018gl" ref-type="bibr">Sapala
  et al., 2018</xref>) for example of use) the yet-to-be published
  add-on to the MorphoGraphX software
  (<xref alt="Reuille et al., 2015" rid="ref-deReuilleU003A2015gu" ref-type="bibr">Reuille
  et al., 2015</xref>). While such userfriendly solutions are accessible
  to a wide range of users; their “monolithic” construction reduces
  versatility and prevents more experienced users to tune them at will.
  Moreover, their code sources are not always freely available.</p>
  <p>Besides these <italic>GUI</italic>-based solutions, some “lighter”
  and more open frameworks, such as FREEFEM
  (<xref alt="Hecht, 2012" rid="ref-hecht_2012" ref-type="bibr">Hecht,
  2012</xref>) or FEniCS
  (<xref alt="Logg et al., 2012" rid="ref-LoggU003A2012" ref-type="bibr">Logg
  et al., 2012</xref>) are also available. Such solutions appear more
  versatile and opensource. But their use is usually restricted to
  people already familiar with the theory of Finite Elements.</p>
  <p>A gap currently exists between “closed”, userfriendly, softwares on
  one hand and “open”, technical frameworks on the other. BVPy attempts
  to fill this gap. Our strategy was to harness FEniCS richness into an
  intuitive and evolutive <italic>API</italic>. To that end, the library
  architecture maps the conceptual mathematical components of
  <italic>BVPs</italic> to abstract classes built on FEniCS and Gmsh
  core components (see the library general description below). From
  these abstract classes, experienced users can implement
  <italic>concrete</italic> classes, dedicated to their very specific
  need. Once implemented, these <italic>concrete</italic> classes can
  easily be instantiated and combined in a manner that do not require
  specific <italic>FEM</italic>-related skills (see the Example of use
  below). Although the library comes with a few of these
  <italic>concrete</italic> classes, covering <italic>classic</italic>
  equations (<italic>e.g.</italic> Poisson’s and Helmholtz’s equations,
  linear elasticity and hyperelasticity, reaction-diffusion equations…);
  the full potential of the library resides in its ability to integrate
  <italic>de novo</italic> classes addressing genuine equations and
  problems.</p>
</sec>
<sec id="library-general-description">
  <title>Library general description</title>
  <p>By definition, a <italic>BVP</italic> corresponds to a (set)
  differential equation(s) together with a set of constraints defined on
  the boundaries of the integration domain, see
  <xref alt="Equation 1" rid="eqU003Abvp">Equation 1</xref>.</p>
  <p><named-content id="eqU003Abvp" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[\label{eq:bvp}
  \begin{cases}
  F(u, \boldsymbol{\nabla}(u) \dots) = 0 & \text{in} \quad \Omega \\
  u(\boldsymbol{x}) = u_N(\boldsymbol{x}) & \text{on} \quad \partial\Omega_N \\
  \boldsymbol{\nabla}(u(\boldsymbol{x})) = \boldsymbol{j}(\boldsymbol{x}) & \text{on} \quad \partial\Omega_D
  \end{cases}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>∇</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mi>…</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">in</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>Ω</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">on</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mstyle mathvariant="bold"><mml:mi>∇</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐣</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">on</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>The above formalization can be extended as follow in the case of
  first-order <italic>IBVPs</italic> (<italic>i.e.</italic> where time
  derivatives are limited to first order):</p>
  <p><named-content id="eqU003Aibvp" content-type="equation"><disp-formula><alternatives>
  <tex-math><![CDATA[\label{eq:ibvp}
  \begin{cases}
  \partial_t u = F(u, \boldsymbol{\nabla}(u) \dots) & \text{in} \quad \Omega \\
  u(t_0, \boldsymbol{x}) = u_0(\boldsymbol{x}) & \text{on} \quad \Omega_{t_0}\\
  u(t,\boldsymbol{x}) = u_N(t,\boldsymbol{x}) & \text{on} \quad \partial\Omega_N\\
  \boldsymbol{\nabla}(u(t,\boldsymbol{x})) = \boldsymbol{j}(t,\boldsymbol{x}) & \text{on} \quad \partial\Omega_D,
  \end{cases}]]></tex-math>
  <mml:math display="block" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mo stretchy="true" form="prefix">{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mi>∂</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>∇</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mi>…</mml:mi><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">in</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>Ω</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">on</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:msub><mml:mi>Ω</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">on</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mstyle mathvariant="bold"><mml:mi>∇</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐣</mml:mi></mml:mstyle><mml:mrow><mml:mo stretchy="true" form="prefix">(</mml:mo><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mstyle mathvariant="bold"><mml:mi>𝐱</mml:mi></mml:mstyle><mml:mo stretchy="true" form="postfix">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext mathvariant="normal">on</mml:mtext><mml:mspace width="1.0em"></mml:mspace><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>D</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></alternatives></disp-formula></named-content></p>
  <p>the integration domain and its boundaries can be split into
  one-dimension <italic>time-</italic>line and orthogonal
  <italic>spatial</italic> hyperplanes: <inline-formula><alternatives>
  <tex-math><![CDATA[\Omega = [t_0, t_{\infty}]\times\Omega_{t_0}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>Ω</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>∞</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msub><mml:mi>Ω</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>,
  <inline-formula><alternatives>
  <tex-math><![CDATA[\partial\Omega_N=[t_0, t_{\infty}]\times\partial\Omega_{t_0N}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>∞</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mi>N</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>
  and <inline-formula><alternatives>
  <tex-math><![CDATA[\partial\Omega_D=[t_0, t_{\infty}]\times\partial\Omega_{t_0D}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mi>D</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true" form="prefix">[</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>∞</mml:mi></mml:msub><mml:mo stretchy="true" form="postfix">]</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi>∂</mml:mi><mml:msub><mml:mi>Ω</mml:mi><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mi>D</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>.
  Assuming that the spatial hyperplane <inline-formula><alternatives>
  <tex-math><![CDATA[\Omega_{t_0}]]></tex-math>
  <mml:math display="inline" xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:msub><mml:mi>Ω</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:msub></mml:math></alternatives></inline-formula>
  does not evolve with time, such <italic>IBVPs</italic> can be
  implemented by coupling the resolution of time-dependent
  <italic>BVPs</italic> with time-integration schemes.</p>
  <sec id="scope-and-range">
    <title>Scope and range</title>
    <p><bold>In terms of equations:</bold> In its current version
    (1.0.0), BVPy can handle non-homogeneous second order Partial
    Differential Equations (<italic>PDEs</italic>) with potentially
    non-linear first order terms but linear higher order ones. The
    unknowns within these <italic>PDEs</italic> can be scalar fields,
    vector fields or second-order tensor fields. Systems of coupled
    <italic>PDEs</italic> can be implemented. We extended the initial
    notion of <italic>BVP</italic> to encompass <italic>IBVPs</italic>
    featuring first-order time derivatives, as described by
    <xref alt="Equation 2" rid="eqU003Aibvp">Equation 2</xref>.</p>
    <p><bold>In terms of domains:</bold> BVPy provides geometrical
    primitives to generate simple 2D and 3D domains (rectangles, cubes,
    ellipoids, torus, …) as well as basic Constructive Solid Geometry
    (<italic>CSG</italic>) functionalities (addition, substraction and
    intersection) to combine these primitives into more complex
    geometries. The library can also handle triangulated, as well as
    piecewise-polygonal, meshes generated elsewhere. In the current
    version, <monospace>.txt</monospace> , <monospace>.ply</monospace>
    and <monospace>.obj</monospace> files are accepted as inputs. This
    versatility comes however with a drawback, for the domain generation
    procedure is not yet compatible with parallelization processes.</p>
    <p><bold>In terms of boundary conditions:</bold> Classic
    <italic>Dirichlet</italic> and <italic>Neumann</italic> boundary
    conditions can be implemented as well as combinations of these along
    the domain boundaries. Periodic boundary conditions can also be
    defined.</p>
  </sec>
  <sec id="organization">
    <title>Organization</title>
    <p>BVPy has been developed and organized as close as possible to the
    <italic>BVP</italic> and <italic>IBVP</italic> mathematical
    formulations given in
    <xref alt="Equation 1" rid="eqU003Abvp">Equation 1</xref> and
    <xref alt="Equation 2" rid="eqU003Aibvp">Equation 2</xref>. The
    library is built around the following key components, see
    <xref alt="Figure 1" rid="figU003Aschema">Figure 1</xref>:</p>
    <list list-type="bullet">
      <list-item>
        <p>Two main classes, named <monospace>BVP</monospace> and
        <monospace>IBVP</monospace>, that respectively encapsulate
        FEniCS implementations of
        <xref alt="Equation 1" rid="eqU003Abvp">Equation 1</xref> &amp;
        <xref alt="Equation 2" rid="eqU003Aibvp">Equation 2</xref>.</p>
      </list-item>
      <list-item>
        <p>Three main modules, <monospace>bvpy.domains</monospace>,
        <monospace>bvpy.vforms</monospace> and
        <monospace>bvpy.boundary_conditions</monospace> emulating the
        corresponding mathematical components of a
        <italic>bvp</italic>.</p>
      </list-item>
      <list-item>
        <p>A <monospace>bvpy.solvers</monospace> module where a
        collection of FEniCS-based linear and non-linear solvers are
        available.</p>
      </list-item>
    </list>
    <p>Besides these main components, the
    <monospace>bvpy.utils</monospace> module gathers some useful
    “housekeeping” functions regrouped thematically into sub-modules,
    <italic>e.g.</italic> <monospace>visu</monospace>,
    <monospace>io</monospace>… See online documentation.</p>
    <fig>
      <caption><p>Representation of the main modules and submodules
      forming the BVPy library.
      <styled-content id="figU003Aschema"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="./fig1.png" xlink:title="" />
    </fig>
  </sec>
  <sec id="example-of-use">
    <title>Example of use</title>
    <p>The following example is loosely inspired by
    (<xref alt="Zhao et al., 2020" rid="ref-ZhaoU003A2020" ref-type="bibr">Zhao
    et al., 2020</xref>). The idea is to estimate the mechanical stress
    distribution within a 2D cross section of a pressurized plant tissue
    with heterogeneous rigidity. The goal here is to illustrate how
    parsimonious, intuitive and yet insightful, BVPy simulations can
    be.</p>
    <code language="python">from bvpy import *

# domain definition and meshing
sepal = CustomPolygonalDomain.read(&quot;./sepal.ply&quot;, cell_size=.5, dim=2)
sepal.discretize()

# instanciation of an heterogeneous linear elastic model
tissue_rigidities = {0: 100, 1: 300}
young_moduli = HeterogeneousParameter(sepal.cdata, tissue_rigidities)
elastic_response = LinearElasticForm(young=young_moduli, source=[0, 0],
                                     plane_stress=True)

# loading forces implemented as Neumann boundary conditions
inner_pressure = 1
pressure_forces = NormalNeumann(val=inner_pressure, boundary='all')

# problem definition and resolution
prblm = BVP(sepal, elastic_response, pressure_forces)
prblm.solve(linear_solver='gmres', absolute_tolerance=1e-2)

# stress field computation
displacement = prblm.solution
stress = elastic_response.stress(displacement)</code>
    <p>The recorded results can be processed by third-party software,
    <italic>e.g.</italic>
    <xref alt="Figure 2" rid="figU003Asepal_stress">Figure 2</xref>
    shows the visualization of the corresponding stress field within the
    Paraview software.</p>
    <fig>
      <caption><p>Example of a stress field computed from an
      heterogeneous linear elastic model applied to a piecewise
      polygonal domain. The epidermis layer has been assumed three times
      stiffer than the inner tissues. A corresponding distinction can be
      seen within the computed stress field.
      <styled-content id="figU003Asepal_stress"></styled-content></p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="./fig2.png" xlink:title="" />
    </fig>
    <p>More examples are available in the tutorial section of the online
    documentation.</p>
  </sec>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>The authors would like to thank Guillaume Cerutti and Jonathan
  Legrand for their numerous advices and their technical guidance during
  the maturation of this work.</p>
  <p>This work was supported by the Inria grant <italic>ADT
  Gnomon</italic>.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-LoggU003A2012">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Logg</surname><given-names>Anders</given-names></name>
          <name><surname>Mardal</surname><given-names>Kent-Andre</given-names></name>
          <name><surname>Wells</surname><given-names>Garth</given-names></name>
        </person-group>
        <source>Automated solution of differential equations by the finite element method: The FEniCS book</source>
        <publisher-name>Springer Publishing Company, Incorporated</publisher-name>
        <year iso-8601-date="2012">2012</year>
        <isbn>3642230989</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Maas_2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Maas</surname><given-names>Steve A.</given-names></name>
          <name><surname>Ellis</surname><given-names>Benjamin J.</given-names></name>
          <name><surname>Ateshian</surname><given-names>Gerard A.</given-names></name>
          <name><surname>Weiss</surname><given-names>Jeffrey A.</given-names></name>
        </person-group>
        <article-title>FEBio: Finite Elements for Biomechanics</article-title>
        <source>Journal of Biomechanical Engineering</source>
        <year iso-8601-date="2012">2012</year>
        <volume>134</volume>
        <issue>1</issue>
        <issn>0148-0731</issn>
        <pub-id pub-id-type="doi">10.1115/1.4005694</pub-id>
        <pub-id pub-id-type="pmid">22482660</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-hecht_2012">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Hecht</surname><given-names>F.</given-names></name>
        </person-group>
        <article-title>New development in FreeFem++</article-title>
        <source>J. Numer. Math.</source>
        <year iso-8601-date="2012">2012</year>
        <volume>20</volume>
        <issue>3-4</issue>
        <issn>1570-2820</issn>
        <uri>https://freefem.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-SapalaU003A2018gl">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sapala</surname><given-names>Aleksandra</given-names></name>
          <name><surname>Runions</surname><given-names>Adam</given-names></name>
          <name><surname>Routier-Kierzkowska</surname><given-names>Anne-Lise</given-names></name>
          <name><surname>Gupta</surname><given-names>Mainak Das</given-names></name>
          <name><surname>Hong</surname><given-names>Lilan</given-names></name>
          <name><surname>Hofhuis</surname><given-names>Hugo</given-names></name>
          <name><surname>Verger</surname><given-names>Stéphane</given-names></name>
          <name><surname>Mosca</surname><given-names>Gabriella</given-names></name>
          <name><surname>Li</surname><given-names>Chun-Biu</given-names></name>
          <name><surname>Hay</surname><given-names>Angela</given-names></name>
          <name><surname>Hamant</surname><given-names>Olivier</given-names></name>
          <name><surname>Roeder</surname><given-names>Adrienne Hk</given-names></name>
          <name><surname>Tsiantis</surname><given-names>Miltos</given-names></name>
          <name><surname>Prusinkiewicz</surname><given-names>Przemyslaw</given-names></name>
          <name><surname>Smith</surname><given-names>Richard S</given-names></name>
        </person-group>
        <article-title>Why plants make puzzle cells, and how their shape emerges.</article-title>
        <source>eLife</source>
        <year iso-8601-date="2018">2018</year>
        <volume>7</volume>
        <pub-id pub-id-type="doi">10.7554/elife.32794</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-deReuilleU003A2015gu">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Reuille</surname><given-names>Pierre Barbier de</given-names></name>
          <name><surname>Routier-Kierzkowska</surname><given-names>Anne-Lise</given-names></name>
          <name><surname>Kierzkowski</surname><given-names>Daniel</given-names></name>
          <name><surname>Bassel</surname><given-names>George W</given-names></name>
          <name><surname>Schuepbach</surname><given-names>Thierry</given-names></name>
          <name><surname>Tauriello</surname><given-names>Gerardo</given-names></name>
          <name><surname>Bajpai</surname><given-names>Namrata</given-names></name>
          <name><surname>Strauss</surname><given-names>Soeren</given-names></name>
          <name><surname>Weber</surname><given-names>Alain</given-names></name>
          <name><surname>Kiss</surname><given-names>Annamaria</given-names></name>
          <name><surname>Burian</surname><given-names>Agata</given-names></name>
          <name><surname>Hofhuis</surname><given-names>Hugo</given-names></name>
          <name><surname>Sapala</surname><given-names>Aleksandra</given-names></name>
          <name><surname>Lipowczan</surname><given-names>Marcin</given-names></name>
          <name><surname>Heimlicher</surname><given-names>Maria B</given-names></name>
          <name><surname>Robinson</surname><given-names>Sarah</given-names></name>
          <name><surname>Bayer</surname><given-names>Emmanuelle M</given-names></name>
          <name><surname>Basler</surname><given-names>Konrad</given-names></name>
          <name><surname>Koumoutsakos</surname><given-names>Petros</given-names></name>
          <name><surname>Roeder</surname><given-names>Adrienne H K</given-names></name>
          <name><surname>Aegerter-Wilmsen</surname><given-names>Tinri</given-names></name>
          <name><surname>Nakayama</surname><given-names>Naomi</given-names></name>
          <name><surname>Tsiantis</surname><given-names>Miltos</given-names></name>
          <name><surname>Hay</surname><given-names>Angela</given-names></name>
          <name><surname>Kwiatkowska</surname><given-names>Dorota</given-names></name>
          <name><surname>Xenarios</surname><given-names>Ioannis</given-names></name>
          <name><surname>Kuhlemeier</surname><given-names>Cris</given-names></name>
          <name><surname>Smith</surname><given-names>Richard S</given-names></name>
        </person-group>
        <article-title>MorphoGraphX: A platform for quantifying morphogenesis in 4D</article-title>
        <source>eLife</source>
        <year iso-8601-date="2015">2015</year>
        <volume>4</volume>
        <pub-id pub-id-type="doi">10.7554/elife.05864</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-faureU003Ahal-00681539">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Faure</surname><given-names>François</given-names></name>
          <name><surname>Duriez</surname><given-names>Christian</given-names></name>
          <name><surname>Delingette</surname><given-names>Hervé</given-names></name>
          <name><surname>Allard</surname><given-names>Jérémie</given-names></name>
          <name><surname>Gilles</surname><given-names>Benjamin</given-names></name>
          <name><surname>Marchesseau</surname><given-names>Stéphanie</given-names></name>
          <name><surname>Talbot</surname><given-names>Hugo</given-names></name>
          <name><surname>Courtecuisse</surname><given-names>Hadrien</given-names></name>
          <name><surname>Bousquet</surname><given-names>Guillaume</given-names></name>
          <name><surname>Peterlik</surname><given-names>Igor</given-names></name>
          <name><surname>Cotin</surname><given-names>Stéphane</given-names></name>
        </person-group>
        <article-title>SOFA: A Multi-Model Framework for Interactive Physical Simulation</article-title>
        <source>Soft Tissue Biomechanical Modeling for Computer Assisted Surgery</source>
        <person-group person-group-type="editor">
          <name><surname>Payan</surname><given-names>Yohan</given-names></name>
        </person-group>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2012-06">2012</year><month>06</month>
        <volume>11</volume>
        <uri>https://hal.inria.fr/hal-00681539</uri>
        <pub-id pub-id-type="doi">10.1007/8415\_2012\_125</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-GeuzaineU003A2009">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Geuzaine</surname><given-names>Christophe</given-names></name>
          <name><surname>Remacle</surname><given-names>Jean‐François</given-names></name>
        </person-group>
        <article-title>Gmsh: A 3‐D finite element mesh generator with built‐in pre‐ and post‐processing facilities</article-title>
        <source>International Journal for Numerical Methods in Engineering</source>
        <year iso-8601-date="2009">2009</year>
        <volume>79</volume>
        <issue>11</issue>
        <issn>1097-0207</issn>
        <pub-id pub-id-type="doi">10.1002/nme.2579</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-ZhaoU003A2020">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Zhao</surname><given-names>Feng</given-names></name>
          <name><surname>Du</surname><given-names>Fei</given-names></name>
          <name><surname>Oliveri</surname><given-names>Hadrien</given-names></name>
          <name><surname>Zhou</surname><given-names>Lüwen</given-names></name>
          <name><surname>Ali</surname><given-names>Olivier</given-names></name>
          <name><surname>Chen</surname><given-names>Wenqian</given-names></name>
          <name><surname>Feng</surname><given-names>Shiliang</given-names></name>
          <name><surname>Wang</surname><given-names>Qingqing</given-names></name>
          <name><surname>Lü</surname><given-names>Shouqin</given-names></name>
          <name><surname>Long</surname><given-names>Mian</given-names></name>
          <name><surname>Schneider</surname><given-names>René</given-names></name>
          <name><surname>Sampathkumar</surname><given-names>Arun</given-names></name>
          <name><surname>Godin</surname><given-names>Christophe</given-names></name>
          <name><surname>Traas</surname><given-names>Jan</given-names></name>
          <name><surname>Jiao</surname><given-names>Yuling</given-names></name>
        </person-group>
        <article-title>Microtubule-Mediated Wall Anisotropy Contributes to Leaf Blade Flattening</article-title>
        <source>Current Biology</source>
        <year iso-8601-date="2020">2020</year>
        <issn>0960-9822</issn>
        <pub-id pub-id-type="doi">10.1016/j.cub.2020.07.076</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-SchlomerU003A2020">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Schlömer</surname><given-names>Nico</given-names></name>
          <name><surname>McBain</surname><given-names>G. D.</given-names></name>
          <name><surname>Luu</surname><given-names>Keurfon</given-names></name>
          <name><surname>christos</surname></name>
          <name><surname>Li</surname><given-names>Tianyi</given-names></name>
          <name><surname>Keilegavlen</surname><given-names>Eirik</given-names></name>
          <name><surname>Ferrándiz</surname><given-names>Vicente Mataix</given-names></name>
          <name><surname>Barnes</surname><given-names>Chris</given-names></name>
          <name><surname>Lukeš</surname><given-names>Vladimír</given-names></name>
          <name><surname>Dalcin</surname><given-names>Lisandro</given-names></name>
          <name><surname>eolianoe</surname></name>
          <name><surname>Wagner</surname><given-names>Nils</given-names></name>
          <name><surname>Jansen</surname><given-names>Miche</given-names></name>
          <name><surname>Gupta</surname><given-names>Abhinav</given-names></name>
          <name><surname>Müller</surname><given-names>Sebastian</given-names></name>
          <name><surname>Woodsend</surname><given-names>Brénainn</given-names></name>
          <name><surname>Krande</surname></name>
          <name><surname>Schwarz</surname><given-names>Leo</given-names></name>
          <name><surname>Blechta</surname><given-names>Jan</given-names></name>
          <name><surname>Coutinho</surname><given-names>Chris</given-names></name>
          <name><surname>Beurle</surname><given-names>Darcy</given-names></name>
          <name><surname>ffilotto</surname></name>
          <name><surname>Dokken</surname><given-names>Jørgen Schartum</given-names></name>
          <name><surname>so1291</surname></name>
          <name><surname>Cervone</surname><given-names>Antonio</given-names></name>
          <name><surname>Shrimali</surname><given-names>Bhavesh</given-names></name>
          <name><surname>Bill</surname></name>
          <name><surname>Jones</surname><given-names>Dave</given-names></name>
          <name><surname>Cereijo</surname><given-names>Iban</given-names></name>
          <name><surname>Harsch</surname><given-names>Jonas</given-names></name>
        </person-group>
        <source>Nschloe/meshio v4.3.1</source>
        <publisher-name>Zenodo</publisher-name>
        <year iso-8601-date="2020-10">2020</year><month>10</month>
        <uri>https://doi.org/10.5281/zenodo.4090832</uri>
        <pub-id pub-id-type="doi">10.5281/zenodo.4090832</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
