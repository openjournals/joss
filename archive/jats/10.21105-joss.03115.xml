<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">3115</article-id>
<article-id pub-id-type="doi">10.21105/joss.03115</article-id>
<title-group>
<article-title>PyGModels: A Python package for exploring Probabilistic
Graphical Models with Graph Theoretical Structures</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-1552-8938</contrib-id>
<string-name>Doğu Kaan ERASLAN</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>École Pratique des Hautes Études, Université PSL, Paris,
France</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2021-02-02">
<day>2</day>
<month>2</month>
<year>2021</year>
</pub-date>
<volume>6</volume>
<issue>61</issue>
<fpage>3115</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>probabilistic graphical models</kwd>
<kwd>Bayesian statistics</kwd>
<kwd>Probabilistic inference</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Probabilistic Graphical Models (PGMs) are a marriage between
  “graphs” from graph theory and “probability” from statistics and
  probability theory. While PGMs are widely used in many fields, we
  noticed that most existing PGM libraries are implement in a way that
  doesn’t take full advantage of their graphical nature.
  <monospace>PyGModels</monospace>’ value proposition is that it
  faithfully implements the graphical nature of PGMs, thereby giving
  <monospace>PyGModels</monospace>’ instantiated objects both
  graph-theoretical and statistical properties, which allows users to
  explore and test inference algorithms that are rooted in graph theory
  or statistics. <monospace>PyGModels</monospace> also implements
  several algorithms of interest on Lauritzen-Wermuth-Frydenberg (LWF)
  chain graphs, also known as mixed graphs.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Though the students of computer science or statistics might find
  pedagogical value going through source code along with a textbook on
  probabilistic graphical models (for example
  <xref alt="Cowell, 2005" rid="ref-Cowell_2005" ref-type="bibr">Cowell,
  2005</xref>;
  <xref alt="Koller &amp; Friedman, 2009" rid="ref-Koller_Friedman_2009" ref-type="bibr">Koller
  &amp; Friedman, 2009</xref>;
  <xref alt="Sucar, 2015" rid="ref-Sucar_2015" ref-type="bibr">Sucar,
  2015</xref>), <monospace>PyGModels</monospace> is mainly targeted at
  researchers. Let us demonstrate the need for
  <monospace>PyGModels</monospace> with a use case. Given a set of
  categorical random variables in the form of a function specified by a
  probability distribution, a set of edges that encode a certain
  independence assumption over these random variables, and a set of
  factors that factorizes this probability distribution over the graph,
  <monospace>PyGModels</monospace> is designed with the following use
  cases in mind:</p>
  <list list-type="order">
    <list-item>
      <p>computation of the posterior probability distribution or most
      probable explanation conditioned on evidence, and</p>
    </list-item>
    <list-item>
      <p>the development of new inference algorithms.</p>
    </list-item>
  </list>
  <p>The real forte of <monospace>PyGModels</monospace> is its support
  for implementing new algorithms due to its lightweight nature and its
  direct implementation of statistical and graph theoretic features in
  the same base class. We mostly follow Koller &amp; Friedman
  (<xref alt="2009" rid="ref-Koller_Friedman_2009" ref-type="bibr">2009</xref>)
  for statistical conventions, definitions, and inference algorithms.
  For graph theoretic conventions, we follow Diestel
  (<xref alt="2017" rid="ref-Diestel_2017" ref-type="bibr">2017</xref>),
  with algorithms from Erciyes
  (<xref alt="2018" rid="ref-Erciyes_2018" ref-type="bibr">2018</xref>)
  and Even &amp; Even
  (<xref alt="2012" rid="ref-Even_Guy_Even_2012" ref-type="bibr">2012</xref>).
  Throughout the code, exact pages for algorithmic references are cited
  in the docstrings for relevant functions.</p>
  <p>If the independence assumptions over the random variables requires
  the graph to be a LWF chain graph where the graph can have both
  directed and undirected edges, <monospace>PyGModels</monospace> can
  also (a) decompose the chain graph into chain components, (b) moralize
  the chain graph into a Markov Network, and (c) decompose the chain
  graph into Conditional Random Fields.</p>
  <p>The entire library depends only on Python standard library which
  makes it easily extensible, and straightforward to integrate or adapt
  to other projects. Through its rigorous adoption of mathematical
  definitions of involved concepts, it becomes feasible to extend
  arbitrary factors through their pointwise product, or apply common
  graph analysis algorithms such as finding articulation points or
  bridges, or finding an optimal path defined by a cost function.</p>
</sec>
<sec id="applications-and-similar-works">
  <title>Applications and Similar Works</title>
  <p>PGMs are known for their wide range of applications in computer
  vision, information retrieval, disease diagnosis and more recently, in
  the context of this author’s PhD thesis, annotations of ancient
  documents.</p>
  <p>Other open source Python libraries implementing PGMs include:</p>
  <list list-type="bullet">
    <list-item>
      <p><monospace>pyGM</monospace> (see
      <xref alt="Ihler, 2020" rid="ref-Ihler_2020" ref-type="bibr">Ihler,
      2020</xref>)</p>
    </list-item>
    <list-item>
      <p><monospace>pgmPy</monospace> (see
      <xref alt="Indap, 2013" rid="ref-Indap_2013" ref-type="bibr">Indap,
      2013</xref>)</p>
    </list-item>
    <list-item>
      <p><monospace>pgm</monospace> (see
      <xref alt="Rauber, 2019" rid="ref-Rauber_2019" ref-type="bibr">Rauber,
      2019</xref>)</p>
    </list-item>
    <list-item>
      <p><monospace>pgmpy</monospace> (see
      <xref alt="Ankan &amp; Panda, 2015b" rid="ref-Ankan_Panda_2015a" ref-type="bibr">Ankan
      &amp; Panda, 2015b</xref>)</p>
    </list-item>
    <list-item>
      <p><monospace>pyfac</monospace> (see
      <xref alt="Lester, 2016" rid="ref-Lester_2016" ref-type="bibr">Lester,
      2016</xref>)</p>
    </list-item>
    <list-item>
      <p><monospace>pomegranate</monospace> (see
      <xref alt="Schreiber, 2018" rid="ref-Schreiber_2018" ref-type="bibr">Schreiber,
      2018</xref>)</p>
    </list-item>
  </list>
  <p>The most popular of these are <monospace>pgmpy</monospace> and
  <monospace>pomegranate</monospace>, both of which have been used in
  several publications (see
  <xref alt="Ankan &amp; Panda, 2015b" rid="ref-Ankan_Panda_2015a" ref-type="bibr">Ankan
  &amp; Panda, 2015b</xref>,
  <xref alt="2015a" rid="ref-Ankan_Panda_2015b" ref-type="bibr">2015a</xref>;
  <xref alt="Schreiber, 2018" rid="ref-Schreiber_2018" ref-type="bibr">Schreiber,
  2018</xref>). Their functionalities are covered with nice test suites
  as well. Overall both of them are reliable libraries for using PGMs in
  production.</p>
  <p><monospace>pyGM</monospace> and <monospace>pgm</monospace> are
  particularly well organized alternatives to
  <monospace>PyGModels</monospace>, with <monospace>pyGM</monospace>
  being slightly more reliable than <monospace>pgm</monospace> due to
  its test suite. <monospace>pyfac</monospace> is primarily focused on
  inference over factor graphs and <monospace>pgmPy</monospace>’s
  development is inactive (last commit dates to 2013). We will make a
  small comparison with <monospace>pgmpy</monospace> most of our remarks
  hold for other alternatives as well.</p>
  <p><monospace>PyGModels</monospace> distinguishes from
  <monospace>pgmpy</monospace> by its lightweight nature
  (<monospace>PyGModels</monospace> depends only on python 3.6 standard
  library). Our test suite cites its source for most of the expected
  values in the function docstrings. Factors are specified by a set of
  random variables and a function whose domain is the Cartesian product
  of codomains of random variables. In all of the libraries above, a
  factor is specified through an array of values. This has no direct
  implications on the output. However, it has implications on the
  evaluation order of operations. Our implementation is lazier and it
  conforms to the definition provided by Koller &amp; Friedman (see
  <xref alt="Koller &amp; Friedman, 2009, pp. 106–107" rid="ref-Koller_Friedman_2009" ref-type="bibr">Koller
  &amp; Friedman, 2009, pp. 106–107</xref>). The last aspect is also the
  case for other packages, however <monospace>PyGModels</monospace>
  differs from them with respect to the data structure used in the
  implementation.</p>
  <p>Another key feature, is <monospace>PyGModels</monospace>’ support
  of inference on LWF chain graphs. The theoretical foundations of these
  graphs are best explained by Lauritzen
  (<xref alt="1996" rid="ref-Lauritzen_1996" ref-type="bibr">1996</xref>),
  and its causal interpretation and common misconceptions are discussed
  by Lauritzen &amp; Richardson
  (<xref alt="2002" rid="ref-Lauritzen_Richardson_2002" ref-type="bibr">2002</xref>).
  Inference strategies over chain graphs are best exposed by Cowell
  (<xref alt="2005" rid="ref-Cowell_2005" ref-type="bibr">2005</xref>),
  and more recently by Dechter
  (<xref alt="2019" rid="ref-Dechter_2019" ref-type="bibr">2019</xref>).
  These are also known as mixed models or partially directed acyclic
  graphs (see
  <xref alt="Koller &amp; Friedman, 2009, p. 37" rid="ref-Koller_Friedman_2009" ref-type="bibr">Koller
  &amp; Friedman, 2009, p. 37</xref>). With
  <monospace>PyGModels</monospace>, once we have the necessary set of
  factors, we can simply do inference over chain graphs just as we do
  over other PGMs like Bayesian Networks and Markov Random Fields. We
  implement several algorithms of interest for chain graphs such as
  decomposition of chain graphs to chain components, moralization of
  chain graphs.</p>
</sec>
<sec id="acknowledgement">
  <title>Acknowledgement</title>
  <p>We acknowledge contributions from Nihan Özcan on her help with
  documentation process. We also acknowledge AOROC Laboratory of EPHE,
  PSL University for providing us the necessary tooling support during
  the development phase of this library.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-Ankan_Panda_2015a">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Ankan</surname><given-names>Ankur</given-names></name>
          <name><surname>Panda</surname><given-names>Abinash</given-names></name>
        </person-group>
        <article-title>Pgmpy: Probabilistic graphical models using python</article-title>
        <source>Proceedings of the 14th python in science conference (SCIPY 2015)</source>
        <year iso-8601-date="2015">2015</year>
        <pub-id pub-id-type="doi">10.25080/Majora-7b98e3ed-001 </pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Ankan_Panda_2015b">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Ankan</surname><given-names>Ankur</given-names></name>
          <name><surname>Panda</surname><given-names>Abinash</given-names></name>
        </person-group>
        <source>Mastering probabilistic graphical models using python: Master probabilistic graphical models by learning through real-world problems and illustrative code examples in python</source>
        <year iso-8601-date="2015">2015</year>
        <isbn>978-1-78439-468-4</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Cowell_2005">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Cowell</surname><given-names>Robert G</given-names></name>
        </person-group>
        <source>Probabilistic networks and expert systems</source>
        <publisher-name>Springer-Verlag</publisher-name>
        <year iso-8601-date="2005">2005</year>
        <uri>http://accesbib.uqam.ca/cgi-bin/bduqam/transit.pl?&amp;noMan=25126878</uri>
      </element-citation>
    </ref>
    <ref id="ref-Dechter_2019">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Dechter</surname><given-names>Rina</given-names></name>
        </person-group>
        <source>Reasoning with probabilistic and deterministic graphical models: Exact algorithms</source>
        <year iso-8601-date="2019">2019</year>
        <isbn>978-1-68173-492-7</isbn>
        <pub-id pub-id-type="doi">10.2200/S00893ED2V01Y201901AIM041</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Diestel_2017">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Diestel</surname><given-names>Reinhard</given-names></name>
        </person-group>
        <source>Graph theory</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2017">2017</year>
        <isbn>978-3-662-53621-6</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Erciyes_2018">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Erciyes</surname><given-names>K.</given-names></name>
        </person-group>
        <source>Guide to graph algorithms: Sequential, parallel and distributed</source>
        <publisher-name>Springer International Publishing : Imprint: Springer</publisher-name>
        <year iso-8601-date="2018">2018</year>
        <isbn>978-3-319-73235-0</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-319-73235-0</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Even_Guy_Even_2012">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Even</surname><given-names>Shimon</given-names></name>
          <name><surname>Even</surname><given-names>Guy</given-names></name>
        </person-group>
        <source>Graph algorithms</source>
        <publisher-name>Cambridge University Press</publisher-name>
        <year iso-8601-date="2012">2012</year>
        <isbn>978-0-521-51718-8</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Ihler_2020">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Ihler</surname><given-names>Alexander</given-names></name>
        </person-group>
        <source>pyGM</source>
        <year iso-8601-date="2020-10">2020</year><month>10</month>
        <uri>https://github.com/ihler/pyGM</uri>
      </element-citation>
    </ref>
    <ref id="ref-Indap_2013">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Indap</surname><given-names>Amit</given-names></name>
        </person-group>
        <source>pgmPy</source>
        <year iso-8601-date="2013-08">2013</year><month>08</month>
        <uri>https://github.com/indapa/pgmPy</uri>
      </element-citation>
    </ref>
    <ref id="ref-Koller_Friedman_2009">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Koller</surname><given-names>Daphne</given-names></name>
          <name><surname>Friedman</surname><given-names>Nir</given-names></name>
        </person-group>
        <source>Probabilistic graphical models: Principles and techniques</source>
        <publisher-name>MIT Press</publisher-name>
        <year iso-8601-date="2009">2009</year>
        <isbn>978-0-262-01319-2</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Lauritzen_1996">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Lauritzen</surname><given-names>Steffen L.</given-names></name>
        </person-group>
        <source>Graphical models</source>
        <publisher-name>Clarendon Press ; Oxford University Press</publisher-name>
        <year iso-8601-date="1996">1996</year>
        <isbn>978-0-19-852219-5</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Lauritzen_Richardson_2002">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Lauritzen</surname><given-names>Steffen L.</given-names></name>
          <name><surname>Richardson</surname><given-names>Thomas S.</given-names></name>
        </person-group>
        <article-title>Chain graph models and their causal interpretations</article-title>
        <source>Journal of the Royal Statistical Society: Series B (Statistical Methodology)</source>
        <year iso-8601-date="2002-08">2002</year><month>08</month>
        <volume>64</volume>
        <issue>3</issue>
        <issn>13697412, 14679868</issn>
        <uri>http://doi.wiley.com/10.1111/1467-9868.00340</uri>
        <pub-id pub-id-type="doi">10.1111/1467-9868.00340</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Lester_2016">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Lester</surname><given-names>Ryan</given-names></name>
        </person-group>
        <source>Pyfac</source>
        <year iso-8601-date="2016-05">2016</year><month>05</month>
        <uri>https://github.com/rdlester/pyfac</uri>
      </element-citation>
    </ref>
    <ref id="ref-Rauber_2019">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Rauber</surname><given-names>Paulo</given-names></name>
        </person-group>
        <source>Pgm</source>
        <year iso-8601-date="2019-03">2019</year><month>03</month>
        <uri>https://github.com/paulorauber/pgm</uri>
      </element-citation>
    </ref>
    <ref id="ref-Sucar_2015">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Sucar</surname><given-names>Luis Enrique</given-names></name>
        </person-group>
        <source>Probabilistic graphical models: Principles and applications</source>
        <publisher-name>Springer</publisher-name>
        <year iso-8601-date="2015">2015</year>
        <isbn>978-1-4471-6698-6</isbn>
      </element-citation>
    </ref>
    <ref id="ref-Schreiber_2018">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Schreiber</surname><given-names>Jacob</given-names></name>
        </person-group>
        <article-title>Pomegranate: Fast and flexible probabilistic modeling in python</article-title>
        <source>arXiv:1711.00137 [cs, stat]</source>
        <year iso-8601-date="2018-02">2018</year><month>02</month>
        <uri>http://arxiv.org/abs/1711.00137</uri>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
