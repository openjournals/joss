<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">640</article-id>
<article-id pub-id-type="doi">10.21105/joss.00640</article-id>
<title-group>
<article-title>MCMCvis: Tools to Visualize, Manipulate, and Summarize
MCMC Output</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6343-3311</contrib-id>
<string-name>Casey Youngflesh</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Stony Brook University</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2018-02-16">
<day>16</day>
<month>2</month>
<year>2018</year>
</pub-date>
<volume>3</volume>
<issue>24</issue>
<fpage>640</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>MCMC</kwd>
<kwd>Bayesian</kwd>
<kwd>Visualization</kwd>
<kwd>PPO</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>MCMCvis is an R
  (<xref alt="R Core Team, 2018" rid="ref-R" ref-type="bibr">R Core
  Team, 2018</xref>) package to used to visualize, manipulate, and
  summarize MCMC output. MCMC output may be derived from Bayesian model
  output fit with JAGS
  (<xref alt="Plummer, 2003" rid="ref-JAGS" ref-type="bibr">Plummer,
  2003</xref>), Stan
  (<xref alt="Carpenter et al., 2017" rid="ref-Stan" ref-type="bibr">Carpenter
  et al., 2017</xref>), or other MCMC samplers. MCMCvis was designed to
  perform key functions for MCMC analysis using minimal code, in order
  to free up time/brainpower for interpretation of analysis results.
  Functions support simple and straightforward subsetting of model
  parameters within the calls, and produce presentable and
  ‘publication-ready’ output.</p>
  <p>The package contains five functions:</p>
  <list list-type="bullet">
    <list-item>
      <p>MCMCsummary - summarize MCMC output for particular parameters
      of interest</p>
    </list-item>
    <list-item>
      <p>MCMCpstr - summarize MCMC output for particular parameters of
      interest while preserving parameter structure</p>
    </list-item>
    <list-item>
      <p>MCMCtrace - create trace and density plots of MCMC chains for
      particular parameters of interest</p>
    </list-item>
    <list-item>
      <p>MCMCchains - easily extract posterior chains from MCMC output
      for particular parameters of interest</p>
    </list-item>
    <list-item>
      <p>MCMCplot - create caterpillar plots from MCMC output for
      particular parameters of interest</p>
    </list-item>
  </list>
  <sec id="installation">
    <title>Installation</title>
    <p>The released version of MCMCvis can be installed from CRAN
    with:</p>
    <preformat>install.packages('MCMCvis')</preformat>
    <p>Or the latest, development version from Github with:</p>
    <preformat>install.packages('devtools')
devtools::install_github('caseyyoungflesh/MCMCvis', build_vignettes = TRUE)</preformat>
  </sec>
  <sec id="vignette">
    <title>Vignette</title>
    <p>The vignette for this package can be run using:</p>
    <preformat>vignette('MCMCvis')</preformat>
  </sec>
  <sec id="examples">
    <title>Examples</title>
    <sec id="summarize">
      <title>Summarize</title>
      <p>Output summary information from MCMC output. Rhat values and
      number of effective samples (if specified) can be output to assess
      convergence of chains. Parameters of interest can be specified in
      order to only display the desired information.</p>
      <preformat>data(MCMC_data)
MCMCsummary(MCMC_data, params = 'beta', n.eff = TRUE)
#&gt;           mean   sd   2.5%    50%  97.5% Rhat n.eff
#&gt; beta[1]  -13.83 5.53 -24.67 -13.78  -2.96    1 18000
#&gt; beta[2]   -5.60 0.14  -5.88  -5.60  -5.32    1 17868
#&gt; beta[3]  -16.82 1.71 -20.15 -16.82 -13.45    1 18279
#&gt; beta[4]  -19.55 2.61 -24.59 -19.55 -14.41    1 17714
#&gt; beta[5]    8.68 5.26  -1.66   8.69  19.04    1 18435
#&gt; beta[6]    2.86 7.68 -12.04   2.83  17.93    1 17754
#&gt; beta[7]    2.06 7.78 -13.11   2.01  17.27    1 18000
#&gt; beta[8]  -15.95 3.62 -23.08 -15.93  -8.93    1 17904
#&gt; beta[9]    8.44 4.64  -0.69   8.44  17.58    1 17949
#&gt; beta[10]  16.69 4.36   8.24  16.66  25.40    1 18993</preformat>
    </sec>
    <sec id="evaluate">
      <title>Evaluate</title>
      <p>Assess convergence by checking posterior chains. Prior
      posterior overlap (PPO) can be easily assessed by supplying an
      argument to the function. The degree of overlap is plotted and
      calculated to determine how informative the data was for the
      posterior distribution, in relation to the prior distribution used
      in the model.</p>
      <preformat>PR &lt;- rnorm(15000, 0, 32)
MCMCtrace(MCMC_data, params = 'beta\\[1\\]', ISB = FALSE, priors = PR)</preformat>
      <graphic mimetype="image" mime-subtype="png" xlink:href="../Evaluate_ex.png" />
    </sec>
    <sec id="manipulate">
      <title>Manipulate</title>
      <p>Extract posterior chains for parameters of interest. In this
      way, large MCMC objects can be subset to smaller, more manageable,
      objects. Ouput can be in matrix format, or ‘mcmc.list’ format.</p>
      <preformat>just_betas_mcmc_obj &lt;- MCMCchains(MCMC_data, params = 'beta', mcmc.list = TRUE)</preformat>
    </sec>
    <sec id="visualize">
      <title>Visualize</title>
      <p>Easily visualize posterior output for parameters of interest
      using caterpillar plots. A number of plotting options exist to
      make sure the desired plot is created.</p>
      <preformat>MCMCplot(MCMC_data, 
       params = 'beta', 
       rank = TRUE,
       horiz = FALSE)</preformat>
      <graphic mimetype="image" mime-subtype="png" xlink:href="../Viz_ex.png" />
    </sec>
  </sec>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-R">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <string-name>R Core Team</string-name>
        </person-group>
        <source>R: A language and environment for statistical computing</source>
        <publisher-name>R Foundation for Statistical Computing</publisher-name>
        <publisher-loc>Vienna, Austria</publisher-loc>
        <year iso-8601-date="2018">2018</year>
        <uri>https://www.R-project.org</uri>
      </element-citation>
    </ref>
    <ref id="ref-JAGS">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Plummer</surname><given-names>Martyn</given-names></name>
        </person-group>
        <article-title>JAGS: A program for analysis of bayesian graphical models using gibbs sampling</article-title>
        <year iso-8601-date="2003">2003</year>
      </element-citation>
    </ref>
    <ref id="ref-Stan">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Carpenter</surname><given-names>Bob</given-names></name>
          <name><surname>Gelman</surname><given-names>Andrew</given-names></name>
          <name><surname>Hoffman</surname><given-names>Matthew</given-names></name>
          <name><surname>Lee</surname><given-names>Daniel</given-names></name>
          <name><surname>Goodrich</surname><given-names>Ben</given-names></name>
          <name><surname>Betancourt</surname><given-names>Michael</given-names></name>
          <name><surname>Brubaker</surname><given-names>Marcus</given-names></name>
          <name><surname>Guo</surname><given-names>Jiqiang</given-names></name>
          <name><surname>Li</surname><given-names>Peter</given-names></name>
          <name><surname>Riddell</surname><given-names>Allen</given-names></name>
        </person-group>
        <article-title>Stan: A probabilistic programming language</article-title>
        <source>Journal of Statistical Software, Articles</source>
        <year iso-8601-date="2017">2017</year>
        <volume>76</volume>
        <issue>1</issue>
        <issn>1548-7660</issn>
        <uri>https://www.jstatsoft.org/v076/i01</uri>
        <pub-id pub-id-type="doi">10.18637/jss.v076.i01</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
