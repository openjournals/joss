<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2400</article-id>
<article-id pub-id-type="doi">10.21105/joss.02400</article-id>
<title-group>
<article-title>GPP, the Generic Preprocessor</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-0749-1100</contrib-id>
<string-name>Tristan Miller</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Denis Auroux</string-name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Austrian Research Institute for Artificial
Intelligence</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Mathematics, Harvard University</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-05-28">
<day>28</day>
<month>5</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>51</issue>
<fpage>2400</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>preprocessor</kwd>
<kwd>macro processor</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>In computer science, a <italic>preprocessor</italic> (or
  <italic>macro processor</italic>) is a tool that programatically
  alters its input, typically on the basis of inline annotations, to
  produce data that serves as input for another program. Preprocessors
  are used in software development and document processing workflows to
  translate or extend programming or markup languages, as well as for
  conditional or pattern-based generation of source code and text. Early
  preprocessors were relatively simple string replacement tools that
  were tied to specific programming languages and application domains,
  and while these have since given rise to more powerful,
  general-purpose tools, these often require the user to learn and use
  complex macro languages with their own syntactic conventions. In this
  paper, we present GPP, an extensible, general-purpose preprocessor
  whose principal advantage is that its syntax and behaviour can be
  customized to suit any given preprocessing task. This makes GPP of
  particular benefit to research applications, where it can be easily
  adapted for use with novel markup, programming, and control
  languages.</p>
</sec>
<sec id="background">
  <title>Background</title>
  <p>Preprocessors date back to the mid-1950s, when they were used to
  extend individual assembly languages with constructs that would later
  be found in high-level programming
  languages (<xref alt="Layzell, 1985" rid="ref-layzell1985history" ref-type="bibr">Layzell,
  1985</xref>). These languages, in turn, fostered the development of
  yet more special-purpose preprocessors aimed at providing even
  higher-level constructs, such as conditional loops and other control
  structures in
  FORTRAN (<xref alt="Meissner, 1975" rid="ref-meissner1975extending" ref-type="bibr">Meissner,
  1975</xref>) and
  COBOL (<xref alt="Triance, 1980" rid="ref-triance1980structured" ref-type="bibr">Triance,
  1980</xref>). The need for generalized, language-independent tools was
  eventually
  recognized (<xref alt="McIlroy, 1960" rid="ref-mcilroy1960macro" ref-type="bibr">McIlroy,
  1960</xref>), leading to the development of general-purpose
  preprocessors such as
  GPM (<xref alt="Strachey, 1965" rid="ref-strachey1965general" ref-type="bibr">Strachey,
  1965</xref>) and
  ML/I (<xref alt="Brown, 1967" rid="ref-brown1967mli" ref-type="bibr">Brown,
  1967</xref>).</p>
  <p>By the end of the 1960s, preprocessors had attracted a considerable
  amount of attention, by computing theorists and practitioners alike,
  and their use in software engineering had expanded beyond the
  augmentation and adaptation of programming languages. A survey paper
  by Brown
  (<xref alt="1969" rid="ref-brown1969survey" ref-type="bibr">1969</xref>)
  identified four broad application areas: language extension,
  systematic searching and editing of source code, translation between
  programming languages, and code generation (i.e., simplifying the
  writing of highly repetitive code, parameterizing a program by
  substituting compile-time constants, or producing variants of a
  program by conditionally including certain statements or modules).
  While the first three of these application areas have largely been
  rendered obsolete by today’s integrated development environments and
  expressive, feature-rich programming languages, implementing software
  variability with language-specific and general-purpose preprocessors
  remains
  commonplace (<xref alt="Apel et al., 2013" rid="ref-apel2013feature" ref-type="bibr">Apel
  et al., 2013</xref>;
  <xref alt="Kästner et al., 2012" rid="ref-kaestner2012type" ref-type="bibr">Kästner
  et al., 2012</xref>).</p>
  <p>Text processing became another main application area for
  preprocessors, in particular to generate documents on the basis of
  user-specified conditions or patterns, and to convert between document
  markup
  languages (<xref alt="Walden, 2014" rid="ref-walden2014macro" ref-type="bibr">Walden,
  2014</xref>). The earliest such uses were ad-hoc repurposings of
  programming language–specific preprocessors to operate on
  human-readable
  texts (<xref alt="Keese, 1964" rid="ref-keese1964note" ref-type="bibr">Keese,
  1964</xref>;
  <xref alt="Stallman &amp; Weinberg, 2020" rid="ref-stallman2020c" ref-type="bibr">Stallman
  &amp; Weinberg, 2020</xref>); these were soon supplanted by
  text-specific macro languages such as
  TRAC (<xref alt="Mooers &amp; Deutsch, 1965" rid="ref-mooers1965trac" ref-type="bibr">Mooers
  &amp; Deutsch, 1965</xref>), which were positioned as tools for
  stenographers and other writing professionals. More recently it has
  been common to use general-purpose
  preprocessors (<xref alt="Mailund, 2019" rid="ref-mailund2019introducing" ref-type="bibr">Mailund,
  2019</xref>;
  <xref alt="Pesch, 1992" rid="ref-pesch1992configurable" ref-type="bibr">Pesch,
  1992</xref>).</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of Need</title>
  <p>Criticism of preprocessors commonly focuses on the idiosyncratic
  languages they employ for their own built-in directives and for users
  to define and invoke macros. The languages of early preprocessors were
  derided as “clumsy and
  restrictive” (<xref alt="Layzell, 1985" rid="ref-layzell1985history" ref-type="bibr">Layzell,
  1985</xref>) and “hard to
  read” (<xref alt="Brown, 1969" rid="ref-brown1969survey" ref-type="bibr">Brown,
  1969</xref>), and even modern preprocessors are sometimes attacked for
  relying on “the clumsiness of a separate language of limited
  expressiveness” (<xref alt="Ernst et al., 2002" rid="ref-ernst2002empirical" ref-type="bibr">Ernst
  et al., 2002</xref>) or, at the other extreme, for being overly
  complicated, quirky, opaque, or hard to learn, even for experienced
  programmers and markup
  users (<xref alt="Ernst et al., 2002" rid="ref-ernst2002empirical" ref-type="bibr">Ernst
  et al., 2002</xref>;
  <xref alt="Paddon, 1993" rid="ref-paddon1993shake" ref-type="bibr">Paddon,
  1993</xref>;
  <xref alt="Pesch, 1992" rid="ref-pesch1992configurable" ref-type="bibr">Pesch,
  1992</xref>).</p>
  <p>Our general-purpose preprocessor, GPP, avoids these issues by
  providing a lightweight but flexible macro language whose syntax can
  be customized by the user. The tool’s built-in presets allow its
  directives to be made to resemble those of many popular languages,
  including HTML and . This greatly reduces the learning curve for GPP
  when it is used with these languages, eliminates the cognitive burden
  of repeatedly “mode switching” between source and preprocessor syntax
  when reading or composing, and allows existing syntax highlighters and
  other tools to process GPP directives with little or no further
  configuration. Furthermore, users are not limited to using these
  presets, but can fully define their own syntax for GPP directives and
  macros. This makes GPP particularly attractive for use in research and
  development, where its syntax can be readily adapted to match bespoke
  programming and markup languages.</p>
  <p>GPP’s independence from any one programming or markup language
  makes it more versatile than the C Preprocessor, which was formerly
  “abused” as a general text processor and is still sometimes
  (inappropriately) used for non-C
  applications (<xref alt="Stallman &amp; Weinberg, 2020" rid="ref-stallman2020c" ref-type="bibr">Stallman
  &amp; Weinberg, 2020</xref>). While GPP is less powerful than
  m4 (<xref alt="Seindal et al., 2016" rid="ref-seindal2016m4" ref-type="bibr">Seindal
  et al., 2016</xref>), it is arguably more flexible, and supports all
  the basic operations expected of a modern, high-level preprocessing
  system, including conditional tests, arithmetic evaluation, and
  POSIX-style wildcard matching (“globbing”). In addition to macros, GPP
  understands comments and strings, whose syntax and behaviour can also
  be widely customized to fit any particular purpose.</p>
</sec>
<sec id="gpp-in-research">
  <title>GPP in research</title>
  <p>GPP has already been integrated into a number of third-party
  projects in basic and applied research. These include the
  following:</p>
  <list list-type="bullet">
    <list-item>
      <p>The Waveform Definition Language (WDL) is Caltech Optical
      Observatories’ C-like language for programming astronomical
      research cameras. WDL uses GPP to preprocess configuration files
      containing signals and parameters specific to the camera
      controllers, flags setting the devices’ operating modes and image
      properties, and timing rules. According to the developers, GPP was
      chosen over the C Preprocessor “for added flexibility and to avoid
      some C-like
      limitations” (<xref alt="Kaye et al., 2017" rid="ref-kaye2017waveform" ref-type="bibr">Kaye
      et al., 2017</xref>).</p>
    </list-item>
    <list-item>
      <p>XSB is a research-oriented, commercial-grade logic programming
      system and Prolog compiler. The developers chose to make GPP XSB’s
      default preprocessor because it “maintains a high degree of
      compatibility with the C preprocessor, but is more suitable for
      processing Prolog
      programs” (<xref alt="Swift et al., 2017" rid="ref-swift2017xsb" ref-type="bibr">Swift
      et al., 2017</xref>).</p>
    </list-item>
    <list-item>
      <p>C-Control Pro is a family of electronic microcontrollers
      produced by Conrad Electronic; they are specifically designed for
      industrial and automotive applications. The official software
      development kit includes a modified version of GPP for use with
      the products’ BASIC and Compact-C programming
      languages (<xref alt="Schirm &amp; Sprenger, 2007" rid="ref-schirm2007messen" ref-type="bibr">Schirm
      &amp; Sprenger, 2007</xref>).</p>
    </list-item>
    <list-item>
      <p>SUS is a tool that allows system administrators to exercise
      fine-grained control over how users can run commands with elevated
      privileges. It has a sophisticated control file syntax that is
      preprocessed with
      GPP (<xref alt="Gray, 2001" rid="ref-gray2001sus" ref-type="bibr">Gray,
      2001</xref>).</p>
    </list-item>
  </list>
  <p>Apart from these uses, GPP is occasionally cited as previous or
  related work in scholarly publications on metaprogramming or
  compile-time variability of
  software (<xref alt="Apel et al., 2013" rid="ref-apel2013feature" ref-type="bibr">Apel
  et al., 2013</xref>;
  <xref alt="Baxter &amp; Mehlich, 2001" rid="ref-baxter2001preprocessor" ref-type="bibr">Baxter
  &amp; Mehlich, 2001</xref>;
  <xref alt="Behringer, 2017" rid="ref-behringer2017projectional" ref-type="bibr">Behringer,
  2017</xref>;
  <xref alt="Blendinger, 2010" rid="ref-blendinger2010filesystem" ref-type="bibr">Blendinger,
  2010</xref>;
  <xref alt="Dreiling, 2010" rid="ref-dreiling2010feature" ref-type="bibr">Dreiling,
  2010</xref>;
  <xref alt="Kästner et al., 2012" rid="ref-kaestner2012type" ref-type="bibr">Kästner
  et al., 2012</xref>;
  <xref alt="Lotoreychik &amp; Shopyrin, 2006" rid="ref-lotoreychik2006metaprogrammirovaniye" ref-type="bibr">Lotoreychik
  &amp; Shopyrin, 2006</xref>;
  <xref alt="Zmiry, 2016" rid="ref-zmiry2016lola" ref-type="bibr">Zmiry,
  2016</xref>).</p>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>Tristan Miller is supported by the Austrian Science Fund (FWF)
  under project M 2625-N31. Denis Auroux is partially supported by NSF
  grant DMS-1937869 and by Simons Foundation grant #385573. The Austrian
  Research Institute for Artificial Intelligence is supported by the
  Austrian Federal Ministry for Science, Research and Economy.</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-apel2013feature">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Apel</surname><given-names>Sven</given-names></name>
          <name><surname>Batory</surname><given-names>Don</given-names></name>
          <name><surname>Kästner</surname><given-names>Christian</given-names></name>
          <name><surname>Saake</surname><given-names>Gunter</given-names></name>
        </person-group>
        <article-title>Classic, tool-driven variability mechanisms</article-title>
        <source>Feature-oriented software product lines</source>
        <publisher-name>Springer-Verlag</publisher-name>
        <publisher-loc>Berlin/Heidelberg</publisher-loc>
        <year iso-8601-date="2013-10">2013</year><month>10</month>
        <isbn>978-3-642-37520-0</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-642-37521-7_5</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-baxter2001preprocessor">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Baxter</surname><given-names>Ira D.</given-names></name>
          <name><surname>Mehlich</surname><given-names>Michael</given-names></name>
        </person-group>
        <article-title>Preprocessor conditional removal by simple partial evaluation</article-title>
        <source>Proceedings of the 8th Working Conference on Reverse Engineering</source>
        <publisher-name>IEEE</publisher-name>
        <year iso-8601-date="2001">2001</year>
        <isbn>0-7695-1303-4</isbn>
        <issn>1095-1350</issn>
        <pub-id pub-id-type="doi">10.1109/WCRE.2001.957833</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-behringer2017projectional">
      <element-citation publication-type="thesis">
        <person-group person-group-type="author">
          <name><surname>Behringer</surname><given-names>Benjamin</given-names></name>
        </person-group>
        <article-title>Projectional editing of software product lines – The PEoPL approach</article-title>
        <publisher-name>Faculty of Sciences, Technology; Communication, Université de Luxembourg</publisher-name>
        <year iso-8601-date="2017-07">2017</year><month>07</month>
      </element-citation>
    </ref>
    <ref id="ref-blendinger2010filesystem">
      <element-citation publication-type="thesis">
        <person-group person-group-type="author">
          <name><surname>Blendinger</surname><given-names>Frank</given-names></name>
        </person-group>
        <article-title>A filesystem-based approach to support product line development with editable views</article-title>
        <publisher-name>Department of Computer Sciences 4, Friedrich-Alexander University Erlangen-Nuremberg</publisher-name>
        <year iso-8601-date="2010-08">2010</year><month>08</month>
      </element-citation>
    </ref>
    <ref id="ref-brown1967mli">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Brown</surname><given-names>P. J.</given-names></name>
        </person-group>
        <article-title>The ML/I macro processor</article-title>
        <source>Communications of the ACM</source>
        <year iso-8601-date="1967-10">1967</year><month>10</month>
        <volume>10</volume>
        <issue>10</issue>
        <issn>0001-0782</issn>
        <pub-id pub-id-type="doi">10.1145/363717.363746</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-brown1969survey">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Brown</surname><given-names>P. J.</given-names></name>
        </person-group>
        <article-title>A survey of macro processors</article-title>
        <source>Annual Review in Automatic Programming</source>
        <year iso-8601-date="1969">1969</year>
        <volume>6</volume>
        <issn>0066-4138</issn>
        <pub-id pub-id-type="doi">10.1016/0066-4138(69)90001-9</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-dreiling2010feature">
      <element-citation publication-type="thesis">
        <person-group person-group-type="author">
          <name><surname>Dreiling</surname><given-names>Alexander</given-names></name>
        </person-group>
        <article-title>Feature Mining: Semiautomatische Transition von Systemen zu Software-Produktlinien</article-title>
        <publisher-name>Fakultät für Informatik, Institut für Technische und Betriebliche Informationssysteme, Otto-von-Guericke-Universität Magdeburg</publisher-name>
        <year iso-8601-date="2010-07">2010</year><month>07</month>
      </element-citation>
    </ref>
    <ref id="ref-ernst2002empirical">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Ernst</surname><given-names>Michael D.</given-names></name>
          <name><surname>Badros</surname><given-names>Greg J.</given-names></name>
          <name><surname>Notkin</surname><given-names>David</given-names></name>
        </person-group>
        <article-title>An empirical analysis of C Preprocessor use</article-title>
        <source>IEEE Transactions on Software Engineering</source>
        <year iso-8601-date="2002-12">2002</year><month>12</month>
        <volume>28</volume>
        <issue>12</issue>
        <issn>0098-5589</issn>
        <pub-id pub-id-type="doi">10.1109/TSE.2002.1158288</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-gray2001sus">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Gray</surname><given-names>Peter D.</given-names></name>
        </person-group>
        <article-title>SUS – An object reference model for distributing UNIX super user privileges</article-title>
        <source>Proceedings of the LISA 2001 15th Systems Administration Conference</source>
        <publisher-name>The USENIX Association</publisher-name>
        <year iso-8601-date="2001-12">2001</year><month>12</month>
      </element-citation>
    </ref>
    <ref id="ref-kaestner2012type">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kästner</surname><given-names>Christian</given-names></name>
          <name><surname>Apel</surname><given-names>Sven</given-names></name>
          <name><surname>Thüm</surname><given-names>Thomas</given-names></name>
          <name><surname>Saake</surname><given-names>Gunter</given-names></name>
        </person-group>
        <article-title>Type checking annotation-based product lines</article-title>
        <source>ACM Transactions on Software Engineering and Methodology</source>
        <year iso-8601-date="2012-06">2012</year><month>06</month>
        <volume>21</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1145/2211616.2211617</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-kaye2017waveform">
      <element-citation publication-type="report">
        <person-group person-group-type="author">
          <name><surname>Kaye</surname><given-names>Stephen</given-names></name>
          <name><surname>Smith</surname><given-names>Roger</given-names></name>
          <name><surname>Hale</surname><given-names>David</given-names></name>
          <name><surname>Mao</surname><given-names>Peter</given-names></name>
        </person-group>
        <article-title>Waveform Definition Language</article-title>
        <publisher-name>Caltech Optical Observatories</publisher-name>
        <publisher-loc>Pasadena, CA</publisher-loc>
        <year iso-8601-date="2017">2017</year>
      </element-citation>
    </ref>
    <ref id="ref-keese1964note">
      <element-citation publication-type="report">
        <person-group person-group-type="author">
          <name><surname>Keese</surname><given-names>W. M.</given-names><suffix>Jr.</suffix></name>
        </person-group>
        <article-title>A note on automatic generation of documentation by macro assemblers</article-title>
        <publisher-name>Bellcom, Inc.</publisher-name>
        <publisher-loc>Washington, DC</publisher-loc>
        <year iso-8601-date="1964-09">1964</year><month>09</month>
      </element-citation>
    </ref>
    <ref id="ref-layzell1985history">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Layzell</surname><given-names>P. J.</given-names></name>
        </person-group>
        <article-title>The history of macro processors in programming language extensibility</article-title>
        <source>The Computer Journal</source>
        <year iso-8601-date="1985-01">1985</year><month>01</month>
        <volume>28</volume>
        <issue>1</issue>
        <issn>0010-4620</issn>
        <pub-id pub-id-type="doi">10.1093/comjnl/28.1.29</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-lotoreychik2006metaprogrammirovaniye">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Lotoreychik</surname><given-names>V. Yu.</given-names></name>
          <name><surname>Shopyrin</surname><given-names>D. G.</given-names></name>
        </person-group>
        <article-title>Metaprogrammirovaniye na osnove tekstovogo preprotsessora [Text preprocessor–based metaprogramming]</article-title>
        <source>Nauchno-Tehnicheskii Vestnik Informatsionnykh Tekhnologii, Mekhaniki i Optiki [Scientific and Technical Journal of Information Technologies, Mechanics and Optics]</source>
        <year iso-8601-date="2006">2006</year>
        <volume>6</volume>
        <issue>2</issue>
        <issn>2226-1494</issn>
      </element-citation>
    </ref>
    <ref id="ref-mailund2019introducing">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Mailund</surname><given-names>Thomas</given-names></name>
        </person-group>
        <article-title>Preprocessing</article-title>
        <source>Introducing Markdown and Pandoc: Using markup language and document converter</source>
        <publisher-name>Apress</publisher-name>
        <publisher-loc>Berkeley, CA</publisher-loc>
        <year iso-8601-date="2019">2019</year>
        <isbn>978-1-4842-5148-5</isbn>
        <pub-id pub-id-type="doi">10.1007/978-1-4842-5149-2_10</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mcilroy1960macro">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>McIlroy</surname><given-names>M. Douglas</given-names></name>
        </person-group>
        <article-title>Macro instruction extensions of compiler languages</article-title>
        <source>Communications of the ACM</source>
        <year iso-8601-date="1960-04">1960</year><month>04</month>
        <volume>3</volume>
        <issue>4</issue>
        <issn>0001-0782</issn>
        <pub-id pub-id-type="doi">10.1145/367177.367223</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-meissner1975extending">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Meissner</surname><given-names>Loren P.</given-names></name>
        </person-group>
        <article-title>On extending Fortran control structures to facilitate structured programming</article-title>
        <source>SIGPLAN Notices</source>
        <year iso-8601-date="1975-09">1975</year><month>09</month>
        <volume>10</volume>
        <issue>9</issue>
        <issn>0362-1340</issn>
        <pub-id pub-id-type="doi">10.1145/987316.987320</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-mooers1965trac">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Mooers</surname><given-names>Calvin N.</given-names></name>
          <name><surname>Deutsch</surname><given-names>L. Peter</given-names></name>
        </person-group>
        <article-title>TRAC, a text-handling language</article-title>
        <source>ACM ’65: Proceedings of the 20th National Conference</source>
        <person-group person-group-type="editor">
          <name><surname>Winner</surname><given-names>Lewis</given-names></name>
        </person-group>
        <publisher-name>Association for Computing Machinery</publisher-name>
        <publisher-loc>New York</publisher-loc>
        <year iso-8601-date="1965-08">1965</year><month>08</month>
        <isbn>978-1-4503-7495-8</isbn>
        <pub-id pub-id-type="doi">10.1145/800197.806048</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-paddon1993shake">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Paddon</surname><given-names>Michael</given-names></name>
        </person-group>
        <article-title>Shake: A portable tool for generating Makefiles</article-title>
        <source>AUUG ’93 Conference proceedings</source>
        <publisher-name>AUUG Inc.</publisher-name>
        <publisher-loc>Kensington, NSW, Australia</publisher-loc>
        <year iso-8601-date="1993">1993</year>
      </element-citation>
    </ref>
    <ref id="ref-pesch1992configurable">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Pesch</surname><given-names>R. H.</given-names></name>
        </person-group>
        <article-title>Configurable manuals</article-title>
        <source>Conference record on Crossing Frontiers</source>
        <year iso-8601-date="1992">1992</year>
        <isbn>0-7803-0788-7</isbn>
        <pub-id pub-id-type="doi">10.1109/IPCC.1992.673146</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-schirm2007messen">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Schirm</surname><given-names>Reiner</given-names></name>
          <name><surname>Sprenger</surname><given-names>Peter</given-names></name>
        </person-group>
        <article-title>Der Preprozessor</article-title>
        <source>Messen, Steuern und Regeln mit C-Control Pro: Praxisanwendungen, Schaltungstechnik und Programmierung</source>
        <publisher-name>Franzis</publisher-name>
        <publisher-loc>Poing, Germany</publisher-loc>
        <year iso-8601-date="2007">2007</year>
        <isbn>978-3-7723-4097-0</isbn>
      </element-citation>
    </ref>
    <ref id="ref-seindal2016m4">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Seindal</surname><given-names>René</given-names></name>
          <name><surname>Pinard</surname><given-names>François</given-names></name>
          <name><surname>Vaughan</surname><given-names>Gary V.</given-names></name>
          <name><surname>Blake</surname><given-names>Eric</given-names></name>
        </person-group>
        <source>GNU M4, version 1.4.18</source>
        <publisher-name>Free Software Foundation</publisher-name>
        <year iso-8601-date="2016-12">2016</year><month>12</month>
      </element-citation>
    </ref>
    <ref id="ref-stallman2020c">
      <element-citation publication-type="chapter">
        <person-group person-group-type="author">
          <name><surname>Stallman</surname><given-names>Richard M.</given-names></name>
          <name><surname>Weinberg</surname><given-names>Zachary</given-names></name>
        </person-group>
        <article-title>Overview</article-title>
        <source>The C Preprocessor</source>
        <publisher-name>Free Software Foundation</publisher-name>
        <year iso-8601-date="2020">2020</year>
      </element-citation>
    </ref>
    <ref id="ref-strachey1965general">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Strachey</surname><given-names>C.</given-names></name>
        </person-group>
        <article-title>A general purpose macrogenerator</article-title>
        <source>The Computer Journal</source>
        <year iso-8601-date="1965-01">1965</year><month>01</month>
        <volume>8</volume>
        <issue>3</issue>
        <issn>0010-4620</issn>
        <pub-id pub-id-type="doi">10.1093/comjnl/8.3.225</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-swift2017xsb">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name><surname>Swift</surname><given-names>Theresa</given-names></name>
          <name><surname>Warren</surname><given-names>David S.</given-names></name>
          <name><surname>Sagonas</surname><given-names>Konstantinos</given-names></name>
          <name><surname>Freire</surname><given-names>Juliana</given-names></name>
          <name><surname>Rao</surname><given-names>Prasad</given-names></name>
          <name><surname>Cui</surname><given-names>Baoqiu</given-names></name>
          <name><surname>Johnson</surname><given-names>Ernie</given-names></name>
          <name><surname>Castro</surname><given-names>Luis de</given-names></name>
          <name><surname>Marques</surname><given-names>Rui F.</given-names></name>
          <name><surname>Saha</surname><given-names>Diptikalyan</given-names></name>
          <name><surname>Dawson</surname><given-names>Steve</given-names></name>
          <name><surname>Kifer</surname><given-names>Michael</given-names></name>
        </person-group>
        <source>The XSB System, version 3.8.x, volume 1: Programmer’s manual</source>
        <year iso-8601-date="2017-10">2017</year><month>10</month>
      </element-citation>
    </ref>
    <ref id="ref-triance1980structured">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Triance</surname><given-names>J. M.</given-names></name>
        </person-group>
        <article-title>Structured programming in COBOL—the current options</article-title>
        <source>The Computer Journal</source>
        <year iso-8601-date="1980">1980</year>
        <volume>23</volume>
        <issue>3</issue>
        <pub-id pub-id-type="doi">10.1093/comjnl/23.3.194</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-walden2014macro">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Walden</surname><given-names>David</given-names></name>
        </person-group>
        <article-title>Macro memories, 1964–2013</article-title>
        <source>TUGboat: The Communications of the TeX Users Group</source>
        <year iso-8601-date="2014">2014</year>
        <volume>35</volume>
        <issue>1</issue>
      </element-citation>
    </ref>
    <ref id="ref-zmiry2016lola">
      <element-citation publication-type="thesis">
        <person-group person-group-type="author">
          <name><surname>Zmiry</surname><given-names>Iddo E.</given-names></name>
        </person-group>
        <article-title>Lola 0.064: A programming language for augmenting programming languages</article-title>
        <publisher-name>Technion – Israel Institute of Technology</publisher-name>
        <year iso-8601-date="2016-04">2016</year><month>04</month>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
</back>
</article>
