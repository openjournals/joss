<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">2165</article-id>
<article-id pub-id-type="doi">10.21105/joss.02165</article-id>
<title-group>
<article-title>Utopia: A Comprehensive and Collaborative Modeling
Framework for Complex and Evolving Systems</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-4667-3652</contrib-id>
<string-name>Lukas Riedel</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-6343-3004</contrib-id>
<string-name>Benjamin Herdeanu</string-name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-4"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0001-7787-9496</contrib-id>
<string-name>Harald Mack</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0003-3858-0904</contrib-id>
<string-name>Yunus Sevinchan</string-name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<string-name>Julian Weninger</string-name>
<xref ref-type="aff" rid="aff-5"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Institute of Environmental Physics, Heidelberg University,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Interdisciplinary Center for Scientific Computing,
Heidelberg University, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Heidelberg Graduate School of Mathematical and
Computational Methods for the Sciences, Heidelberg University,
Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-4">
<institution-wrap>
<institution>Heidelberg Graduate School for Physics, Heidelberg
University, Germany</institution>
</institution-wrap>
</aff>
<aff id="aff-5">
<institution-wrap>
<institution>Department of Biochemistry, University of Geneva,
Switzerland</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2020-03-07">
<day>7</day>
<month>3</month>
<year>2020</year>
</pub-date>
<volume>5</volume>
<issue>53</issue>
<fpage>2165</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>2021</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Complex Systems</kwd>
<kwd>Agent-based Models</kwd>
<kwd>Modeling Framework</kwd>
<kwd>Computational Science</kwd>
<kwd>Docker</kwd>
<kwd>GitLab</kwd>
<kwd>HDF5</kwd>
<kwd>YAML</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Utopia is a modeling framework that supports the entire workflow of
  computational scientists in the field of complex and evolving systems.
  It is designed to facilitate collaborative research and flexible model
  development while maintaining high individual freedom in
  implementation and analysis. Utopia includes a C++ library for model
  implementations and data writing and a Python frontend for simulation
  control, data analysis, and plotting. A basic set of models is
  distributed alongside the framework.</p>
  <p>Applications of Utopia span a wide range both in terms of the
  target audience and features relevant in each domain: For researchers,
  Utopia offers a rich toolkit for model implementation, data analysis,
  and generation of simulation data—up to and including large-scale
  simulations on distributed, high-performance computing hardware. In a
  teaching context, students can focus on the investigation of readily
  provided models using their own machines, e.g. by performing easily
  available sensitivity analysis. Furthermore, by developing new library
  functionality, collaborators can easily share new features and thus
  enhance Utopia’s applicability for all users of the framework. This
  makes Utopia a valuable tool for both research in and teaching of
  complex and evolving systems.</p>
  <p>Utopia is available as Docker image from
  DockerHub<xref ref-type="fn" rid="fn1">1</xref> or can be compiled
  from source.</p>
</sec>
<sec id="research-of-complex-systems">
  <title>Research of Complex Systems</title>
  <p>Many physical, environmental, and socio-cultural questions are
  studied in the field of complex and evolving systems
  (<xref alt="Holland, 2006" rid="ref-holland_studying_2006" ref-type="bibr">Holland,
  2006</xref>;
  <xref alt="Levin, 2003" rid="ref-levin_2003_complex" ref-type="bibr">Levin,
  2003</xref>). These systems feature a hierarchic, self-organized
  structure with non-linear interactions between their compartments and
  often exhibit emergent macroscopic properties. We call such systems
  “evolving” when the dimension and structure of their state space or
  the nature of their internal interactions can change under varying
  external forcings, in contrast to systems that merely traverse a
  static state space volume.</p>
  <p>Given their high-dimensional, non-linear, and oftentimes open and
  fundamentally interconnected nature, laboratory-scale versions of
  complex and evolving systems often do not exist and investigating them
  experimentally is difficult. This is why they are typically studied
  through heuristic computer models, in search of an abstract
  understanding of their fundamental processes. As model constants and
  effective parameters remain unknown, researchers sample the usually
  high-dimensional parameter spaces of these models to find
  qualitatively distinguishable dynamic regimes. This produces
  high-dimensional output data and therefore requires an intuitive and
  convenient way of loading, analyzing, and visualizing such data.</p>
  <p>Consequently, the software for implementing and analyzing
  computational models becomes the main source of scientific insight. It
  is therefore required to be not only performant but also reliable. At
  the same time, complicated models necessarily demand sophisticated
  software and large amounts of code that needs to be produced
  collaboratively by multiple researchers if a critical project size is
  exceeded. To verify and maintain its functionality, the software must
  be comprehensibly tested. Insights gained from the implemented models
  need to be easily communicated among peers. In recent years, software
  engineering workflows have therefore been adopted in the field of
  computational science. This facilitated satisfying the aforementioned
  demands in scientific software development, helped to avoid redundant
  re-implementations and enabled efficient, collaborative development of
  research software in large groups of researchers
  (<xref alt="Storer, 2017" rid="ref-storer_bridging_2017" ref-type="bibr">Storer,
  2017</xref>).</p>
  <p>Representations of complex and evolving systems are often created
  using variations of three main modeling techniques: cellular automata
  (CA), network models, and agent-based models (ABM). CA are grid-based
  methods with update rules depending on the current states of grid
  cells and their respective cell neighborhoods and are used to
  investigate the emergence of macroscopic features from cell-local
  interactions
  (<xref alt="Chopard et al., 2002" rid="ref-chopard_cellular_2002" ref-type="bibr">Chopard
  et al., 2002</xref>;
  <xref alt="Wolfram, 1983" rid="ref-wolfram_statistical_1983" ref-type="bibr">Wolfram,
  1983</xref>). In contrast, network models focus on heterogeneous and
  possibly dynamic interaction structures between entities
  (<xref alt="Albert &amp; Barabási, 2002" rid="ref-albert_statistical_2002" ref-type="bibr">Albert
  &amp; Barabási, 2002</xref>;
  <xref alt="Boccaletti et al., 2006" rid="ref-boccaletti_complex_2006" ref-type="bibr">Boccaletti
  et al., 2006</xref>). Finally, the constituents of ABMs are
  heterogeneous individuals with dynamic behavior in possible interplay
  with their environment. Among applications in nearly every scientific
  field, ABMs are also used to model traffic and population dynamics as
  well as biological evolution
  (<xref alt="Macal, 2016" rid="ref-macal_everything_2016" ref-type="bibr">Macal,
  2016</xref>).</p>
  <p>We summarize the typical workflow of a computational scientist
  investigating complex and evolving systems via these modeling
  techniques in a computer model <italic>lifecycle</italic> consisting
  of four stages:</p>
  <list list-type="order">
    <list-item>
      <p>Conceptualization of the research question</p>
    </list-item>
    <list-item>
      <p>Implementation of a computer model</p>
    </list-item>
    <list-item>
      <p>Generation of simulation data</p>
    </list-item>
    <list-item>
      <p>Analysis of the data and extraction of results</p>
    </list-item>
  </list>
  <p>These are intrinsically linked and insights from one stage might
  necessitate a re-iteration of a previous stage. A comprehensive
  modeling framework should support researchers and facilitate software
  engineering workflows through all of these stages.</p>
</sec>
<sec id="state-of-the-art">
  <title>State of the Art</title>
  <p>Several open-source frameworks for modeling complex and evolving
  systems in different programming languages are readily available
  (<xref alt="Cardinot et al., 2019" rid="ref-cardinot_evoplex_2019" ref-type="bibr">Cardinot
  et al., 2019</xref>;
  <xref alt="Masad &amp; Kazil, 2015" rid="ref-masad_2015_mesa" ref-type="bibr">Masad
  &amp; Kazil, 2015</xref>;
  <xref alt="Vahdati, 2019" rid="ref-vahdati_agentsjl_2019" ref-type="bibr">Vahdati,
  2019</xref>). NetLogo is an especially popular scientific software
  environment with a similar premise as Utopia
  (<xref alt="Wilensky, 1999" rid="ref-wilensky_1999_netlogo" ref-type="bibr">Wilensky,
  1999</xref>). As a framework for agent-based models, it provides a
  graphical user interface for an immediate and easily accessible
  investigation of simulations and its own programming language to
  support the development of models by scientists with little
  programming experience. It also ships with a model library including
  numerous models from several fields of research.</p>
  <p>In our perception, however, none of these frameworks were able to
  support all stages of the aforementioned model lifecycle without
  compromising either flexibility or performance. Several frameworks
  also would not support the software engineering procedures we deemed
  crucial for collaboratively developing models in our research group.
  With Utopia, we focus on the generation and evaluation of
  multi-dimensional data in parameter space scans and granting
  programmers the entire feature range of the C++ and Python programming
  languages by providing slim and open interfaces and an extensive
  function library. With this orientation, we hope that Utopia serves as
  a valuable addition to the existing range of modeling frameworks that
  aim to investigate complex and evolving systems.</p>
</sec>
<sec id="feature-overview">
  <title>Feature Overview</title>
  <p>We devised Utopia as a single framework supporting the four stages
  of a computer model’s lifecycle. Utopia models consist of the C++
  model implementation, customized analysis and plotting functions,
  model tests, and configuration files defining default parameters.</p>
  <p>Conceptualizing a model (stage 1) requires both a set of common
  building blocks and routines, and adequate freedom to explore and
  investigate new scenarios. Utopia supplies a library for building
  models that defines a common language for all its users through its
  nomenclature and functional interplay. This facilitates creating
  computational representations of abstract concepts. While models may
  be integrated into the framework itself, its entire functionality is
  available when using Utopia as a regular dependency for independent
  model development. Moreover, Utopia can be used with any computer
  model that either conforms to its configuration data input and
  simulation data output schemes directly or for that appropriate
  interfaces are added.</p>
  <p>For implementing a specific model (stage 2), Utopia provides a
  <monospace>Model</monospace> base class and a template library for
  common operations and effortless framework integration. We call this
  the Utopia <italic>backend</italic> which is written in modern C++ and
  employs the C++17 standard revision. The base class provides the
  scaffolding for implementing dynamics and integrates into the Utopia
  modeling workflow by providing the interfaces for configuration input
  and data output as well as for coupling several models into one.
  Recurring tasks like building grids and networks, managing CA and
  ABMs, and applying state update rules on entities of any model type
  can be handled conveniently using the Utopia
  <monospace>core</monospace> library. This library uses Armadillo as
  high-level linear algebra backend
  (<xref alt="Sanderson &amp; Curtin, 2018" rid="ref-sanderson_matrix_2018" ref-type="bibr">Sanderson
  &amp; Curtin, 2018</xref>,
  <xref alt="2016" rid="ref-sanderson_armadillo_2016" ref-type="bibr">2016</xref>).
  Furthermore, the <monospace>dataIO</monospace> library provides
  versatile capabilities for storing hierarchically nested simulation
  data in HDF5 files
  (<xref alt="The HDF Group, 1997" rid="ref-the_hdf_group_hierarchical_1997" ref-type="bibr">The
  HDF Group, 1997</xref>). It wraps around the HDF5 C library and
  supports numerous complicated data output tasks that can be defined
  and controlled via configuration files.</p>
  <p>The Utopia <italic>frontend</italic> manages the configuration and
  execution of simulations (stage 3). It is implemented as the
  <monospace>utopya</monospace> Python package which parses user input
  to generate a configuration, invokes the model executables in
  parallel, and reports on the progress throughout a simulation run.
  Simulations can be controlled both from an interactive Python session
  or via a command line interface. An important user experience concept
  of the frontend is to provide reasonable default parameters on all
  levels while allowing to specify custom values where desired. This is
  achieved by using a hierarchical, dictionary-like configuration
  structure and multiple sets of default configuration values, that can
  be updated by the user. With this structure, parameters can be
  supplied both via the Python interface or YAML configuration files.
  Utopia utilizes the <monospace>paramspace</monospace> Python package
  for conveniently defining parameter sweeps in this hierarchical
  structure
  (<xref alt="Sevinchan, 2019" rid="ref-sevinchan_2019_paramspace" ref-type="bibr">Sevinchan,
  2019</xref>).</p>
  <p>For handling multi-dimensional, hierarchical data (stage 4), the
  frontend interfaces with the <monospace>dantro</monospace> Python
  package to load, process, and visualize the HDF5 data generated by
  model simulations
  (<xref alt="Sevinchan, Herdeanu, &amp; Traub, 2020" rid="ref-sevinchan_2020_dantro" ref-type="bibr">Sevinchan,
  Herdeanu, &amp; Traub, 2020</xref>). Like the simulation runs, data
  processing and the creation of plots and animations are specified
  using a set of configuration parameters which can be supplied in
  Python code or via YAML configuration files. Utopia provides an
  extensive and extensible set of universal and model-specific plot
  functions for simulation data plots of a single time step, timelines
  of model characteristics, as well as visualizations of parameter space
  scans.</p>
  <p>Utopia aims to increase model reliability by providing easy means
  of implementing tests alongside a model. These tests can be C++ unit
  tests utilizing the Boost Test library or Python-based tests on the
  simulation output that assert the expected macroscopic behavior. All
  tests are carried out as part of an automated test suite in the GitLab
  CI/CD, and thus provide rapid feedback to model developers. This helps
  to address the practical aspects of testing scientific software
  (<xref alt="Kanewala &amp; Bieman, 2014" rid="ref-kanewala_2014_testing" ref-type="bibr">Kanewala
  &amp; Bieman, 2014</xref>).</p>
</sec>
<sec id="application-in-research-and-teaching">
  <title>Application in Research and Teaching</title>
  <p>More than 20 Bachelor, Master, and Ph.D. students in our research
  group have employed Utopia as the sole software framework for their
  modeling-based research projects so far. Current PhD projects use
  Utopia to investigate the feedback between environment and evolving
  populations with CA and ABMs, the evolution of ecological interaction
  networks, the emergence of cooperation in dynamic social interaction
  networks, and the development of geometric and polarity properties of
  the basilar papilla in agent-based vertex models.</p>
  <p>Utopia has also been used for teaching complex and evolving
  environmental systems in the M.Sc. Physics curriculum at the
  Department of Physics and Astronomy, Heidelberg University. In
  seminars, students were able to implement their own models over the
  course of one semester, even if they started with very limited
  programming experience. Additionally, student exercises that involved
  investigating models discussed in lectures have been conducted with
  Utopia.</p>
</sec>
<sec id="showcase">
  <title>Showcase</title>
  <p>In this section, we demonstrate the capabilities and the typical
  workflow of Utopia with the <monospace>ForestFire</monospace> model
  that simulates forest fires with a lightning probability and an
  immediate burn-down of connected tree clusters
  (<xref alt="Drossel &amp; Schwabl, 1992" rid="ref-Drossel1992" ref-type="bibr">Drossel
  &amp; Schwabl, 1992</xref>). It implements a cellular automaton with
  two states, <monospace>empty</monospace> and
  <monospace>tree</monospace>, and a simple set of update rules for each
  simulated iteration:</p>
  <list list-type="bullet">
    <list-item>
      <p>If a cell is <monospace>empty</monospace>, it is set to
      <monospace>tree</monospace> with a growth probability.</p>
    </list-item>
    <list-item>
      <p>If a cell is <monospace>tree</monospace>, it may spontaneously
      ignite with a lightning probability and is then set to
      <monospace>empty</monospace>.</p>
    </list-item>
    <list-item>
      <p>If a cell is ignited, all cells in its neighborhood with state
      <monospace>tree</monospace> are unconditionally ignited. This rule
      is then recursively applied to all other ignited cells.</p>
    </list-item>
  </list>
  <p>The following configuration file is used to perform a parameter
  scan of the model. It globally defines the number of iteration steps
  and the spatial resolution of the model. The sweep is performed over
  three different lightning probabilities and ten different random
  number generator seeds. Additionally, we set ten different tree
  densities as initial condition. The sweep over these values is coupled
  to the sweep over the random number generator seeds. In total, 30
  simulations are executed.</p>
  <code language="yaml"># run-cfg.yml
---
# Tell Utopia to perform a parameter sweep
perform_sweep: true

# Configure the parameter space
parameter_space:
  # Total iteration steps
  num_steps: 1000

  # Sweep over random number generator seeds
  seed: !sweep
    default: 42
    range: [10]

  # ForestFire model configuration
  ForestFire:
    # Set the grid resolution
    cell_manager:
      grid:
        resolution: 512

      # Set initial tree density
      cell_params:
        # Sweep over 10 different values
        # Couple this sweep to the sweep over 'seed'
        p_tree: !coupled-sweep
          target_name: seed
          default: 0.3
          linspace: [0.3, 0.4, 10]

    # Sweep over lightning probability
    p_lightning: !sweep
      default: 1.0e-4
      values:
        - 1.0e-3
        - 1.0e-4
        - 1.0e-5</code>
  <p>The simulations are conveniently executed via the Utopia command
  line interface,</p>
  <preformat>utopia run ForestFire run-cfg.yml</preformat>
  <p>This performs the parameter sweep, stores the simulation data, and
  immediately runs the default analysis and plotting scripts. Custom
  plotting configurations can be supplied via the
  <monospace>--plots-cfg</monospace> option, and already generated
  simulation data can be re-evaluated with the command</p>
  <preformat>utopia eval ForestFire</preformat>
  <p>Among the standard plots for this model are snapshots of the
  cellular automaton state or visualizations of connected tree clusters,
  as displayed in
  <xref alt="Figure 1" rid="figU003Asnapshots">Figure 1</xref>. These
  single plots can also be joined to movie clips by changing one
  configuration line. Additionally,
  <xref alt="Figure 2" rid="figU003Amultiverse">Figure 2</xref> depicts
  the output of an analysis and plotting script for a parameter scan of
  the model and displays a time-series of the mean tree densities for
  the different lightning probabilities.</p>
  <fig>
    <caption><p>Snapshot of a single <monospace>ForestFire</monospace>
    simulation after 1000 iterations. <bold>A</bold>: The current state
    of the cellular automaton. Cells with state
    <monospace>tree</monospace> are colored green, cells with state
    <monospace>empty</monospace> are colored ocher. <bold>B</bold>:
    Visualization of connected tree clusters, where neighboring cells
    with state <monospace>tree</monospace> are shown in the same color
    and <monospace>empty</monospace> cells are
    white.<styled-content id="figU003Asnapshots"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="ff-snapshots.png" xlink:title="" />
  </fig>
  <fig>
    <caption><p>Parameter space time-series of the
    <monospace>ForestFire</monospace> simulation. The line plots depict
    the mean tree density calculated over all simulations with the same
    lightning probability. The shaded areas denote the respective
    standard
    deviation.<styled-content id="figU003Amultiverse"></styled-content></p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="ff-multiverse.png" xlink:title="" />
  </fig>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We gratefully acknowledge the contributions by Narek Baghumian,
  Lorenzo Biasi, Unai Fi-scher Abaigar, Thomas Gaskin, Leonhard
  Holtmann, Christian Kobrow, Fabian Krautgasser, Daniel Lake, Hendrik
  Leusmann, Peter Manshausen, Robert Rauschen, Soeren Rubner, Laila
  Pilar Schmidt, Simeon Schreib, Lukas Siebert, Sebastian Stezura,
  Jeremias Traub, and Josephine Westermann to the inception,
  development, and maintenance of Utopia. We also extend our gratitude
  to Kurt Roth for the guiding discussions that lead to its
  development.</p>
</sec>
<sec id="related-work">
  <title>Related Work</title>
  <p>A conference contribution on how our research group profited from
  developing Utopia as a collaborative framework for computational
  models of complex and evolving systems was published in the
  proceedings of the International Conference on Computational Science
  (ICCS) 2020
  (<xref alt="Sevinchan, Herdeanu, Mack, et al., 2020" rid="ref-sevinchan_2020_iccs" ref-type="bibr">Sevinchan,
  Herdeanu, Mack, et al., 2020</xref>). An article presenting the design
  and features of Utopia in full detail is in preparation
  (<xref alt="Herdeanu et al., 2020" rid="ref-herdeanu_2020_arxiv" ref-type="bibr">Herdeanu
  et al., 2020</xref>).</p>
</sec>
</body>
<back>
<ref-list>
  <ref-list>
    <ref id="ref-holland_studying_2006">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Holland</surname><given-names>John H.</given-names></name>
        </person-group>
        <article-title>Studying complex adaptive systems</article-title>
        <source>Journal of Systems Science and Complexity</source>
        <year iso-8601-date="2006-03">2006</year><month>03</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-01-31">2020</year><month>01</month><day>31</day></date-in-citation>
        <volume>19</volume>
        <issue>1</issue>
        <issn>1559-7067</issn>
        <uri>https://doi.org/10.1007/s11424-006-0001-z</uri>
        <pub-id pub-id-type="doi">10.1007/s11424-006-0001-z</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-wolfram_statistical_1983">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Wolfram</surname><given-names>Stephen</given-names></name>
        </person-group>
        <article-title>Statistical mechanics of cellular automata</article-title>
        <source>Reviews of Modern Physics</source>
        <year iso-8601-date="1983-07">1983</year><month>07</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-01-31">2020</year><month>01</month><day>31</day></date-in-citation>
        <volume>55</volume>
        <issue>3</issue>
        <uri>https://link.aps.org/doi/10.1103/RevModPhys.55.601</uri>
        <pub-id pub-id-type="doi">10.1103/RevModPhys.55.601</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-macal_everything_2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Macal</surname><given-names>C. M.</given-names></name>
        </person-group>
        <article-title>Everything you need to know about agent-based modelling and simulation</article-title>
        <source>Journal of Simulation</source>
        <year iso-8601-date="2016-05">2016</year><month>05</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-01-31">2020</year><month>01</month><day>31</day></date-in-citation>
        <volume>10</volume>
        <issue>2</issue>
        <issn>1747-7778</issn>
        <uri>https://doi.org/10.1057/jos.2016.7</uri>
        <pub-id pub-id-type="doi">10.1057/jos.2016.7</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-the_hdf_group_hierarchical_1997">
      <element-citation>
        <person-group person-group-type="author">
          <string-name>The HDF Group</string-name>
        </person-group>
        <article-title>Hierarchical Data Format, Version 5</article-title>
        <year iso-8601-date="1997">1997</year>
        <uri>http://www.hdfgroup.org/HDF5/</uri>
      </element-citation>
    </ref>
    <ref id="ref-albert_statistical_2002">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Albert</surname><given-names>Réka</given-names></name>
          <name><surname>Barabási</surname><given-names>Albert-László</given-names></name>
        </person-group>
        <article-title>Statistical mechanics of complex networks</article-title>
        <source>Reviews of Modern Physics</source>
        <year iso-8601-date="2002-01">2002</year><month>01</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-02-06">2020</year><month>02</month><day>06</day></date-in-citation>
        <volume>74</volume>
        <issue>1</issue>
        <uri>https://link.aps.org/doi/10.1103/RevModPhys.74.47</uri>
        <pub-id pub-id-type="doi">10.1103/RevModPhys.74.47</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-boccaletti_complex_2006">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Boccaletti</surname><given-names>S.</given-names></name>
          <name><surname>Latora</surname><given-names>V.</given-names></name>
          <name><surname>Moreno</surname><given-names>Y.</given-names></name>
          <name><surname>Chavez</surname><given-names>M.</given-names></name>
          <name><surname>Hwang</surname><given-names>D. -U.</given-names></name>
        </person-group>
        <article-title>Complex networks: Structure and dynamics</article-title>
        <source>Physics Reports</source>
        <year iso-8601-date="2006-02">2006</year><month>02</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-01-31">2020</year><month>01</month><day>31</day></date-in-citation>
        <volume>424</volume>
        <issue>4</issue>
        <issn>0370-1573</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S037015730500462X</uri>
        <pub-id pub-id-type="doi">10.1016/j.physrep.2005.10.009</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-chopard_cellular_2002">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Chopard</surname><given-names>Bastien</given-names></name>
          <name><surname>Dupuis</surname><given-names>Alexandre</given-names></name>
          <name><surname>Masselot</surname><given-names>Alexandre</given-names></name>
          <name><surname>Luthi</surname><given-names>Pascal</given-names></name>
        </person-group>
        <article-title>Cellular automata and lattice boltzmann techniques: An approach to model and simulate complex systems</article-title>
        <source>Advances in Complex Systems</source>
        <year iso-8601-date="2002-06">2002</year><month>06</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-02-06">2020</year><month>02</month><day>06</day></date-in-citation>
        <volume>05</volume>
        <issue>02n03</issue>
        <issn>0219-5259</issn>
        <uri>https://www.worldscientific.com/doi/abs/10.1142/S0219525902000602</uri>
        <pub-id pub-id-type="doi">10.1142/S0219525902000602</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-storer_bridging_2017">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Storer</surname><given-names>Tim</given-names></name>
        </person-group>
        <article-title>Bridging the Chasm: A Survey of Software Engineering Practice in Scientific Programming</article-title>
        <source>ACM Computing Surveys (CSUR)</source>
        <year iso-8601-date="2017-08">2017</year><month>08</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-02-06">2020</year><month>02</month><day>06</day></date-in-citation>
        <volume>50</volume>
        <issue>4</issue>
        <issn>0360-0300</issn>
        <uri>https://doi.org/10.1145/3084225</uri>
        <pub-id pub-id-type="doi">10.1145/3084225</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-levin_2003_complex">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Levin</surname><given-names>Simon</given-names></name>
        </person-group>
        <article-title>Complex adaptive systems: Exploring the known, the unknown and the unknowable</article-title>
        <source>Bulletin of the American Mathematical Society</source>
        <year iso-8601-date="2003-10">2003</year><month>10</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-02-28">2020</year><month>02</month><day>28</day></date-in-citation>
        <volume>40</volume>
        <issue>1</issue>
        <pub-id pub-id-type="doi">10.1090/S0273-0979-02-00965-5</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-wilensky_1999_netlogo">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Wilensky</surname><given-names>U.</given-names></name>
        </person-group>
        <article-title>NetLogo</article-title>
        <publisher-name>Center for Connected Learning and Computer-Based Modeling, Northwestern University. Evanston, IL.</publisher-name>
        <year iso-8601-date="1999">1999</year>
        <uri>http://ccl.northwestern.edu/netlogo/</uri>
      </element-citation>
    </ref>
    <ref id="ref-sevinchan_2020_dantro">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sevinchan</surname><given-names>Yunus</given-names></name>
          <name><surname>Herdeanu</surname><given-names>Benjamin</given-names></name>
          <name><surname>Traub</surname><given-names>Jeremias</given-names></name>
        </person-group>
        <article-title>dantro: A Python package for handling, transforming, and visualizing hierarchically structured data</article-title>
        <source>Journal of Open Source Software</source>
        <publisher-name>The Open Journal</publisher-name>
        <year iso-8601-date="2020">2020</year>
        <volume>5</volume>
        <issue>52</issue>
        <uri>https://doi.org/10.21105/joss.02316</uri>
        <pub-id pub-id-type="doi">10.21105/joss.02316</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-sevinchan_2019_paramspace">
      <element-citation>
        <person-group person-group-type="author">
          <name><surname>Sevinchan</surname><given-names>Yunus</given-names></name>
        </person-group>
        <article-title>Paramspace, Version 2.3.1</article-title>
        <publisher-name>Python Package Index (PyPI)</publisher-name>
        <year iso-8601-date="2019">2019</year>
        <uri>https://pypi.org/project/paramspace/</uri>
      </element-citation>
    </ref>
    <ref id="ref-sevinchan_2020_iccs">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Sevinchan</surname><given-names>Yunus</given-names></name>
          <name><surname>Herdeanu</surname><given-names>Benjamin</given-names></name>
          <name><surname>Mack</surname><given-names>Harald</given-names></name>
          <name><surname>Riedel</surname><given-names>Lukas</given-names></name>
          <name><surname>Roth</surname><given-names>Kurt</given-names></name>
        </person-group>
        <article-title>Boosting group-level synergies by using a shared modeling framework</article-title>
        <source>Computational Science – ICCS 2020</source>
        <person-group person-group-type="editor">
          <name><surname>Krzhizhanovskaya</surname><given-names>Valeria V.</given-names></name>
          <name><surname>Závodszky</surname><given-names>Gábor</given-names></name>
          <name><surname>Lees</surname><given-names>Michael H.</given-names></name>
          <name><surname>Dongarra</surname><given-names>Jack J.</given-names></name>
          <name><surname>Sloot</surname><given-names>Peter M. A.</given-names></name>
          <name><surname>Brissos</surname><given-names>Sérgio</given-names></name>
          <name><surname>Teixeira</surname><given-names>João</given-names></name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham</publisher-loc>
        <year iso-8601-date="2020">2020</year>
        <volume>12143</volume>
        <isbn>978-3-030-50436-6</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-030-50436-6_32</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-herdeanu_2020_arxiv">
      <element-citation publication-type="manuscript">
        <person-group person-group-type="author">
          <name><surname>Herdeanu</surname><given-names>Benjamin</given-names></name>
          <name><surname>Mack</surname><given-names>Harald</given-names></name>
          <name><surname>Riedel</surname><given-names>Lukas</given-names></name>
          <name><surname>Sevinchan</surname><given-names>Yunus</given-names></name>
        </person-group>
        <article-title>Utopia: A comprehensive modeling framework for complex and evolving systems</article-title>
        <publisher-name>In preparation</publisher-name>
        <year iso-8601-date="2020">2020</year>
      </element-citation>
    </ref>
    <ref id="ref-kanewala_2014_testing">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Kanewala</surname><given-names>Upulee</given-names></name>
          <name><surname>Bieman</surname><given-names>James M.</given-names></name>
        </person-group>
        <article-title>Testing scientific software: A systematic literature review</article-title>
        <source>Information and Software Technology</source>
        <publisher-name>Elsevier BV</publisher-name>
        <year iso-8601-date="2014-10">2014</year><month>10</month>
        <volume>56</volume>
        <issue>10</issue>
        <pub-id pub-id-type="doi">10.1016/j.infsof.2014.05.006</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-vahdati_agentsjl_2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Vahdati</surname><given-names>Ali</given-names></name>
        </person-group>
        <article-title>Agents.jl: Agent-based modeling framework in Julia</article-title>
        <source>Journal of Open Source Software</source>
        <year iso-8601-date="2019-10">2019</year><month>10</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-03-03">2020</year><month>03</month><day>03</day></date-in-citation>
        <volume>4</volume>
        <issue>42</issue>
        <issn>2475-9066</issn>
        <uri>https://joss.theoj.org/papers/10.21105/joss.01611</uri>
        <pub-id pub-id-type="doi">10.21105/joss.01611</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-cardinot_evoplex_2019">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Cardinot</surname><given-names>Marcos</given-names></name>
          <name><surname>O’Riordan</surname><given-names>Colm</given-names></name>
          <name><surname>Griffith</surname><given-names>Josephine</given-names></name>
          <name><surname>Perc</surname><given-names>Matjaž</given-names></name>
        </person-group>
        <article-title>Evoplex: A platform for agent-based modeling on networks</article-title>
        <source>SoftwareX</source>
        <year iso-8601-date="2019-01">2019</year><month>01</month>
        <date-in-citation content-type="access-date"><year iso-8601-date="2020-03-03">2020</year><month>03</month><day>03</day></date-in-citation>
        <volume>9</volume>
        <issn>2352-7110</issn>
        <uri>http://www.sciencedirect.com/science/article/pii/S2352711018302437</uri>
        <pub-id pub-id-type="doi">10.1016/j.softx.2019.02.009</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-masad_2015_mesa">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Masad</surname><given-names>David</given-names></name>
          <name><surname>Kazil</surname><given-names>Jacqueline</given-names></name>
        </person-group>
        <article-title>Mesa: An agent-based modeling framework</article-title>
        <source>Proceedings of the 14th Python in Science Conference</source>
        <person-group person-group-type="editor">
          <name><surname>Huff</surname><given-names>Kathryn</given-names></name>
          <name><surname>Bergstra</surname><given-names>James</given-names></name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <pub-id pub-id-type="doi">10.25080/Majora-7b98e3ed-009</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-Drossel1992">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Drossel</surname><given-names>B.</given-names></name>
          <name><surname>Schwabl</surname><given-names>F.</given-names></name>
        </person-group>
        <article-title>Self-organized critical forest-fire model</article-title>
        <source>Phys. Rev. Lett.</source>
        <publisher-name>American Physical Society</publisher-name>
        <year iso-8601-date="1992-09">1992</year><month>09</month>
        <volume>69</volume>
        <uri>https://link.aps.org/doi/10.1103/PhysRevLett.69.1629</uri>
        <pub-id pub-id-type="doi">10.1103/PhysRevLett.69.1629</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-sanderson_armadillo_2016">
      <element-citation publication-type="article-journal">
        <person-group person-group-type="author">
          <name><surname>Sanderson</surname><given-names>Conrad</given-names></name>
          <name><surname>Curtin</surname><given-names>Ryan</given-names></name>
        </person-group>
        <article-title>Armadillo: A template-based C++ library for linear algebra</article-title>
        <source>Journal of Open Source Software</source>
        <publisher-name>The Open Journal</publisher-name>
        <year iso-8601-date="2016">2016</year>
        <volume>1</volume>
        <issue>2</issue>
        <uri>https://doi.org/10.21105/joss.00026</uri>
        <pub-id pub-id-type="doi">10.21105/joss.00026</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-sanderson_matrix_2018">
      <element-citation publication-type="paper-conference">
        <person-group person-group-type="author">
          <name><surname>Sanderson</surname><given-names>Conrad</given-names></name>
          <name><surname>Curtin</surname><given-names>Ryan</given-names></name>
        </person-group>
        <article-title>A user-friendly hybrid sparse matrix class in C++</article-title>
        <source>Mathematical software – ICMS 2018</source>
        <person-group person-group-type="editor">
          <name><surname>Davenport</surname><given-names>James H.</given-names></name>
          <name><surname>Kauers</surname><given-names>Manuel</given-names></name>
          <name><surname>Labahn</surname><given-names>George</given-names></name>
          <name><surname>Urban</surname><given-names>Josef</given-names></name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham</publisher-loc>
        <year iso-8601-date="2018">2018</year>
        <isbn>978-3-319-96418-8</isbn>
        <pub-id pub-id-type="doi">10.1007/978-3-319-96418-8_50</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</ref-list>
<fn-group>
  <fn id="fn1">
    <label>1</label><p>https://hub.docker.com/r/ccees/utopia</p>
  </fn>
</fn-group>
</back>
</article>
